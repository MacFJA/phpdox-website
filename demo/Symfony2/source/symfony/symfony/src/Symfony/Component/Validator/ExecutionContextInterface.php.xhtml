<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of ExecutionContextInterface.php</title><link rel="stylesheet" type="text/css" href="../../../../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../../../../classes.xhtml">Classes</a></li><li><a href="../../../../../../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../../../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file ExecutionContextInterface.php</h1><p>
                        Size: 12,355 Bytes - Last Modified: 2013-07-17T08:22:21+02:00</p><section><h2><small>/home/theseer/Downloads/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/</small>ExecutionContextInterface.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker" href="#line110">110</a><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker" href="#line122">122</a><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker" href="#line132">132</a><a class="anker" href="#line133">133</a><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a><a class="anker" href="#line137">137</a><a class="anker" href="#line138">138</a><a class="anker" href="#line139">139</a><a class="anker" href="#line140">140</a><a class="anker" href="#line141">141</a><a class="anker" href="#line142">142</a><a class="anker" href="#line143">143</a><a class="anker" href="#line144">144</a><a class="anker" href="#line145">145</a><a class="anker" href="#line146">146</a><a class="anker" href="#line147">147</a><a class="anker" href="#line148">148</a><a class="anker" href="#line149">149</a><a class="anker" href="#line150">150</a><a class="anker" href="#line151">151</a><a class="anker" href="#line152">152</a><a class="anker" href="#line153">153</a><a class="anker" href="#line154">154</a><a class="anker" href="#line155">155</a><a class="anker" href="#line156">156</a><a class="anker" href="#line157">157</a><a class="anker" href="#line158">158</a><a class="anker" href="#line159">159</a><a class="anker" href="#line160">160</a><a class="anker" href="#line161">161</a><a class="anker" href="#line162">162</a><a class="anker" href="#line163">163</a><a class="anker" href="#line164">164</a><a class="anker" href="#line165">165</a><a class="anker" href="#line166">166</a><a class="anker" href="#line167">167</a><a class="anker" href="#line168">168</a><a class="anker" href="#line169">169</a><a class="anker" href="#line170">170</a><a class="anker" href="#line171">171</a><a class="anker" href="#line172">172</a><a class="anker" href="#line173">173</a><a class="anker" href="#line174">174</a><a class="anker" href="#line175">175</a><a class="anker" href="#line176">176</a><a class="anker" href="#line177">177</a><a class="anker" href="#line178">178</a><a class="anker" href="#line179">179</a><a class="anker" href="#line180">180</a><a class="anker" href="#line181">181</a><a class="anker" href="#line182">182</a><a class="anker" href="#line183">183</a><a class="anker" href="#line184">184</a><a class="anker" href="#line185">185</a><a class="anker" href="#line186">186</a><a class="anker" href="#line187">187</a><a class="anker" href="#line188">188</a><a class="anker" href="#line189">189</a><a class="anker" href="#line190">190</a><a class="anker" href="#line191">191</a><a class="anker" href="#line192">192</a><a class="anker" href="#line193">193</a><a class="anker" href="#line194">194</a><a class="anker" href="#line195">195</a><a class="anker" href="#line196">196</a><a class="anker" href="#line197">197</a><a class="anker" href="#line198">198</a><a class="anker" href="#line199">199</a><a class="anker" href="#line200">200</a><a class="anker" href="#line201">201</a><a class="anker" href="#line202">202</a><a class="anker" href="#line203">203</a><a class="anker" href="#line204">204</a><a class="anker" href="#line205">205</a><a class="anker" href="#line206">206</a><a class="anker" href="#line207">207</a><a class="anker" href="#line208">208</a><a class="anker" href="#line209">209</a><a class="anker" href="#line210">210</a><a class="anker" href="#line211">211</a><a class="anker" href="#line212">212</a><a class="anker" href="#line213">213</a><a class="anker" href="#line214">214</a><a class="anker" href="#line215">215</a><a class="anker" href="#line216">216</a><a class="anker" href="#line217">217</a><a class="anker" href="#line218">218</a><a class="anker" href="#line219">219</a><a class="anker" href="#line220">220</a><a class="anker" href="#line221">221</a><a class="anker" href="#line222">222</a><a class="anker" href="#line223">223</a><a class="anker" href="#line224">224</a><a class="anker" href="#line225">225</a><a class="anker" href="#line226">226</a><a class="anker" href="#line227">227</a><a class="anker" href="#line228">228</a><a class="anker" href="#line229">229</a><a class="anker" href="#line230">230</a><a class="anker" href="#line231">231</a><a class="anker" href="#line232">232</a><a class="anker" href="#line233">233</a><a class="anker" href="#line234">234</a><a class="anker" href="#line235">235</a><a class="anker" href="#line236">236</a><a class="anker" href="#line237">237</a><a class="anker" href="#line238">238</a><a class="anker" href="#line239">239</a><a class="anker" href="#line240">240</a><a class="anker" href="#line241">241</a><a class="anker" href="#line242">242</a><a class="anker" href="#line243">243</a><a class="anker" href="#line244">244</a><a class="anker" href="#line245">245</a><a class="anker" href="#line246">246</a><a class="anker" href="#line247">247</a><a class="anker" href="#line248">248</a><a class="anker" href="#line249">249</a><a class="anker" href="#line250">250</a><a class="anker" href="#line251">251</a><a class="anker" href="#line252">252</a><a class="anker" href="#line253">253</a><a class="anker" href="#line254">254</a><a class="anker" href="#line255">255</a><a class="anker" href="#line256">256</a><a class="anker" href="#line257">257</a><a class="anker" href="#line258">258</a><a class="anker" href="#line259">259</a><a class="anker" href="#line260">260</a><a class="anker" href="#line261">261</a><a class="anker" href="#line262">262</a><a class="anker" href="#line263">263</a><a class="anker" href="#line264">264</a><a class="anker" href="#line265">265</a><a class="anker" href="#line266">266</a><a class="anker" href="#line267">267</a><a class="anker" href="#line268">268</a><a class="anker" href="#line269">269</a><a class="anker" href="#line270">270</a><a class="anker" href="#line271">271</a><a class="anker" href="#line272">272</a><a class="anker" href="#line273">273</a><a class="anker" href="#line274">274</a><a class="anker" href="#line275">275</a><a class="anker" href="#line276">276</a><a class="anker" href="#line277">277</a><a class="anker" href="#line278">278</a><a class="anker" href="#line279">279</a><a class="anker" href="#line280">280</a><a class="anker" href="#line281">281</a><a class="anker" href="#line282">282</a><a class="anker" href="#line283">283</a><a class="anker" href="#line284">284</a><a class="anker" href="#line285">285</a><a class="anker" href="#line286">286</a><a class="anker" href="#line287">287</a><a class="anker" href="#line288">288</a><a class="anker" href="#line289">289</a><a class="anker" href="#line290">290</a><a class="anker" href="#line291">291</a><a class="anker" href="#line292">292</a><a class="anker" href="#line293">293</a><a class="anker" href="#line294">294</a><a class="anker" href="#line295">295</a><a class="anker" href="#line296">296</a><a class="anker" href="#line297">297</a><a class="anker" href="#line298">298</a><a class="anker" href="#line299">299</a><a class="anker" href="#line300">300</a><a class="anker" href="#line301">301</a><a class="anker" href="#line302">302</a><a class="anker" href="#line303">303</a><a class="anker" href="#line304">304</a><a class="anker" href="#line305">305</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><br/></div><div id="line3"><pre><span class="token T_COMMENT">/*</span></pre></div><div id="line4"><pre><span class="token T_COMMENT"> * This file is part of the Symfony package.</span></pre></div><div id="line5"><pre><span class="token T_COMMENT"> *</span></pre></div><div id="line6"><pre><span class="token T_COMMENT"> * (c) Fabien Potencier &lt;fabien@symfony.com&gt;</span></pre></div><div id="line7"><pre><span class="token T_COMMENT"> *</span></pre></div><div id="line8"><pre><span class="token T_COMMENT"> * For the full copyright and license information, please view the LICENSE</span></pre></div><div id="line9"><pre><span class="token T_COMMENT"> * file that was distributed with this source code.</span></pre></div><div id="line10"><pre><span class="token T_COMMENT"> */</span></pre></div><div id="line11"><br/></div><div id="line12"><pre><span class="token T_NAMESPACE">namespace</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Symfony</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Component</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Validator</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line13"><br/></div><div id="line14"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line15"><pre><span class="token T_DOC_COMMENT"> * Stores the validator's state during validation.</span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> * For example, let's validate the following object graph:</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT"> * &lt;pre&gt;</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT"> * (Person)---($firstName: string)</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT"> *      \</span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT"> *   ($address: Address)---($street: string)</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT"> * &lt;/pre&gt;</span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT"> * We validate the &lt;tt&gt;Person&lt;/tt&gt; instance, which becomes the "root" of the</span></pre></div><div id="line26"><pre><span class="token T_DOC_COMMENT"> * validation run (see {@link getRoot}). The state of the context after the</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT"> * first step will be like this:</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT"> * &lt;pre&gt;</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT"> * (Person)---($firstName: string)</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT"> *    ^ \</span></pre></div><div id="line32"><pre><span class="token T_DOC_COMMENT"> *   ($address: Address)---($street: string)</span></pre></div><div id="line33"><pre><span class="token T_DOC_COMMENT"> * &lt;/pre&gt;</span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line35"><pre><span class="token T_DOC_COMMENT"> * The validator is stopped at the &lt;tt&gt;Person&lt;/tt&gt; node, both the root and the</span></pre></div><div id="line36"><pre><span class="token T_DOC_COMMENT"> * value (see {@link getValue}) of the context point to the &lt;tt&gt;Person&lt;/tt&gt;</span></pre></div><div id="line37"><pre><span class="token T_DOC_COMMENT"> * instance. The property path is empty at this point (see {@link getPropertyPath}).</span></pre></div><div id="line38"><pre><span class="token T_DOC_COMMENT"> * The metadata of the context is the metadata of the &lt;tt&gt;Person&lt;/tt&gt; node</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT"> * (see {@link getMetadata}).</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line41"><pre><span class="token T_DOC_COMMENT"> * After advancing to the property &lt;tt&gt;$firstName&lt;/tt&gt; of the &lt;tt&gt;Person&lt;/tt&gt;</span></pre></div><div id="line42"><pre><span class="token T_DOC_COMMENT"> * instance, the state of the context looks like this:</span></pre></div><div id="line43"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line44"><pre><span class="token T_DOC_COMMENT"> * &lt;pre&gt;</span></pre></div><div id="line45"><pre><span class="token T_DOC_COMMENT"> * (Person)---($firstName: string)</span></pre></div><div id="line46"><pre><span class="token T_DOC_COMMENT"> *      \              ^</span></pre></div><div id="line47"><pre><span class="token T_DOC_COMMENT"> *   ($address: Address)---($street: string)</span></pre></div><div id="line48"><pre><span class="token T_DOC_COMMENT"> * &lt;/pre&gt;</span></pre></div><div id="line49"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line50"><pre><span class="token T_DOC_COMMENT"> * The validator is stopped at the property &lt;tt&gt;$firstName&lt;/tt&gt;. The root still</span></pre></div><div id="line51"><pre><span class="token T_DOC_COMMENT"> * points to the &lt;tt&gt;Person&lt;/tt&gt; instance, because this is where the validation</span></pre></div><div id="line52"><pre><span class="token T_DOC_COMMENT"> * started. The property path is now "firstName" and the current value is the</span></pre></div><div id="line53"><pre><span class="token T_DOC_COMMENT"> * value of that property.</span></pre></div><div id="line54"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line55"><pre><span class="token T_DOC_COMMENT"> * After advancing to the &lt;tt&gt;$address&lt;/tt&gt; property and then to the</span></pre></div><div id="line56"><pre><span class="token T_DOC_COMMENT"> * &lt;tt&gt;$street&lt;/tt&gt; property of the &lt;tt&gt;Address&lt;/tt&gt; instance, the context state</span></pre></div><div id="line57"><pre><span class="token T_DOC_COMMENT"> * looks like this:</span></pre></div><div id="line58"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line59"><pre><span class="token T_DOC_COMMENT"> * &lt;pre&gt;</span></pre></div><div id="line60"><pre><span class="token T_DOC_COMMENT"> * (Person)---($firstName: string)</span></pre></div><div id="line61"><pre><span class="token T_DOC_COMMENT"> *      \</span></pre></div><div id="line62"><pre><span class="token T_DOC_COMMENT"> *   ($address: Address)---($street: string)</span></pre></div><div id="line63"><pre><span class="token T_DOC_COMMENT"> *                               ^</span></pre></div><div id="line64"><pre><span class="token T_DOC_COMMENT"> * &lt;/pre&gt;</span></pre></div><div id="line65"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line66"><pre><span class="token T_DOC_COMMENT"> * The validator is stopped at the property &lt;tt&gt;$street&lt;/tt&gt;. The root still</span></pre></div><div id="line67"><pre><span class="token T_DOC_COMMENT"> * points to the &lt;tt&gt;Person&lt;/tt&gt; instance, but the property path is now</span></pre></div><div id="line68"><pre><span class="token T_DOC_COMMENT"> * "address.street" and the validated value is the value of that property.</span></pre></div><div id="line69"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line70"><pre><span class="token T_DOC_COMMENT"> * Apart from the root, the property path and the currently validated value,</span></pre></div><div id="line71"><pre><span class="token T_DOC_COMMENT"> * the execution context also knows the metadata of the current node (see</span></pre></div><div id="line72"><pre><span class="token T_DOC_COMMENT"> * {@link getMetadata}) which for example returns a {@link Mapping\PropertyMetadata}</span></pre></div><div id="line73"><pre><span class="token T_DOC_COMMENT"> * or a {@link Mapping\ClassMetadata} object. he context also contains the</span></pre></div><div id="line74"><pre><span class="token T_DOC_COMMENT"> * validation group that is currently being validated (see {@link getGroup}) and</span></pre></div><div id="line75"><pre><span class="token T_DOC_COMMENT"> * the violations that happened up until now (see {@link getViolations}).</span></pre></div><div id="line76"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line77"><pre><span class="token T_DOC_COMMENT"> * Apart from reading the execution context, you can also use</span></pre></div><div id="line78"><pre><span class="token T_DOC_COMMENT"> * {@link addViolation} or {@link addViolationAt} to add new violations and</span></pre></div><div id="line79"><pre><span class="token T_DOC_COMMENT"> * {@link validate} or {@link validateValue} to validate values that the</span></pre></div><div id="line80"><pre><span class="token T_DOC_COMMENT"> * validator otherwise would not reach.</span></pre></div><div id="line81"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line82"><pre><span class="token T_DOC_COMMENT"> * @author Bernhard Schussek &lt;bschussek@gmail.com&gt;</span></pre></div><div id="line83"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line84"><pre><span class="token T_DOC_COMMENT"> * @api</span></pre></div><div id="line85"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line86"><pre><span class="token T_INTERFACE">interface</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">ExecutionContextInterface</span></pre></div><div id="line87"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line88"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line89"><pre><span class="token T_DOC_COMMENT">     * Adds a violation at the current node of the validation graph.</span></pre></div><div id="line90"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line91"><pre><span class="token T_DOC_COMMENT">     * @param string       $message       The error message.</span></pre></div><div id="line92"><pre><span class="token T_DOC_COMMENT">     * @param array        $params        The parameters substituted in the error message.</span></pre></div><div id="line93"><pre><span class="token T_DOC_COMMENT">     * @param mixed        $invalidValue  The invalid, validated value.</span></pre></div><div id="line94"><pre><span class="token T_DOC_COMMENT">     * @param integer|null $pluralization The number to use to pluralize of the message.</span></pre></div><div id="line95"><pre><span class="token T_DOC_COMMENT">     * @param integer|null $code          The violation code.</span></pre></div><div id="line96"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line97"><pre><span class="token T_DOC_COMMENT">     * @api</span></pre></div><div id="line98"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line99"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">addViolation</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$message</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$params</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$invalidValue</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$pluralization</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$code</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line100"><br/></div><div id="line101"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line102"><pre><span class="token T_DOC_COMMENT">     * Adds a violation at the validation graph node with the given property</span></pre></div><div id="line103"><pre><span class="token T_DOC_COMMENT">     * path relative to the current property path.</span></pre></div><div id="line104"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line105"><pre><span class="token T_DOC_COMMENT">     * @param string       $subPath       The relative property path for the violation.</span></pre></div><div id="line106"><pre><span class="token T_DOC_COMMENT">     * @param string       $message       The error message.</span></pre></div><div id="line107"><pre><span class="token T_DOC_COMMENT">     * @param array        $params        The parameters substituted in the error message.</span></pre></div><div id="line108"><pre><span class="token T_DOC_COMMENT">     * @param mixed        $invalidValue  The invalid, validated value.</span></pre></div><div id="line109"><pre><span class="token T_DOC_COMMENT">     * @param integer|null $pluralization The number to use to pluralize of the message.</span></pre></div><div id="line110"><pre><span class="token T_DOC_COMMENT">     * @param integer|null $code          The violation code.</span></pre></div><div id="line111"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line112"><pre><span class="token T_DOC_COMMENT">     * @api</span></pre></div><div id="line113"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line114"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">addViolationAt</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$subPath</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$message</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$params</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$invalidValue</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$pluralization</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$code</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line115"><br/></div><div id="line116"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line117"><pre><span class="token T_DOC_COMMENT">     * Validates the given value within the scope of the current validation.</span></pre></div><div id="line118"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line119"><pre><span class="token T_DOC_COMMENT">     * The value may be any value recognized by the used metadata factory</span></pre></div><div id="line120"><pre><span class="token T_DOC_COMMENT">     * (see {@link MetadataFactoryInterface::getMetadata}), or an array or a</span></pre></div><div id="line121"><pre><span class="token T_DOC_COMMENT">     * traversable object of such values.</span></pre></div><div id="line122"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line123"><pre><span class="token T_DOC_COMMENT">     * Usually you validate a value that is not the current node of the</span></pre></div><div id="line124"><pre><span class="token T_DOC_COMMENT">     * execution context. For this case, you can pass the {@link $subPath}</span></pre></div><div id="line125"><pre><span class="token T_DOC_COMMENT">     * argument which is appended to the current property path when a violation</span></pre></div><div id="line126"><pre><span class="token T_DOC_COMMENT">     * is created. For example, take the following object graph:</span></pre></div><div id="line127"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line128"><pre><span class="token T_DOC_COMMENT">     * &lt;pre&gt;</span></pre></div><div id="line129"><pre><span class="token T_DOC_COMMENT">     * (Person)---($address: Address)---($phoneNumber: PhoneNumber)</span></pre></div><div id="line130"><pre><span class="token T_DOC_COMMENT">     *                     ^</span></pre></div><div id="line131"><pre><span class="token T_DOC_COMMENT">     * &lt;/pre&gt;</span></pre></div><div id="line132"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line133"><pre><span class="token T_DOC_COMMENT">     * When the execution context stops at the &lt;tt&gt;Person&lt;/tt&gt; instance, the</span></pre></div><div id="line134"><pre><span class="token T_DOC_COMMENT">     * property path is "address". When you validate the &lt;tt&gt;PhoneNumber&lt;/tt&gt;</span></pre></div><div id="line135"><pre><span class="token T_DOC_COMMENT">     * instance now, pass "phoneNumber" as sub path to correct the property path</span></pre></div><div id="line136"><pre><span class="token T_DOC_COMMENT">     * to "address.phoneNumber":</span></pre></div><div id="line137"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line138"><pre><span class="token T_DOC_COMMENT">     * &lt;pre&gt;</span></pre></div><div id="line139"><pre><span class="token T_DOC_COMMENT">     * $context-&gt;validate($address-&gt;phoneNumber, 'phoneNumber');</span></pre></div><div id="line140"><pre><span class="token T_DOC_COMMENT">     * &lt;/pre&gt;</span></pre></div><div id="line141"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line142"><pre><span class="token T_DOC_COMMENT">     * Any violations generated during the validation will be added to the</span></pre></div><div id="line143"><pre><span class="token T_DOC_COMMENT">     * violation list that you can access with {@link getViolations}.</span></pre></div><div id="line144"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line145"><pre><span class="token T_DOC_COMMENT">     * @param mixed                $value    The value to validate.</span></pre></div><div id="line146"><pre><span class="token T_DOC_COMMENT">     * @param string               $subPath  The path to append to the context's property path.</span></pre></div><div id="line147"><pre><span class="token T_DOC_COMMENT">     * @param null|string|string[] $groups   The groups to validate in. If you don't pass any</span></pre></div><div id="line148"><pre><span class="token T_DOC_COMMENT">     *                                       groups here, the current group of the context</span></pre></div><div id="line149"><pre><span class="token T_DOC_COMMENT">     *                                       will be used.</span></pre></div><div id="line150"><pre><span class="token T_DOC_COMMENT">     * @param Boolean              $traverse Whether to traverse the value if it is an array</span></pre></div><div id="line151"><pre><span class="token T_DOC_COMMENT">     *                                       or an instance of &lt;tt&gt;\Traversable&lt;/tt&gt;.</span></pre></div><div id="line152"><pre><span class="token T_DOC_COMMENT">     * @param Boolean              $deep     Whether to traverse the value recursively if</span></pre></div><div id="line153"><pre><span class="token T_DOC_COMMENT">     *                                       it is a collection of collections.</span></pre></div><div id="line154"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line155"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">validate</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$value</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$subPath</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$groups</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$traverse</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$deep</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line156"><br/></div><div id="line157"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line158"><pre><span class="token T_DOC_COMMENT">     * Validates a value against a constraint.</span></pre></div><div id="line159"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line160"><pre><span class="token T_DOC_COMMENT">     * Use the parameter &lt;tt&gt;$subPath&lt;/tt&gt; to adapt the property path for the</span></pre></div><div id="line161"><pre><span class="token T_DOC_COMMENT">     * validated value. For example, take the following object graph:</span></pre></div><div id="line162"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line163"><pre><span class="token T_DOC_COMMENT">     * &lt;pre&gt;</span></pre></div><div id="line164"><pre><span class="token T_DOC_COMMENT">     * (Person)---($address: Address)---($street: string)</span></pre></div><div id="line165"><pre><span class="token T_DOC_COMMENT">     *                     ^</span></pre></div><div id="line166"><pre><span class="token T_DOC_COMMENT">     * &lt;/pre&gt;</span></pre></div><div id="line167"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line168"><pre><span class="token T_DOC_COMMENT">     * When the validator validates the &lt;tt&gt;Address&lt;/tt&gt; instance, the</span></pre></div><div id="line169"><pre><span class="token T_DOC_COMMENT">     * property path stored in the execution context is "address". When you</span></pre></div><div id="line170"><pre><span class="token T_DOC_COMMENT">     * manually validate the property &lt;tt&gt;$street&lt;/tt&gt; now, pass the sub path</span></pre></div><div id="line171"><pre><span class="token T_DOC_COMMENT">     * "street" to adapt the full property path to "address.street":</span></pre></div><div id="line172"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line173"><pre><span class="token T_DOC_COMMENT">     * &lt;pre&gt;</span></pre></div><div id="line174"><pre><span class="token T_DOC_COMMENT">     * $context-&gt;validate($address-&gt;street, new NotNull(), 'street');</span></pre></div><div id="line175"><pre><span class="token T_DOC_COMMENT">     * &lt;/pre&gt;</span></pre></div><div id="line176"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line177"><pre><span class="token T_DOC_COMMENT">     * @param mixed                   $value       The value to validate.</span></pre></div><div id="line178"><pre><span class="token T_DOC_COMMENT">     * @param Constraint|Constraint[] $constraints The constraint(s) to validate against.</span></pre></div><div id="line179"><pre><span class="token T_DOC_COMMENT">     * @param string                  $subPath     The path to append to the context's property path.</span></pre></div><div id="line180"><pre><span class="token T_DOC_COMMENT">     * @param null|string|string[]    $groups      The groups to validate in. If you don't pass any</span></pre></div><div id="line181"><pre><span class="token T_DOC_COMMENT">     *                                             groups here, the current group of the context</span></pre></div><div id="line182"><pre><span class="token T_DOC_COMMENT">     *                                             will be used.</span></pre></div><div id="line183"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line184"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">validateValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$value</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$constraints</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$subPath</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$groups</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line185"><br/></div><div id="line186"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line187"><pre><span class="token T_DOC_COMMENT">     * Returns the violations generated by the validator so far.</span></pre></div><div id="line188"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line189"><pre><span class="token T_DOC_COMMENT">     * @return ConstraintViolationListInterface The constraint violation list.</span></pre></div><div id="line190"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line191"><pre><span class="token T_DOC_COMMENT">     * @api</span></pre></div><div id="line192"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line193"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getViolations</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line194"><br/></div><div id="line195"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line196"><pre><span class="token T_DOC_COMMENT">     * Returns the value at which validation was started in the object graph.</span></pre></div><div id="line197"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line198"><pre><span class="token T_DOC_COMMENT">     * The validator, when given an object, traverses the properties and</span></pre></div><div id="line199"><pre><span class="token T_DOC_COMMENT">     * related objects and their properties. The root of the validation is the</span></pre></div><div id="line200"><pre><span class="token T_DOC_COMMENT">     * object from which the traversal started.</span></pre></div><div id="line201"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line202"><pre><span class="token T_DOC_COMMENT">     * The current value is returned by {@link getValue}.</span></pre></div><div id="line203"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line204"><pre><span class="token T_DOC_COMMENT">     * @return mixed The root value of the validation.</span></pre></div><div id="line205"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line206"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getRoot</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line207"><br/></div><div id="line208"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line209"><pre><span class="token T_DOC_COMMENT">     * Returns the value that the validator is currently validating.</span></pre></div><div id="line210"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line211"><pre><span class="token T_DOC_COMMENT">     * If you want to retrieve the object that was originally passed to the</span></pre></div><div id="line212"><pre><span class="token T_DOC_COMMENT">     * validator, use {@link getRoot}.</span></pre></div><div id="line213"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line214"><pre><span class="token T_DOC_COMMENT">     * @return mixed The currently validated value.</span></pre></div><div id="line215"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line216"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getValue</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line217"><br/></div><div id="line218"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line219"><pre><span class="token T_DOC_COMMENT">     * Returns the metadata for the currently validated value.</span></pre></div><div id="line220"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line221"><pre><span class="token T_DOC_COMMENT">     * With the core implementation, this method returns a</span></pre></div><div id="line222"><pre><span class="token T_DOC_COMMENT">     * {@link Mapping\ClassMetadata} instance if the current value is an object,</span></pre></div><div id="line223"><pre><span class="token T_DOC_COMMENT">     * a {@link Mapping\PropertyMetadata} instance if the current value is</span></pre></div><div id="line224"><pre><span class="token T_DOC_COMMENT">     * the value of a property and a {@link Mapping\GetterMetadata} instance if</span></pre></div><div id="line225"><pre><span class="token T_DOC_COMMENT">     * the validated value is the result of a getter method.</span></pre></div><div id="line226"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line227"><pre><span class="token T_DOC_COMMENT">     * If the validated value is neither of these, for example if the validator</span></pre></div><div id="line228"><pre><span class="token T_DOC_COMMENT">     * has been called with a plain value and constraint, this method returns</span></pre></div><div id="line229"><pre><span class="token T_DOC_COMMENT">     * null.</span></pre></div><div id="line230"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line231"><pre><span class="token T_DOC_COMMENT">     * @return MetadataInterface|null The metadata of the currently validated</span></pre></div><div id="line232"><pre><span class="token T_DOC_COMMENT">     *                                value.</span></pre></div><div id="line233"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line234"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getMetadata</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line235"><br/></div><div id="line236"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line237"><pre><span class="token T_DOC_COMMENT">     * Returns the used metadata factory.</span></pre></div><div id="line238"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line239"><pre><span class="token T_DOC_COMMENT">     * @return MetadataFactoryInterface The metadata factory.</span></pre></div><div id="line240"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line241"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getMetadataFactory</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line242"><br/></div><div id="line243"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line244"><pre><span class="token T_DOC_COMMENT">     * Returns the validation group that is currently being validated.</span></pre></div><div id="line245"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line246"><pre><span class="token T_DOC_COMMENT">     * @return string The current validation group.</span></pre></div><div id="line247"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line248"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getGroup</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line249"><br/></div><div id="line250"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line251"><pre><span class="token T_DOC_COMMENT">     * Returns the class name of the current node.</span></pre></div><div id="line252"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line253"><pre><span class="token T_DOC_COMMENT">     * If the metadata of the current node does not implement</span></pre></div><div id="line254"><pre><span class="token T_DOC_COMMENT">     * {@link ClassBasedInterface} or if no metadata is available for the</span></pre></div><div id="line255"><pre><span class="token T_DOC_COMMENT">     * current node, this method returns null.</span></pre></div><div id="line256"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line257"><pre><span class="token T_DOC_COMMENT">     * @return string|null The class name or null, if no class name could be found.</span></pre></div><div id="line258"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line259"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getClassName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line260"><br/></div><div id="line261"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line262"><pre><span class="token T_DOC_COMMENT">     * Returns the property name of the current node.</span></pre></div><div id="line263"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line264"><pre><span class="token T_DOC_COMMENT">     * If the metadata of the current node does not implement</span></pre></div><div id="line265"><pre><span class="token T_DOC_COMMENT">     * {@link PropertyMetadataInterface} or if no metadata is available for the</span></pre></div><div id="line266"><pre><span class="token T_DOC_COMMENT">     * current node, this method returns null.</span></pre></div><div id="line267"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line268"><pre><span class="token T_DOC_COMMENT">     * @return string|null The property name or null, if no property name could be found.</span></pre></div><div id="line269"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line270"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getPropertyName</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line271"><br/></div><div id="line272"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line273"><pre><span class="token T_DOC_COMMENT">     * Returns the property path to the value that the validator is currently</span></pre></div><div id="line274"><pre><span class="token T_DOC_COMMENT">     * validating.</span></pre></div><div id="line275"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line276"><pre><span class="token T_DOC_COMMENT">     * For example, take the following object graph:</span></pre></div><div id="line277"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line278"><pre><span class="token T_DOC_COMMENT">     * &lt;pre&gt;</span></pre></div><div id="line279"><pre><span class="token T_DOC_COMMENT">     * (Person)---($address: Address)---($street: string)</span></pre></div><div id="line280"><pre><span class="token T_DOC_COMMENT">     * &lt;/pre&gt;</span></pre></div><div id="line281"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line282"><pre><span class="token T_DOC_COMMENT">     * When the &lt;tt&gt;Person&lt;/tt&gt; instance is passed to the validator, the</span></pre></div><div id="line283"><pre><span class="token T_DOC_COMMENT">     * property path is initially empty. When the &lt;tt&gt;$address&lt;/tt&gt; property</span></pre></div><div id="line284"><pre><span class="token T_DOC_COMMENT">     * of that person is validated, the property path is "address". When</span></pre></div><div id="line285"><pre><span class="token T_DOC_COMMENT">     * the &lt;tt&gt;$street&lt;/tt&gt; property of the related &lt;tt&gt;Address&lt;/tt&gt; instance</span></pre></div><div id="line286"><pre><span class="token T_DOC_COMMENT">     * is validated, the property path is "address.street".</span></pre></div><div id="line287"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line288"><pre><span class="token T_DOC_COMMENT">     * Properties of objects are prefixed with a dot in the property path.</span></pre></div><div id="line289"><pre><span class="token T_DOC_COMMENT">     * Indices of arrays or objects implementing the {@link \ArrayAccess}</span></pre></div><div id="line290"><pre><span class="token T_DOC_COMMENT">     * interface are enclosed in brackets. For example, if the property in</span></pre></div><div id="line291"><pre><span class="token T_DOC_COMMENT">     * the previous example is &lt;tt&gt;$addresses&lt;/tt&gt; and contains an array</span></pre></div><div id="line292"><pre><span class="token T_DOC_COMMENT">     * of &lt;tt&gt;Address&lt;/tt&gt; instance, the property path generated for the</span></pre></div><div id="line293"><pre><span class="token T_DOC_COMMENT">     * &lt;tt&gt;$street&lt;/tt&gt; property of one of these addresses is for example</span></pre></div><div id="line294"><pre><span class="token T_DOC_COMMENT">     * "addresses[0].street".</span></pre></div><div id="line295"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line296"><pre><span class="token T_DOC_COMMENT">     * @param string $subPath Optional. The suffix appended to the current</span></pre></div><div id="line297"><pre><span class="token T_DOC_COMMENT">     *                        property path.</span></pre></div><div id="line298"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line299"><pre><span class="token T_DOC_COMMENT">     * @return string The current property path. The result may be an empty</span></pre></div><div id="line300"><pre><span class="token T_DOC_COMMENT">     *                string if the validator is currently validating the</span></pre></div><div id="line301"><pre><span class="token T_DOC_COMMENT">     *                root value of the validation graph.</span></pre></div><div id="line302"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line303"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getPropertyPath</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$subPath</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line304"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line305"><br/></div></td></tr></table></section></div><footer><span/></footer></body></html>
