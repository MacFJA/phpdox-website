<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of FormRendererInterface.php</title><link rel="stylesheet" type="text/css" href="../../../../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../../../../classes.xhtml">Classes</a></li><li><a href="../../../../../../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../../../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file FormRendererInterface.php</h1><p>
                        Size: 3,286 Bytes - Last Modified: 2013-07-17T08:22:21+02:00</p><section><h2><small>/home/theseer/Downloads/Symfony/vendor/symfony/symfony/src/Symfony/Component/Form/</small>FormRendererInterface.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a><a class="anker" href="#line76">76</a><a class="anker" href="#line77">77</a><a class="anker" href="#line78">78</a><a class="anker" href="#line79">79</a><a class="anker" href="#line80">80</a><a class="anker" href="#line81">81</a><a class="anker" href="#line82">82</a><a class="anker" href="#line83">83</a><a class="anker" href="#line84">84</a><a class="anker" href="#line85">85</a><a class="anker" href="#line86">86</a><a class="anker" href="#line87">87</a><a class="anker" href="#line88">88</a><a class="anker" href="#line89">89</a><a class="anker" href="#line90">90</a><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker" href="#line100">100</a><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><br/></div><div id="line3"><pre><span class="token T_COMMENT">/*</span></pre></div><div id="line4"><pre><span class="token T_COMMENT"> * This file is part of the Symfony package.</span></pre></div><div id="line5"><pre><span class="token T_COMMENT"> *</span></pre></div><div id="line6"><pre><span class="token T_COMMENT"> * (c) Fabien Potencier &lt;fabien@symfony.com&gt;</span></pre></div><div id="line7"><pre><span class="token T_COMMENT"> *</span></pre></div><div id="line8"><pre><span class="token T_COMMENT"> * For the full copyright and license information, please view the LICENSE</span></pre></div><div id="line9"><pre><span class="token T_COMMENT"> * file that was distributed with this source code.</span></pre></div><div id="line10"><pre><span class="token T_COMMENT"> */</span></pre></div><div id="line11"><br/></div><div id="line12"><pre><span class="token T_NAMESPACE">namespace</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Symfony</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Component</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Form</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line13"><br/></div><div id="line14"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line15"><pre><span class="token T_DOC_COMMENT"> * Renders a form into HTML.</span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> * @author Bernhard Schussek &lt;bschussek@gmail.com&gt;</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line19"><pre><span class="token T_INTERFACE">interface</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">FormRendererInterface</span></pre></div><div id="line20"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line21"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT">     * Returns the engine used by this renderer.</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT">     * @return FormRendererEngineInterface The renderer engine.</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line26"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getEngine</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line27"><br/></div><div id="line28"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT">     * Sets the theme(s) to be used for rendering a view and its children.</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT">     * @param FormView $view   The view to assign the theme(s) to.</span></pre></div><div id="line32"><pre><span class="token T_DOC_COMMENT">     * @param mixed             $themes The theme(s). The type of these themes</span></pre></div><div id="line33"><pre><span class="token T_DOC_COMMENT">     *                                  is open to the implementation.</span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line35"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">setTheme</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">FormView</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$view</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$themes</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line36"><br/></div><div id="line37"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line38"><pre><span class="token T_DOC_COMMENT">     * Renders a named block of the form theme.</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT">     * @param FormView $view      The view for which to render the block.</span></pre></div><div id="line41"><pre><span class="token T_DOC_COMMENT">     * @param string   $blockName The name of the block.</span></pre></div><div id="line42"><pre><span class="token T_DOC_COMMENT">     * @param array    $variables The variables to pass to the template.</span></pre></div><div id="line43"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line44"><pre><span class="token T_DOC_COMMENT">     * @return string The HTML markup</span></pre></div><div id="line45"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line46"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">renderBlock</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">FormView</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$view</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$blockName</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$variables</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line47"><br/></div><div id="line48"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line49"><pre><span class="token T_DOC_COMMENT">     * Searches and renders a block for a given name suffix.</span></pre></div><div id="line50"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line51"><pre><span class="token T_DOC_COMMENT">     * The block is searched by combining the block names stored in the</span></pre></div><div id="line52"><pre><span class="token T_DOC_COMMENT">     * form view with the given suffix. If a block name is found, that</span></pre></div><div id="line53"><pre><span class="token T_DOC_COMMENT">     * block is rendered.</span></pre></div><div id="line54"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line55"><pre><span class="token T_DOC_COMMENT">     * If this method is called recursively, the block search is continued</span></pre></div><div id="line56"><pre><span class="token T_DOC_COMMENT">     * where a block was found before.</span></pre></div><div id="line57"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line58"><pre><span class="token T_DOC_COMMENT">     * @param FormView $view            The view for which to render the block.</span></pre></div><div id="line59"><pre><span class="token T_DOC_COMMENT">     * @param string   $blockNameSuffix The suffix of the block name.</span></pre></div><div id="line60"><pre><span class="token T_DOC_COMMENT">     * @param array    $variables       The variables to pass to the template.</span></pre></div><div id="line61"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line62"><pre><span class="token T_DOC_COMMENT">     * @return string The HTML markup</span></pre></div><div id="line63"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line64"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">searchAndRenderBlock</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">FormView</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$view</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$blockNameSuffix</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$variables</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY">array</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line65"><br/></div><div id="line66"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line67"><pre><span class="token T_DOC_COMMENT">     * Renders a CSRF token.</span></pre></div><div id="line68"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line69"><pre><span class="token T_DOC_COMMENT">     * Use this helper for CSRF protection without the overhead of creating a</span></pre></div><div id="line70"><pre><span class="token T_DOC_COMMENT">     * form.</span></pre></div><div id="line71"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line72"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line73"><pre><span class="token T_DOC_COMMENT">     * &lt;input type="hidden" name="token" value="&lt;?php $renderer-&gt;renderCsrfToken('rm_user_'.$user-&gt;getId()) ?&gt;"&gt;</span></pre></div><div id="line74"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line75"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line76"><pre><span class="token T_DOC_COMMENT">     * Check the token in your action using the same intention.</span></pre></div><div id="line77"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line78"><pre><span class="token T_DOC_COMMENT">     * &lt;code&gt;</span></pre></div><div id="line79"><pre><span class="token T_DOC_COMMENT">     * $csrfProvider = $this-&gt;get('form.csrf_provider');</span></pre></div><div id="line80"><pre><span class="token T_DOC_COMMENT">     * if (!$csrfProvider-&gt;isCsrfTokenValid('rm_user_'.$user-&gt;getId(), $token)) {</span></pre></div><div id="line81"><pre><span class="token T_DOC_COMMENT">     *     throw new \RuntimeException('CSRF attack detected.');</span></pre></div><div id="line82"><pre><span class="token T_DOC_COMMENT">     * }</span></pre></div><div id="line83"><pre><span class="token T_DOC_COMMENT">     * &lt;/code&gt;</span></pre></div><div id="line84"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line85"><pre><span class="token T_DOC_COMMENT">     * @param string $intention The intention of the protected action</span></pre></div><div id="line86"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line87"><pre><span class="token T_DOC_COMMENT">     * @return string A CSRF token</span></pre></div><div id="line88"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line89"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">renderCsrfToken</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$intention</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line90"><br/></div><div id="line91"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line92"><pre><span class="token T_DOC_COMMENT">     * Makes a technical name human readable.</span></pre></div><div id="line93"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line94"><pre><span class="token T_DOC_COMMENT">     * Sequences of underscores are replaced by single spaces. The first letter</span></pre></div><div id="line95"><pre><span class="token T_DOC_COMMENT">     * of the resulting string is capitalized, while all other letters are</span></pre></div><div id="line96"><pre><span class="token T_DOC_COMMENT">     * turned to lowercase.</span></pre></div><div id="line97"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line98"><pre><span class="token T_DOC_COMMENT">     * @param string $text The text to humanize.</span></pre></div><div id="line99"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line100"><pre><span class="token T_DOC_COMMENT">     * @return string The humanized text.</span></pre></div><div id="line101"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line102"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">humanize</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$text</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line103"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line104"><br/></div></td></tr></table></section></div><footer><span/></footer></body></html>
