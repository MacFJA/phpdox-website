<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>phpDox - Source of MetadataInterface.php</title><link rel="stylesheet" type="text/css" href="../../../../../../../css/style.css" media="screen"/><link rel="stylesheet" href="../../../../../../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../namespaces.xhtml">Namespaces</a></li><li><a href="../../../../../../../interfaces.xhtml">Interfaces</a></li><li><a href="../../../../../../../classes.xhtml">Classes</a></li><li><a href="../../../../../../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../../../../../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../../../../../../index.xhtml">Overview</a></li><li class="separator"><a href="../../../../../../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file MetadataInterface.php</h1><p>
                        Size: 2,891 Bytes - Last Modified: 2013-07-17T08:22:21+02:00</p><section><h2><small>/home/theseer/Downloads/Symfony/vendor/symfony/symfony/src/Symfony/Component/Validator/</small>MetadataInterface.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker" href="#line48">48</a><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker" href="#line58">58</a><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><br/></div><div id="line3"><pre><span class="token T_COMMENT">/*</span></pre></div><div id="line4"><pre><span class="token T_COMMENT"> * This file is part of the Symfony package.</span></pre></div><div id="line5"><pre><span class="token T_COMMENT"> *</span></pre></div><div id="line6"><pre><span class="token T_COMMENT"> * (c) Fabien Potencier &lt;fabien@symfony.com&gt;</span></pre></div><div id="line7"><pre><span class="token T_COMMENT"> *</span></pre></div><div id="line8"><pre><span class="token T_COMMENT"> * For the full copyright and license information, please view the LICENSE</span></pre></div><div id="line9"><pre><span class="token T_COMMENT"> * file that was distributed with this source code.</span></pre></div><div id="line10"><pre><span class="token T_COMMENT"> */</span></pre></div><div id="line11"><br/></div><div id="line12"><pre><span class="token T_NAMESPACE">namespace</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Symfony</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Component</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Validator</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line13"><br/></div><div id="line14"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line15"><pre><span class="token T_DOC_COMMENT"> * A container for validation metadata.</span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> * The container contains constraints that may belong to different validation</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> * groups. Constraints for a specific group can be fetched by calling</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT"> * {@link findConstraints}.</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT"> * Implement this interface to add validation metadata to your own metadata</span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT"> * layer. Each metadata may have named properties. Each property can be</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT"> * represented by one or more {@link PropertyMetadataInterface} instances that</span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT"> * are returned by {@link getPropertyMetadata}. Since</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT"> * &lt;tt&gt;PropertyMetadataInterface&lt;/tt&gt; inherits from &lt;tt&gt;MetadataInterface&lt;/tt&gt;,</span></pre></div><div id="line26"><pre><span class="token T_DOC_COMMENT"> * each property may be divided into further properties.</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT"> * The {@link accept} method of each metadata implements the Visitor pattern.</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT"> * The method should forward the call to the visitor's</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT"> * {@link ValidationVisitorInterface::visit} method and additionally call</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT"> * &lt;tt&gt;accept()&lt;/tt&gt; on all structurally related metadata instances.</span></pre></div><div id="line32"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line33"><pre><span class="token T_DOC_COMMENT"> * For example, to store constraints for PHP classes and their properties,</span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT"> * create a class &lt;tt&gt;ClassMetadata&lt;/tt&gt; (implementing &lt;tt&gt;MetadataInterface&lt;/tt&gt;)</span></pre></div><div id="line35"><pre><span class="token T_DOC_COMMENT"> * and a class &lt;tt&gt;PropertyMetadata&lt;/tt&gt; (implementing &lt;tt&gt;PropertyMetadataInterface&lt;/tt&gt;).</span></pre></div><div id="line36"><pre><span class="token T_DOC_COMMENT"> * &lt;tt&gt;ClassMetadata::getPropertyMetadata($property)&lt;/tt&gt; returns all</span></pre></div><div id="line37"><pre><span class="token T_DOC_COMMENT"> * &lt;tt&gt;PropertyMetadata&lt;/tt&gt; instances for a property of that class. Its</span></pre></div><div id="line38"><pre><span class="token T_DOC_COMMENT"> * &lt;tt&gt;accept()&lt;/tt&gt;-method simply forwards to &lt;tt&gt;ValidationVisitorInterface::visit()&lt;/tt&gt;</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT"> * and calls &lt;tt&gt;accept()&lt;/tt&gt; on all contained &lt;tt&gt;PropertyMetadata&lt;/tt&gt;</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT"> * instances, which themselves call &lt;tt&gt;ValidationVisitorInterface::visit()&lt;/tt&gt;</span></pre></div><div id="line41"><pre><span class="token T_DOC_COMMENT"> * again.</span></pre></div><div id="line42"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line43"><pre><span class="token T_DOC_COMMENT"> * @author Bernhard Schussek &lt;bschussek@gmail.com&gt;</span></pre></div><div id="line44"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line45"><pre><span class="token T_INTERFACE">interface</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">MetadataInterface</span></pre></div><div id="line46"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line47"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line48"><pre><span class="token T_DOC_COMMENT">     * Implementation of the Visitor design pattern.</span></pre></div><div id="line49"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line50"><pre><span class="token T_DOC_COMMENT">     * Calls {@link ValidationVisitorInterface::visit} and then forwards the</span></pre></div><div id="line51"><pre><span class="token T_DOC_COMMENT">     * &lt;tt&gt;accept()&lt;/tt&gt;-call to all property metadata instances.</span></pre></div><div id="line52"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line53"><pre><span class="token T_DOC_COMMENT">     * @param ValidationVisitorInterface $visitor      The visitor implementing the validation logic.</span></pre></div><div id="line54"><pre><span class="token T_DOC_COMMENT">     * @param mixed                      $value        The value to validate.</span></pre></div><div id="line55"><pre><span class="token T_DOC_COMMENT">     * @param string|string[]            $group        The validation group to validate in.</span></pre></div><div id="line56"><pre><span class="token T_DOC_COMMENT">     * @param string                     $propertyPath The current property path in the validation graph.</span></pre></div><div id="line57"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line58"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">accept</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">ValidationVisitorInterface</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$visitor</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$value</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$group</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$propertyPath</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line59"><br/></div><div id="line60"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line61"><pre><span class="token T_DOC_COMMENT">     * Returns all constraints for a given validation group.</span></pre></div><div id="line62"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line63"><pre><span class="token T_DOC_COMMENT">     * @param string $group The validation group.</span></pre></div><div id="line64"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line65"><pre><span class="token T_DOC_COMMENT">     * @return Constraint[] A list of constraint instances.</span></pre></div><div id="line66"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line67"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">findConstraints</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$group</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line68"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line69"><br/></div></td></tr></table></section></div><footer><span/></footer></body></html>
