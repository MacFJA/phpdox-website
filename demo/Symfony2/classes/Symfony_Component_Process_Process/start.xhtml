<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en">
  <head>
    <title>phpDox - Test Method</title>
    <link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml#Symfony_Component_Process">Symfony\Component\Process</a>
          </li>
          <li class="separator">
            <a title="Symfony\Component\Process\Process" href="../../classes/Symfony_Component_Process_Process.xhtml">Process</a>
          </li>
          <li class="separator">start</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#parameter">Parameter</a>
          </li>
          <li>
            <a href="#throws">Throws</a>
          </li>
          <li>
            <a href="../../source/symfony/symfony/src/Symfony/Component/Process/Process.php.xhtml#line228">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1><small>Symfony\Component\Process\Process::</small>start</h1>
        <h4>Starts the process and returns after sending the STDIN.</h4>
        <p>This method blocks until all STDIN data is sent to the process then it
returns while the process runs in the background.

The termination of the process can be awaited with wait().

The callback receives the type of output (out or err) and some bytes from
the output in real-time while writing the standard input to the process.
It allows to have feedback from the independent process during execution.
If there is no callback passed, the wait() method can be called
with true as a second parameter then the callback will get all data occurred
in (and since) the start call.</p>
        <ul/>
        <h2 id="signature">Signature</h2>
        <div class="styled synopsis">
          <code>public function start([<a title="Symfony\Component\Process\callback|null" href="../../classes/Symfony_Component_Process_callback|null.xhtml">callback|null</a>
        $callback = null] )
            </code>
        </div>
        <h2 id="parameterlist">Parameters</h2>
        <dl class="styled">
          <dt><code>$callback</code>
                —
                object</dt>
          <dd>A PHP callback to run whenever there is some<br/>output available on STDOUT or STDERR</dd>
        </dl>
        <h2 id="throws">Errors/Exceptions</h2>
        <dl class="styled">
          <dt>
            <code>
              <a title="Symfony\Component\Process\Exception\RuntimeException" href="../../classes/Symfony_Component_Process_Exception_RuntimeException.xhtml">RuntimeException</a>
            </code>
          </dt>
          <dd>When process can't be launch or is stopped</dd>
          <dt>
            <code>
              <a title="Symfony\Component\Process\Exception\RuntimeException" href="../../classes/Symfony_Component_Process_Exception_RuntimeException.xhtml">RuntimeException</a>
            </code>
          </dt>
          <dd>When process is already running</dd>
        </dl>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
