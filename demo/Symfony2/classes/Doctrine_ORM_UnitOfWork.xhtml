<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Doctrine\ORM\UnitOfWork</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Doctrine_ORM">Doctrine\ORM</a>
          </li>
          <li class="separator">UnitOfWork</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/doctrine/orm/lib/Doctrine/ORM/UnitOfWork.php.xhtml#line44">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Doctrine\ORM\</small>UnitOfWork</h1>
        <h4>The UnitOfWork is responsible for tracking changes to objects during an "object-level" transaction and for writing out changes to the database in the correct order.</h4>
        <p/>
        <ul>
          <li>Author: Benjamin Eberlei &lt;kontakt@beberlei.de&gt;</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class UnitOfWork
                implements
                <a title="Doctrine\Common\PropertyChangedListener" href="../interfaces/Doctrine_Common_PropertyChangedListener.xhtml">PropertyChangedListener</a>
            {<br/><ul class="none"><li>// constants</li><li>const STATE_MANAGED = 1;</li><li>const STATE_NEW = 2;</li><li>const STATE_DETACHED = 3;</li><li>const STATE_REMOVED = 4;</li><li>const HINT_DEFEREAGERLOAD = 'deferEagerLoad';</li></ul><ul class="none"><li>// members</li><li>private array <a href="#members">$identityMap</a>;
                    </li><li>private array <a href="#members">$entityIdentifiers</a>;
                    </li><li>private array <a href="#members">$originalEntityData</a>;
                    </li><li>private array <a href="#members">$entityChangeSets</a>;
                    </li><li>private array <a href="#members">$entityStates</a>;
                    </li><li>private array <a href="#members">$scheduledForDirtyCheck</a>;
                    </li><li>private array <a href="#members">$entityInsertions</a>;
                    </li><li>private array <a href="#members">$entityUpdates</a>;
                    </li><li>private array <a href="#members">$extraUpdates</a>;
                    </li><li>private array <a href="#members">$entityDeletions</a>;
                    </li><li>private array <a href="#members">$collectionDeletions</a>;
                    </li><li>private array <a href="#members">$collectionUpdates</a>;
                    </li><li>private array <a href="#members">$visitedCollections</a>;
                    </li><li>private <span title="\Doctrine\ORM\EntityManager">EntityManager</span> <a href="#members">$em</a>;
                    </li><li>private <span title="\Doctrine\ORM\Internal\CommitOrderCalculator">CommitOrderCalculator</span> <a href="#members">$commitOrderCalculator</a>;
                    </li><li>private array <a href="#members">$persisters</a>;
                    </li><li>private array <a href="#members">$collectionPersisters</a>;
                    </li><li>private <span title="\Doctrine\Common\EventManager">EventManager</span> <a href="#members">$evm</a>;
                    </li><li>private array <a href="#members">$orphanRemovals</a>;
                    </li><li>private array <a href="#members">$readOnlyObjects</a>;
                    </li><li>private array <a href="#members">$eagerLoadingEntities</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/__construct.xhtml">__construct</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/commit.xhtml">commit</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/computeScheduleInsertsChangeSets.xhtml">computeScheduleInsertsChangeSets</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/computeSingleEntityChangeSet.xhtml">computeSingleEntityChangeSet</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/executeExtraUpdates.xhtml">executeExtraUpdates</a>()
                    </li><li>public array <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getEntityChangeSet.xhtml">getEntityChangeSet</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/computeChangeSet.xhtml">computeChangeSet</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/computeChangeSets.xhtml">computeChangeSets</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/computeAssociationChanges.xhtml">computeAssociationChanges</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/persistNew.xhtml">persistNew</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/recomputeSingleEntityChangeSet.xhtml">recomputeSingleEntityChangeSet</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/executeInserts.xhtml">executeInserts</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/executeUpdates.xhtml">executeUpdates</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/executeDeletions.xhtml">executeDeletions</a>()
                    </li><li>private array <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getCommitOrder.xhtml">getCommitOrder</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/scheduleForInsert.xhtml">scheduleForInsert</a>()
                    </li><li>public boolean <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isScheduledForInsert.xhtml">isScheduledForInsert</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/scheduleForUpdate.xhtml">scheduleForUpdate</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/scheduleExtraUpdate.xhtml">scheduleExtraUpdate</a>()
                    </li><li>public boolean <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isScheduledForUpdate.xhtml">isScheduledForUpdate</a>()
                    </li><li>public boolean <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isScheduledForDirtyCheck.xhtml">isScheduledForDirtyCheck</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/scheduleForDelete.xhtml">scheduleForDelete</a>()
                    </li><li>public boolean <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isScheduledForDelete.xhtml">isScheduledForDelete</a>()
                    </li><li>public boolean <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isEntityScheduled.xhtml">isEntityScheduled</a>()
                    </li><li>public boolean <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/addToIdentityMap.xhtml">addToIdentityMap</a>()
                    </li><li>public int <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getEntityState.xhtml">getEntityState</a>()
                    </li><li>public boolean <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/removeFromIdentityMap.xhtml">removeFromIdentityMap</a>()
                    </li><li>public  <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getByIdHash.xhtml">getByIdHash</a>()
                    </li><li>public mixed <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/tryGetByIdHash.xhtml">tryGetByIdHash</a>()
                    </li><li>public boolean <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isInIdentityMap.xhtml">isInIdentityMap</a>()
                    </li><li>public boolean <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/containsIdHash.xhtml">containsIdHash</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/persist.xhtml">persist</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/doPersist.xhtml">doPersist</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/remove.xhtml">remove</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/doRemove.xhtml">doRemove</a>()
                    </li><li>public  <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/merge.xhtml">merge</a>()
                    </li><li>private array <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/flattenIdentifier.xhtml">flattenIdentifier</a>()
                    </li><li>private  <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/doMerge.xhtml">doMerge</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/detach.xhtml">detach</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/doDetach.xhtml">doDetach</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/refresh.xhtml">refresh</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/doRefresh.xhtml">doRefresh</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/cascadeRefresh.xhtml">cascadeRefresh</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/cascadeDetach.xhtml">cascadeDetach</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/cascadeMerge.xhtml">cascadeMerge</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/cascadePersist.xhtml">cascadePersist</a>()
                    </li><li>private void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/cascadeRemove.xhtml">cascadeRemove</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/lock.xhtml">lock</a>()
                    </li><li>public CommitOrderCalculator <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getCommitOrderCalculator.xhtml">getCommitOrderCalculator</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/clear.xhtml">clear</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/scheduleOrphanRemoval.xhtml">scheduleOrphanRemoval</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/scheduleCollectionDeletion.xhtml">scheduleCollectionDeletion</a>()
                    </li><li>public bool <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isCollectionScheduledForDeletion.xhtml">isCollectionScheduledForDeletion</a>()
                    </li><li>private ObjectManagerAware|object <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/newInstance.xhtml">newInstance</a>()
                    </li><li>public  <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/createEntity.xhtml">createEntity</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/triggerEagerLoads.xhtml">triggerEagerLoads</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/loadCollection.xhtml">loadCollection</a>()
                    </li><li>public array <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getIdentityMap.xhtml">getIdentityMap</a>()
                    </li><li>public array <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getOriginalEntityData.xhtml">getOriginalEntityData</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/setOriginalEntityData.xhtml">setOriginalEntityData</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/setOriginalEntityProperty.xhtml">setOriginalEntityProperty</a>()
                    </li><li>public array <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getEntityIdentifier.xhtml">getEntityIdentifier</a>()
                    </li><li>public mixed <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/tryGetById.xhtml">tryGetById</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/scheduleForDirtyCheck.xhtml">scheduleForDirtyCheck</a>()
                    </li><li>public boolean <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/hasPendingInsertions.xhtml">hasPendingInsertions</a>()
                    </li><li>public integer <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/size.xhtml">size</a>()
                    </li><li>public BasicEntityPersister <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getEntityPersister.xhtml">getEntityPersister</a>()
                    </li><li>public AbstractCollectionPersister <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getCollectionPersister.xhtml">getCollectionPersister</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/registerManaged.xhtml">registerManaged</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/clearEntityChangeSet.xhtml">clearEntityChangeSet</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/propertyChanged.xhtml">propertyChanged</a>()
                    </li><li>public array <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getScheduledEntityInsertions.xhtml">getScheduledEntityInsertions</a>()
                    </li><li>public array <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getScheduledEntityUpdates.xhtml">getScheduledEntityUpdates</a>()
                    </li><li>public array <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getScheduledEntityDeletions.xhtml">getScheduledEntityDeletions</a>()
                    </li><li>public array <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getScheduledCollectionDeletions.xhtml">getScheduledCollectionDeletions</a>()
                    </li><li>public array <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getScheduledCollectionUpdates.xhtml">getScheduledCollectionUpdates</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/initializeObject.xhtml">initializeObject</a>()
                    </li><li>private static string <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/objToStr.xhtml">objToStr</a>()
                    </li><li>public void <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/markReadOnly.xhtml">markReadOnly</a>()
                    </li><li>public bool <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isReadOnly.xhtml">isReadOnly</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Implements</h4>
          <ul>
            <li>
              <a href="../interfaces/Doctrine_Common_PropertyChangedListener.xhtml">Doctrine\Common\PropertyChangedListener</a>
            </li>
          </ul>
        </div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">+</td>
            <td>rename: scheduledForSynchronization</td>
          </tr>
          <tr>
            <td class="nummeric">1697+</td>
            <td>Require active transaction!? OptimisticLockException may result in undefined state!?</td>
          </tr>
          <tr>
            <td class="nummeric">2366</td>
            <td>if $coll is already scheduled for recreation ... what to do?</td>
          </tr>
          <tr>
            <td class="nummeric">2415+</td>
            <td>Rename: getOrCreateEntity</td>
          </tr>
          <tr>
            <td class="nummeric">2697+</td>
            <td>Maybe later move to EntityManager#initialize($proxyOrCollection). See DDC-733.</td>
          </tr>
          <tr>
            <td class="nummeric">2806+</td>
            <td>Rename: scheduleForSynchronization</td>
          </tr>
        </table>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="STATE_MANAGED">STATE_MANAGED</td>
              <td>1</td>
            </tr>
            <tr>
              <td id="STATE_NEW">STATE_NEW</td>
              <td>2</td>
            </tr>
            <tr>
              <td id="STATE_DETACHED">STATE_DETACHED</td>
              <td>3</td>
            </tr>
            <tr>
              <td id="STATE_REMOVED">STATE_REMOVED</td>
              <td>4</td>
            </tr>
            <tr>
              <td id="HINT_DEFEREAGERLOAD">HINT_DEFEREAGERLOAD</td>
              <td>'deferEagerLoad'</td>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="collectionDeletions"><strong>$collectionDeletions</strong>
                —
                array<br/><span class="indent">All pending collection deletions.</span></li>
            <li id="collectionPersisters"><strong>$collectionPersisters</strong>
                —
                array<br/><span class="indent">The collection persister instances used to persist collections.</span></li>
            <li id="collectionUpdates"><strong>$collectionUpdates</strong>
                —
                array<br/><span class="indent">All pending collection updates.</span></li>
            <li id="commitOrderCalculator"><strong>$commitOrderCalculator</strong>
                —
                <a href="#">\Doctrine\ORM\Internal\CommitOrderCalculator</a><br/><span class="indent">The calculator used to calculate the order in which changes to entities need to be written to the database.</span></li>
            <li id="eagerLoadingEntities"><strong>$eagerLoadingEntities</strong>
                —
                array<br/><span class="indent">Map of Entity Class-Names and corresponding IDs that should eager loaded when requested.</span></li>
            <li id="em"><strong>$em</strong>
                —
                <a href="#">\Doctrine\ORM\EntityManager</a><br/><span class="indent">The EntityManager that "owns" this UnitOfWork instance.</span></li>
            <li id="entityChangeSets"><strong>$entityChangeSets</strong>
                —
                array<br/><span class="indent">Map of entity changes. Keys are object ids (spl_object_hash).</span></li>
            <li id="entityDeletions"><strong>$entityDeletions</strong>
                —
                array<br/><span class="indent">A list of all pending entity deletions.</span></li>
            <li id="entityIdentifiers"><strong>$entityIdentifiers</strong>
                —
                array<br/><span class="indent">Map of all identifiers of managed entities.</span></li>
            <li id="entityInsertions"><strong>$entityInsertions</strong>
                —
                array<br/><span class="indent">A list of all pending entity insertions.</span></li>
            <li id="entityStates"><strong>$entityStates</strong>
                —
                array<br/><span class="indent">The (cached) states of any known entities.</span></li>
            <li id="entityUpdates"><strong>$entityUpdates</strong>
                —
                array<br/><span class="indent">A list of all pending entity updates.</span></li>
            <li id="evm"><strong>$evm</strong>
                —
                <a href="#">\Doctrine\Common\EventManager</a><br/><span class="indent">The EventManager used for dispatching events.</span></li>
            <li id="extraUpdates"><strong>$extraUpdates</strong>
                —
                array<br/><span class="indent">Any pending extra updates that have been scheduled by persisters.</span></li>
            <li id="identityMap"><strong>$identityMap</strong>
                —
                array<br/><span class="indent">The identity map that holds references to all managed entities that have an identity. The entities are grouped by their class name.</span></li>
            <li id="originalEntityData"><strong>$originalEntityData</strong>
                —
                array<br/><span class="indent">Map of the original entity data of managed entities.</span></li>
            <li id="orphanRemovals"><strong>$orphanRemovals</strong>
                —
                array<br/><span class="indent">Orphaned entities that are scheduled for removal.</span></li>
            <li id="persisters"><strong>$persisters</strong>
                —
                array<br/><span class="indent">The entity persister instances used to persist entity instances.</span></li>
            <li id="readOnlyObjects"><strong>$readOnlyObjects</strong>
                —
                array<br/><span class="indent">Read-Only objects are never evaluated</span></li>
            <li id="scheduledForDirtyCheck"><strong>$scheduledForDirtyCheck</strong>
                —
                array<br/><span class="indent">Map of entities that are scheduled for dirty checking at commit time.</span></li>
            <li id="visitedCollections"><strong>$visitedCollections</strong>
                —
                array<br/><span class="indent">List of collections visited during changeset calculation on a commit-phase of a UnitOfWork.</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="cascadeDetach"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/cascadeDetach.xhtml">cascadeDetach()</a>
                — Cascades a detach operation to associated entities.</li>
            <li id="cascadeMerge"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/cascadeMerge.xhtml">cascadeMerge()</a>
                — Cascades a merge operation to associated entities.</li>
            <li id="cascadePersist"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/cascadePersist.xhtml">cascadePersist()</a>
                — Cascades the save operation to associated entities.</li>
            <li id="cascadeRefresh"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/cascadeRefresh.xhtml">cascadeRefresh()</a>
                — Cascades a refresh operation to associated entities.</li>
            <li id="cascadeRemove"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/cascadeRemove.xhtml">cascadeRemove()</a>
                — Cascades the delete operation to associated entities.</li>
            <li id="computeAssociationChanges"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/computeAssociationChanges.xhtml">computeAssociationChanges()</a>
                — Computes the changes of an association.</li>
            <li id="computeScheduleInsertsChangeSets"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/computeScheduleInsertsChangeSets.xhtml">computeScheduleInsertsChangeSets()</a>
                — Compute the changesets of all entities scheduled for insertion</li>
            <li id="computeSingleEntityChangeSet"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/computeSingleEntityChangeSet.xhtml">computeSingleEntityChangeSet()</a>
                — Only flush the given entity according to a ruleset that keeps the UoW consistent.</li>
            <li id="doDetach"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/doDetach.xhtml">doDetach()</a>
                — Executes a detach operation on the given entity.</li>
            <li id="doMerge"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/doMerge.xhtml">doMerge()</a>
                — Executes a merge operation on an entity.</li>
            <li id="doPersist"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/doPersist.xhtml">doPersist()</a>
                — Persists an entity as part of the current unit of work.</li>
            <li id="doRefresh"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/doRefresh.xhtml">doRefresh()</a>
                — Executes a refresh operation on an entity.</li>
            <li id="doRemove"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/doRemove.xhtml">doRemove()</a>
                — Deletes an entity as part of the current unit of work.</li>
            <li id="executeDeletions"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/executeDeletions.xhtml">executeDeletions()</a>
                — Executes all entity deletions for entities of the specified type.</li>
            <li id="executeExtraUpdates"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/executeExtraUpdates.xhtml">executeExtraUpdates()</a>
                — Executes any extra updates that have been scheduled.</li>
            <li id="executeInserts"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/executeInserts.xhtml">executeInserts()</a>
                — Executes all entity insertions for entities of the specified type.</li>
            <li id="executeUpdates"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/executeUpdates.xhtml">executeUpdates()</a>
                — Executes all entity updates for entities of the specified type.</li>
            <li id="flattenIdentifier"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/flattenIdentifier.xhtml">flattenIdentifier()</a>
                — convert foreign identifiers into scalar foreign key values to avoid object to string conversion failures.</li>
            <li id="getCommitOrder"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getCommitOrder.xhtml">getCommitOrder()</a>
                — Gets the commit order.</li>
            <li id="newInstance">
              <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/newInstance.xhtml">newInstance()</a>
            </li>
            <li id="objToStr"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/objToStr.xhtml">objToStr()</a>
                — Helper method to show an object as string.</li>
            <li id="persistNew">
              <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/persistNew.xhtml">persistNew()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/__construct.xhtml">__construct()</a>
                — Initializes a new UnitOfWork instance, bound to the given EntityManager.</li>
            <li id="addToIdentityMap"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/addToIdentityMap.xhtml">addToIdentityMap()</a>
                — INTERNAL: Registers an entity in the identity map.</li>
            <li id="clear"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/clear.xhtml">clear()</a>
                — Clears the UnitOfWork.</li>
            <li id="clearEntityChangeSet"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/clearEntityChangeSet.xhtml">clearEntityChangeSet()</a>
                — INTERNAL: Clears the property changeset of the entity with the given OID.</li>
            <li id="commit"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/commit.xhtml">commit()</a>
                — Commits the UnitOfWork, executing all operations that have been postponed up to this point. The state of all managed entities will be synchronized with the database.</li>
            <li id="computeChangeSet"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/computeChangeSet.xhtml">computeChangeSet()</a>
                — Computes the changes that happened to a single entity.</li>
            <li id="computeChangeSets"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/computeChangeSets.xhtml">computeChangeSets()</a>
                — Computes all the changes that have been done to entities and collections since the last commit and stores these changes in the _entityChangeSet map temporarily for access by the persisters, until the UoW commit is finished.</li>
            <li id="containsIdHash"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/containsIdHash.xhtml">containsIdHash()</a>
                — INTERNAL: Checks whether an identifier hash exists in the identity map.</li>
            <li id="createEntity"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/createEntity.xhtml">createEntity()</a>
                — INTERNAL: Creates an entity. Used for reconstitution of persistent entities.</li>
            <li id="detach"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/detach.xhtml">detach()</a>
                — Detaches an entity from the persistence management. It's persistence will no longer be managed by Doctrine.</li>
            <li id="getByIdHash"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getByIdHash.xhtml">getByIdHash()</a>
                — INTERNAL: Gets an entity in the identity map by its identifier hash.</li>
            <li id="getCollectionPersister"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getCollectionPersister.xhtml">getCollectionPersister()</a>
                — Gets a collection persister for a collection-valued association.</li>
            <li id="getCommitOrderCalculator"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getCommitOrderCalculator.xhtml">getCommitOrderCalculator()</a>
                — Gets the CommitOrderCalculator used by the UnitOfWork to order commits.</li>
            <li id="getEntityChangeSet"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getEntityChangeSet.xhtml">getEntityChangeSet()</a>
                — Gets the changeset for an entity.</li>
            <li id="getEntityIdentifier"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getEntityIdentifier.xhtml">getEntityIdentifier()</a>
                — Gets the identifier of an entity.</li>
            <li id="getEntityPersister"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getEntityPersister.xhtml">getEntityPersister()</a>
                — Gets the EntityPersister for an Entity.</li>
            <li id="getEntityState"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getEntityState.xhtml">getEntityState()</a>
                — Gets the state of an entity with regard to the current unit of work.</li>
            <li id="getIdentityMap"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getIdentityMap.xhtml">getIdentityMap()</a>
                — Gets the identity map of the UnitOfWork.</li>
            <li id="getOriginalEntityData"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getOriginalEntityData.xhtml">getOriginalEntityData()</a>
                — Gets the original data of an entity. The original data is the data that was present at the time the entity was reconstituted from the database.</li>
            <li id="getScheduledCollectionDeletions"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getScheduledCollectionDeletions.xhtml">getScheduledCollectionDeletions()</a>
                — Get the currently scheduled complete collection deletions</li>
            <li id="getScheduledCollectionUpdates"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getScheduledCollectionUpdates.xhtml">getScheduledCollectionUpdates()</a>
                — Gets the currently scheduled collection inserts, updates and deletes.</li>
            <li id="getScheduledEntityDeletions"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getScheduledEntityDeletions.xhtml">getScheduledEntityDeletions()</a>
                — Gets the currently scheduled entity deletions in this UnitOfWork.</li>
            <li id="getScheduledEntityInsertions"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getScheduledEntityInsertions.xhtml">getScheduledEntityInsertions()</a>
                — Gets the currently scheduled entity insertions in this UnitOfWork.</li>
            <li id="getScheduledEntityUpdates"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/getScheduledEntityUpdates.xhtml">getScheduledEntityUpdates()</a>
                — Gets the currently scheduled entity updates in this UnitOfWork.</li>
            <li id="hasPendingInsertions"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/hasPendingInsertions.xhtml">hasPendingInsertions()</a>
                — Checks whether the UnitOfWork has any pending insertions.</li>
            <li id="initializeObject"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/initializeObject.xhtml">initializeObject()</a>
                — Helper method to initialize a lazy loading proxy or persistent collection.</li>
            <li id="isCollectionScheduledForDeletion">
              <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isCollectionScheduledForDeletion.xhtml">isCollectionScheduledForDeletion()</a>
            </li>
            <li id="isEntityScheduled"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isEntityScheduled.xhtml">isEntityScheduled()</a>
                — Checks whether an entity is scheduled for insertion, update or deletion.</li>
            <li id="isInIdentityMap"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isInIdentityMap.xhtml">isInIdentityMap()</a>
                — Checks whether an entity is registered in the identity map of this UnitOfWork.</li>
            <li id="isReadOnly"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isReadOnly.xhtml">isReadOnly()</a>
                — Is this entity read only?</li>
            <li id="isScheduledForDelete"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isScheduledForDelete.xhtml">isScheduledForDelete()</a>
                — Checks whether an entity is registered as removed/deleted with the unit of work.</li>
            <li id="isScheduledForDirtyCheck"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isScheduledForDirtyCheck.xhtml">isScheduledForDirtyCheck()</a>
                — Checks whether an entity is registered to be checked in the unit of work.</li>
            <li id="isScheduledForInsert"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isScheduledForInsert.xhtml">isScheduledForInsert()</a>
                — Checks whether an entity is scheduled for insertion.</li>
            <li id="isScheduledForUpdate"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/isScheduledForUpdate.xhtml">isScheduledForUpdate()</a>
                — Checks whether an entity is registered as dirty in the unit of work.</li>
            <li id="loadCollection"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/loadCollection.xhtml">loadCollection()</a>
                — Initializes (loads) an uninitialized persistent collection of an entity.</li>
            <li id="lock"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/lock.xhtml">lock()</a>
                — Acquire a lock on the given entity.</li>
            <li id="markReadOnly"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/markReadOnly.xhtml">markReadOnly()</a>
                — Marks an entity as read-only so that it will not be considered for updates during UnitOfWork#commit().</li>
            <li id="merge"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/merge.xhtml">merge()</a>
                — Merges the state of the given detached entity into this UnitOfWork.</li>
            <li id="persist"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/persist.xhtml">persist()</a>
                — Persists an entity as part of the current unit of work.</li>
            <li id="propertyChanged"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/propertyChanged.xhtml">propertyChanged()</a>
                — Notifies this UnitOfWork of a property change in an entity.</li>
            <li id="recomputeSingleEntityChangeSet"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/recomputeSingleEntityChangeSet.xhtml">recomputeSingleEntityChangeSet()</a>
                — INTERNAL: Computes the changeset of an individual entity, independently of the computeChangeSets() routine that is used at the beginning of a UnitOfWork#commit().</li>
            <li id="refresh"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/refresh.xhtml">refresh()</a>
                — Refreshes the state of the given entity from the database, overwriting any local, unpersisted changes.</li>
            <li id="registerManaged"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/registerManaged.xhtml">registerManaged()</a>
                — INTERNAL: Registers an entity as managed.</li>
            <li id="remove"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/remove.xhtml">remove()</a>
                — Deletes an entity as part of the current unit of work.</li>
            <li id="removeFromIdentityMap"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/removeFromIdentityMap.xhtml">removeFromIdentityMap()</a>
                — INTERNAL: Removes an entity from the identity map. This effectively detaches the entity from the persistence management of Doctrine.</li>
            <li id="scheduleCollectionDeletion"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/scheduleCollectionDeletion.xhtml">scheduleCollectionDeletion()</a>
                — INTERNAL: Schedules a complete collection for removal when this UnitOfWork commits.</li>
            <li id="scheduleExtraUpdate"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/scheduleExtraUpdate.xhtml">scheduleExtraUpdate()</a>
                — INTERNAL: Schedules an extra update that will be executed immediately after the regular entity updates within the currently running commit cycle.</li>
            <li id="scheduleForDelete"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/scheduleForDelete.xhtml">scheduleForDelete()</a>
                — INTERNAL: Schedules an entity for deletion.</li>
            <li id="scheduleForDirtyCheck"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/scheduleForDirtyCheck.xhtml">scheduleForDirtyCheck()</a>
                — Schedules an entity for dirty-checking at commit-time.</li>
            <li id="scheduleForInsert"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/scheduleForInsert.xhtml">scheduleForInsert()</a>
                — Schedules an entity for insertion into the database.</li>
            <li id="scheduleForUpdate"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/scheduleForUpdate.xhtml">scheduleForUpdate()</a>
                — Schedules an entity for being updated.</li>
            <li id="scheduleOrphanRemoval"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/scheduleOrphanRemoval.xhtml">scheduleOrphanRemoval()</a>
                — INTERNAL: Schedules an orphaned entity for removal. The remove() operation will be invoked on that entity at the beginning of the next commit of this UnitOfWork.</li>
            <li id="setOriginalEntityData">
              <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/setOriginalEntityData.xhtml">setOriginalEntityData()</a>
            </li>
            <li id="setOriginalEntityProperty"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/setOriginalEntityProperty.xhtml">setOriginalEntityProperty()</a>
                — INTERNAL: Sets a property value of the original data array of an entity.</li>
            <li id="size"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/size.xhtml">size()</a>
                — Calculates the size of the UnitOfWork. The size of the UnitOfWork is the number of entities in the identity map.</li>
            <li id="triggerEagerLoads">
              <a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/triggerEagerLoads.xhtml">triggerEagerLoads()</a>
            </li>
            <li id="tryGetById"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/tryGetById.xhtml">tryGetById()</a>
                — Tries to find an entity with the given identifier in the identity map of this UnitOfWork.</li>
            <li id="tryGetByIdHash"><a title="Doctrine\ORM\UnitOfWork" href="../classes/Doctrine_ORM_UnitOfWork/tryGetByIdHash.xhtml">tryGetByIdHash()</a>
                — INTERNAL: Tries to get an entity by its identifier hash. If no entity is found for the given hash, FALSE is returned.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
