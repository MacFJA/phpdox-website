<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Symfony\Component\HttpFoundation\File\UploadedFile</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Symfony_Component_HttpFoundation_File">Symfony\Component\HttpFoundation\File</a>
          </li>
          <li class="separator">UploadedFile</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/symfony/symfony/src/Symfony/Component/HttpFoundation/File/UploadedFile.php.xhtml#line27">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Symfony\Component\HttpFoundation\File\</small>UploadedFile</h1>
        <h4>A file uploaded through a form.</h4>
        <p/>
        <ul>
          <li>Author: Bernhard Schussek &lt;bschussek@gmail.com&gt;</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class UploadedFile
                extends <a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File.xhtml">File</a>
            {<br/><ul class="none"><li>// members</li><li>private <span title="Symfony\Component\HttpFoundation\File\Boolean">Boolean</span> <a href="#members">$test</a>;
                    </li><li>private string <a href="#members">$originalName</a>;
                    </li><li>private string <a href="#members">$mimeType</a>;
                    </li><li>private string <a href="#members">$size</a>;
                    </li><li>private integer <a href="#members">$error</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/__construct.xhtml">__construct</a>()
                    </li><li>public string|null <a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/getClientOriginalName.xhtml">getClientOriginalName</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/getClientOriginalExtension.xhtml">getClientOriginalExtension</a>()
                    </li><li>public string|null <a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/getClientMimeType.xhtml">getClientMimeType</a>()
                    </li><li>public string|null <a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/guessClientExtension.xhtml">guessClientExtension</a>()
                    </li><li>public integer|null <a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/getClientSize.xhtml">getClientSize</a>()
                    </li><li>public integer <a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/getError.xhtml">getError</a>()
                    </li><li>public Boolean <a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/isValid.xhtml">isValid</a>()
                    </li><li>public File <a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/move.xhtml">move</a>()
                    </li><li>public static int <a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/getMaxFilesize.xhtml">getMaxFilesize</a>()
                    </li><li>private string <a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/getErrorMessage.xhtml">getErrorMessage</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="Symfony\Component\HttpFoundation\File\File">File</span></li><li>public void <a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File/__construct.xhtml">__construct</a>()
                        </li><li>public string|null <a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File/guessExtension.xhtml">guessExtension</a>()
                        </li><li>public string|null <a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File/getMimeType.xhtml">getMimeType</a>()
                        </li><li>public string <a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File/getExtension.xhtml">getExtension</a>()
                        </li><li>public File <a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File/move.xhtml">move</a>()
                        </li><li>protected void <a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File/getTargetFile.xhtml">getTargetFile</a>()
                        </li><li>protected string <a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File/getName.xhtml">getName</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="SplFileInfo">SplFileInfo</span></li><li>public void <a title="SplFileInfo" href="../classes/SplFileInfo/__construct.xhtml">__construct</a>()
                        </li><li>public int <a title="SplFileInfo" href="../classes/SplFileInfo/getATime.xhtml">getATime</a>()
                        </li><li>public string <a title="SplFileInfo" href="../classes/SplFileInfo/getBasename.xhtml">getBasename</a>()
                        </li><li>public int <a title="SplFileInfo" href="../classes/SplFileInfo/getCTime.xhtml">getCTime</a>()
                        </li><li>public string <a title="SplFileInfo" href="../classes/SplFileInfo/getExtension.xhtml">getExtension</a>()
                        </li><li>public SplFileInfo <a title="SplFileInfo" href="../classes/SplFileInfo/getFileInfo.xhtml">getFileInfo</a>()
                        </li><li>public string <a title="SplFileInfo" href="../classes/SplFileInfo/getFilename.xhtml">getFilename</a>()
                        </li><li>public int <a title="SplFileInfo" href="../classes/SplFileInfo/getGroup.xhtml">getGroup</a>()
                        </li><li>public int <a title="SplFileInfo" href="../classes/SplFileInfo/getInode.xhtml">getInode</a>()
                        </li><li>public string <a title="SplFileInfo" href="../classes/SplFileInfo/getLinkTarget.xhtml">getLinkTarget</a>()
                        </li><li>public int <a title="SplFileInfo" href="../classes/SplFileInfo/getMTime.xhtml">getMTime</a>()
                        </li><li>public int <a title="SplFileInfo" href="../classes/SplFileInfo/getOwner.xhtml">getOwner</a>()
                        </li><li>public string <a title="SplFileInfo" href="../classes/SplFileInfo/getPath.xhtml">getPath</a>()
                        </li><li>public SplFileInfo <a title="SplFileInfo" href="../classes/SplFileInfo/getPathInfo.xhtml">getPathInfo</a>()
                        </li><li>public string <a title="SplFileInfo" href="../classes/SplFileInfo/getPathname.xhtml">getPathname</a>()
                        </li><li>public int <a title="SplFileInfo" href="../classes/SplFileInfo/getPerms.xhtml">getPerms</a>()
                        </li><li>public string <a title="SplFileInfo" href="../classes/SplFileInfo/getRealPath.xhtml">getRealPath</a>()
                        </li><li>public int <a title="SplFileInfo" href="../classes/SplFileInfo/getSize.xhtml">getSize</a>()
                        </li><li>public string <a title="SplFileInfo" href="../classes/SplFileInfo/getType.xhtml">getType</a>()
                        </li><li>public bool <a title="SplFileInfo" href="../classes/SplFileInfo/isDir.xhtml">isDir</a>()
                        </li><li>public bool <a title="SplFileInfo" href="../classes/SplFileInfo/isExecutable.xhtml">isExecutable</a>()
                        </li><li>public bool <a title="SplFileInfo" href="../classes/SplFileInfo/isFile.xhtml">isFile</a>()
                        </li><li>public bool <a title="SplFileInfo" href="../classes/SplFileInfo/isLink.xhtml">isLink</a>()
                        </li><li>public bool <a title="SplFileInfo" href="../classes/SplFileInfo/isReadable.xhtml">isReadable</a>()
                        </li><li>public bool <a title="SplFileInfo" href="../classes/SplFileInfo/isWritable.xhtml">isWritable</a>()
                        </li><li>public SplFileObject <a title="SplFileInfo" href="../classes/SplFileInfo/openFile.xhtml">openFile</a>()
                        </li><li>public void <a title="SplFileInfo" href="../classes/SplFileInfo/setFileClass.xhtml">setFileClass</a>()
                        </li><li>public void <a title="SplFileInfo" href="../classes/SplFileInfo/setInfoClass.xhtml">setInfoClass</a>()
                        </li><li>public void <a title="SplFileInfo" href="../classes/SplFileInfo/__toString.xhtml">__toString</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/Symfony_Component_HttpFoundation_File_File.xhtml">Symfony\Component\HttpFoundation\File\File</a>
            </li>
          </ul>
        </div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="error"><strong>$error</strong>
                —
                integer<br/><span class="indent">The UPLOAD_ERR_XXX constant provided by the uploader.</span></li>
            <li id="mimeType"><strong>$mimeType</strong>
                —
                string<br/><span class="indent">The mime type provided by the uploader.</span></li>
            <li id="originalName"><strong>$originalName</strong>
                —
                string<br/><span class="indent">The original name of the uploaded file.</span></li>
            <li id="size"><strong>$size</strong>
                —
                string<br/><span class="indent">The file size provided by the uploader.</span></li>
            <li id="test"><strong>$test</strong>
                —
                <a href="#">Symfony\Component\HttpFoundation\File\Boolean</a><br/><span class="indent">Whether the test mode is activated.</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="getErrorMessage"><a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/getErrorMessage.xhtml">getErrorMessage()</a>
                — Returns an informative upload error message.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/__construct.xhtml">__construct()</a>
                — Accepts the information of the uploaded file as provided by the PHP global $_FILES.</li>
            <li id="getClientMimeType"><a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/getClientMimeType.xhtml">getClientMimeType()</a>
                — Returns the file mime type.</li>
            <li id="getClientOriginalExtension"><a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/getClientOriginalExtension.xhtml">getClientOriginalExtension()</a>
                — Returns the original file extension</li>
            <li id="getClientOriginalName"><a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/getClientOriginalName.xhtml">getClientOriginalName()</a>
                — Returns the original file name.</li>
            <li id="getClientSize"><a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/getClientSize.xhtml">getClientSize()</a>
                — Returns the file size.</li>
            <li id="getError"><a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/getError.xhtml">getError()</a>
                — Returns the upload error.</li>
            <li id="getMaxFilesize"><a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/getMaxFilesize.xhtml">getMaxFilesize()</a>
                — Returns the maximum size of an uploaded file as configured in php.ini</li>
            <li id="guessClientExtension"><a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/guessClientExtension.xhtml">guessClientExtension()</a>
                — Returns the extension based on the client mime type.</li>
            <li id="isValid"><a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/isValid.xhtml">isValid()</a>
                — Returns whether the file was uploaded successfully.</li>
            <li id="move"><a title="Symfony\Component\HttpFoundation\File\UploadedFile" href="../classes/Symfony_Component_HttpFoundation_File_UploadedFile/move.xhtml">move()</a>
                — Moves the file to a new location.</li>
          </ul>
          <h3>Inherited from <a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File.xhtml">Symfony\Component\HttpFoundation\File\File</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="getName"><a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File/getName.xhtml">getName()</a>
                — Returns locale independent base name of the given path.</li>
            <li id="getTargetFile">
              <a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File/getTargetFile.xhtml">getTargetFile()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="getExtension"><a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File/getExtension.xhtml">getExtension()</a>
                — Returns the extension of the file.</li>
            <li id="getMimeType"><a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File/getMimeType.xhtml">getMimeType()</a>
                — Returns the mime type of the file.</li>
            <li id="guessExtension"><a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File/guessExtension.xhtml">guessExtension()</a>
                — Returns the extension based on the mime type.</li>
            <li id="move"><a title="Symfony\Component\HttpFoundation\File\File" href="../classes/Symfony_Component_HttpFoundation_File_File/move.xhtml">move()</a>
                — Moves the file to a new location.</li>
          </ul>
          <h3>Inherited from <a title="SplFileInfo" href="../classes/SplFileInfo.xhtml">SplFileInfo</a></h3>
          <h4>public</h4>
          <ul>
            <li id="__toString"><a title="SplFileInfo" href="../classes/SplFileInfo/__toString.xhtml">__toString()</a>
                — Returns the path to the file as a string</li>
            <li id="getATime"><a title="SplFileInfo" href="../classes/SplFileInfo/getATime.xhtml">getATime()</a>
                — Gets last access time of the file</li>
            <li id="getBasename"><a title="SplFileInfo" href="../classes/SplFileInfo/getBasename.xhtml">getBasename()</a>
                — Gets the base name of the file</li>
            <li id="getCTime"><a title="SplFileInfo" href="../classes/SplFileInfo/getCTime.xhtml">getCTime()</a>
                — Gets the inode change time</li>
            <li id="getExtension"><a title="SplFileInfo" href="../classes/SplFileInfo/getExtension.xhtml">getExtension()</a>
                — Gets the file extension</li>
            <li id="getFileInfo"><a title="SplFileInfo" href="../classes/SplFileInfo/getFileInfo.xhtml">getFileInfo()</a>
                — Gets an SplFileInfo object for the file</li>
            <li id="getFilename"><a title="SplFileInfo" href="../classes/SplFileInfo/getFilename.xhtml">getFilename()</a>
                — Gets the filename</li>
            <li id="getGroup"><a title="SplFileInfo" href="../classes/SplFileInfo/getGroup.xhtml">getGroup()</a>
                — Gets the file group</li>
            <li id="getInode"><a title="SplFileInfo" href="../classes/SplFileInfo/getInode.xhtml">getInode()</a>
                — Gets the inode for the file</li>
            <li id="getLinkTarget"><a title="SplFileInfo" href="../classes/SplFileInfo/getLinkTarget.xhtml">getLinkTarget()</a>
                — Gets the target of a link</li>
            <li id="getMTime"><a title="SplFileInfo" href="../classes/SplFileInfo/getMTime.xhtml">getMTime()</a>
                — Gets the last modified time</li>
            <li id="getOwner"><a title="SplFileInfo" href="../classes/SplFileInfo/getOwner.xhtml">getOwner()</a>
                — Gets the owner of the file</li>
            <li id="getPath"><a title="SplFileInfo" href="../classes/SplFileInfo/getPath.xhtml">getPath()</a>
                — Gets the path without filename</li>
            <li id="getPathInfo"><a title="SplFileInfo" href="../classes/SplFileInfo/getPathInfo.xhtml">getPathInfo()</a>
                — Gets an SplFileInfo object for the path</li>
            <li id="getPathname"><a title="SplFileInfo" href="../classes/SplFileInfo/getPathname.xhtml">getPathname()</a>
                — Gets the path to the file</li>
            <li id="getPerms"><a title="SplFileInfo" href="../classes/SplFileInfo/getPerms.xhtml">getPerms()</a>
                — Gets file permissions</li>
            <li id="getRealPath"><a title="SplFileInfo" href="../classes/SplFileInfo/getRealPath.xhtml">getRealPath()</a>
                — Gets absolute path to file</li>
            <li id="getSize"><a title="SplFileInfo" href="../classes/SplFileInfo/getSize.xhtml">getSize()</a>
                — Gets file size</li>
            <li id="getType"><a title="SplFileInfo" href="../classes/SplFileInfo/getType.xhtml">getType()</a>
                — Gets file type</li>
            <li id="isDir"><a title="SplFileInfo" href="../classes/SplFileInfo/isDir.xhtml">isDir()</a>
                — Tells if the file is a directory</li>
            <li id="isExecutable"><a title="SplFileInfo" href="../classes/SplFileInfo/isExecutable.xhtml">isExecutable()</a>
                — Tells if the file is executable</li>
            <li id="isFile"><a title="SplFileInfo" href="../classes/SplFileInfo/isFile.xhtml">isFile()</a>
                — Tells if the object references a regular file</li>
            <li id="isLink"><a title="SplFileInfo" href="../classes/SplFileInfo/isLink.xhtml">isLink()</a>
                — Tells if the file is a link</li>
            <li id="isReadable"><a title="SplFileInfo" href="../classes/SplFileInfo/isReadable.xhtml">isReadable()</a>
                — Tells if file is readable</li>
            <li id="isWritable"><a title="SplFileInfo" href="../classes/SplFileInfo/isWritable.xhtml">isWritable()</a>
                — Tells if the entry is writable</li>
            <li id="openFile"><a title="SplFileInfo" href="../classes/SplFileInfo/openFile.xhtml">openFile()</a>
                — Gets an SplFileObject object for the file</li>
            <li id="setFileClass"><a title="SplFileInfo" href="../classes/SplFileInfo/setFileClass.xhtml">setFileClass()</a>
                — Sets the class name used with SplFileInfo::openFile</li>
            <li id="setInfoClass"><a title="SplFileInfo" href="../classes/SplFileInfo/setInfoClass.xhtml">setInfoClass()</a>
                — Sets the class used with getFileInfo and getPathInfo</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
