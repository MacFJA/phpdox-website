<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Symfony\Bundle\FrameworkBundle\Test\WebTestCase - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#class">$class</a>
          </li>
          <li>
            <a href="#kernel">$kernel</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#createClient">createClient</a>
          </li>
          <li>
            <a href="#createKernel">createKernel</a>
          </li>
          <li>
            <a href="#getKernelClass">getKernelClass</a>
          </li>
          <li>
            <a href="#getPhpUnitCliConfigArgument">getPhpUnitCliConfigArgument</a>
          </li>
          <li>
            <a href="#getPhpUnitXmlDir">getPhpUnitXmlDir</a>
          </li>
          <li>
            <a href="#tearDown">tearDown</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Symfony\Bundle\FrameworkBundle\Test\</span>WebTestCase</h2>
        <div class="file-notice">
          <p>WebTestCase is the base class for functional tests.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="class"/>
            <h4><span class="label protected">protected</span>
                $class</h4>
          </li>
          <li>
            <a name="kernel"/>
            <h4><span class="label protected">protected</span>
                $kernel</h4>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="createClient"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>createClient<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $options</strong>, <span class="param-type">Array</span><strong> $server</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a Client.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$options</code> - An array of options to pass to the createKernel class</li>
                <li><code>$server</code> - An array of server parameters</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A Client instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="createKernel"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>createKernel<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a Kernel.<pre>Available options:

 * environment
 * debug</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$options</code> - An array of options</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>A HttpKernelInterface instance</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getKernelClass"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>getKernelClass<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Attempts to guess the kernel location.<pre>When the Kernel is located, the file is required.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The Kernel class name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPhpUnitXmlDir"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>getPhpUnitXmlDir<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finds the directory where the phpunit.xml(.dist) is stored.<pre>If you run tests with the PHPUnit CLI tool, everything will work as expected.
If not, override this method in your test classes.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The directory where phpunit.xml(.dist) is stored</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="tearDown"/>
            <h4><span class="label protected">protected</span>tearDown<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Shuts the kernel down if it was used in the test.</li>
            </p>
          </li>
          <li>
            <a name="getPhpUnitCliConfigArgument"/>
            <h4><span class="label true">true</span><span class="label private">private</span>getPhpUnitCliConfigArgument<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finds the value of the CLI configuration option.<pre>PHPUnit will use the last configuration argument on the command line, so this only returns
the last configuration argument.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The value of the PHPUnit cli configuration option</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
