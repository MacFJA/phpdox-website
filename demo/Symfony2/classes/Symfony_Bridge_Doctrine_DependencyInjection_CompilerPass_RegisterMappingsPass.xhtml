<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\RegisterMappingsPass</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Symfony_Bridge_Doctrine_DependencyInjection_CompilerPass">Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass</a>
          </li>
          <li class="separator">RegisterMappingsPass</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/symfony/symfony/src/Symfony/Bridge/Doctrine/DependencyInjection/CompilerPass/RegisterMappingsPass.php.xhtml#line33">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\</small>RegisterMappingsPass</h1>
        <h4>Base class for the doctrine bundles to provide a compiler pass class that helps to register doctrine mappings.</h4>
        <p>The compiler pass is meant to register the mappings with the metadata<br/>chain driver corresponding to one of the object managers.<br/><br/>For concrete implementations that are easy to use, see the<br/>RegisterXyMappingsPass classes in the DoctrineBundle resp.<br/>DoctrineMongodbBundle, DoctrineCouchdbBundle and DoctrinePhpcrBundle.</p>
        <ul>
          <li>Author: David Buchmann &lt;david@liip.ch&gt;</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class RegisterMappingsPass
                implements
                <a title="Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface" href="../interfaces/Symfony_Component_DependencyInjection_Compiler_CompilerPassInterface.xhtml">CompilerPassInterface</a>
            {<br/><ul class="none"><li>// members</li><li>protected <span title="Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\Definition|Reference">Definition|Reference</span> <a href="#members">$driver</a>;
                    </li><li>protected array <a href="#members">$namespaces</a>;
                    </li><li>protected array <a href="#members">$managerParameters</a>;
                    </li><li>protected string <a href="#members">$driverPattern</a>;
                    </li><li>protected string <a href="#members">$enabledParameter</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\RegisterMappingsPass" href="../classes/Symfony_Bridge_Doctrine_DependencyInjection_CompilerPass_RegisterMappingsPass/__construct.xhtml">__construct</a>()
                    </li><li>public void <a title="Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\RegisterMappingsPass" href="../classes/Symfony_Bridge_Doctrine_DependencyInjection_CompilerPass_RegisterMappingsPass/process.xhtml">process</a>()
                    </li><li>protected string <a title="Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\RegisterMappingsPass" href="../classes/Symfony_Bridge_Doctrine_DependencyInjection_CompilerPass_RegisterMappingsPass/getChainDriverServiceName.xhtml">getChainDriverServiceName</a>()
                    </li><li>protected Definition|Reference <a title="Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\RegisterMappingsPass" href="../classes/Symfony_Bridge_Doctrine_DependencyInjection_CompilerPass_RegisterMappingsPass/getDriver.xhtml">getDriver</a>()
                    </li><li>protected boolean <a title="Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\RegisterMappingsPass" href="../classes/Symfony_Bridge_Doctrine_DependencyInjection_CompilerPass_RegisterMappingsPass/enabled.xhtml">enabled</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Implements</h4>
          <ul>
            <li>
              <a href="../interfaces/Symfony_Component_DependencyInjection_Compiler_CompilerPassInterface.xhtml">Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface</a>
            </li>
          </ul>
        </div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="driver"><strong>$driver</strong>
                —
                <a href="#">Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\Definition|Reference</a><br/><span class="indent">DI object for the driver to use, either a service definition for a private service or a reference for a public service.</span></li>
            <li id="driverPattern"><strong>$driverPattern</strong>
                —
                string<br/><span class="indent">Naming pattern of the metadata chain driver service ids, for example 'doctrine.orm.%s_metadata_driver'</span></li>
            <li id="enabledParameter"><strong>$enabledParameter</strong>
                —
                string<br/><span class="indent">A name for a parameter in the container. If set, this compiler pass will only do anything if the parameter is present. (But regardless of the value of that parameter.</span></li>
            <li id="managerParameters"><strong>$managerParameters</strong>
                —
                array<br/><span class="indent">List of potential container parameters that hold the object manager name to register the mappings with the correct metadata driver, for example array('acme.manager', 'doctrine.default_entity_manager')</span></li>
            <li id="namespaces"><strong>$namespaces</strong>
                —
                array<br/><span class="indent">List of namespaces handled by the driver</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>protected</h4>
          <ul>
            <li id="enabled"><a title="Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\RegisterMappingsPass" href="../classes/Symfony_Bridge_Doctrine_DependencyInjection_CompilerPass_RegisterMappingsPass/enabled.xhtml">enabled()</a>
                — Determine whether this mapping should be activated or not. This allows to take this decision with the container builder available.</li>
            <li id="getChainDriverServiceName"><a title="Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\RegisterMappingsPass" href="../classes/Symfony_Bridge_Doctrine_DependencyInjection_CompilerPass_RegisterMappingsPass/getChainDriverServiceName.xhtml">getChainDriverServiceName()</a>
                — Get the service name of the metadata chain driver that the mappings should be registered with. The default implementation loops over the managerParameters and applies the first non-empty parameter it finds to the driverPattern.</li>
            <li id="getDriver"><a title="Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\RegisterMappingsPass" href="../classes/Symfony_Bridge_Doctrine_DependencyInjection_CompilerPass_RegisterMappingsPass/getDriver.xhtml">getDriver()</a>
                — Create the service definition for the metadata driver.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct">
              <a title="Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\RegisterMappingsPass" href="../classes/Symfony_Bridge_Doctrine_DependencyInjection_CompilerPass_RegisterMappingsPass/__construct.xhtml">__construct()</a>
            </li>
            <li id="process"><a title="Symfony\Bridge\Doctrine\DependencyInjection\CompilerPass\RegisterMappingsPass" href="../classes/Symfony_Bridge_Doctrine_DependencyInjection_CompilerPass_RegisterMappingsPass/process.xhtml">process()</a>
                — Register mappings with the metadata drivers.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
