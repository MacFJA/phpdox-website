<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Symfony\Bridge\Doctrine\ContainerAwareEventManager</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Symfony_Bridge_Doctrine">Symfony\Bridge\Doctrine</a>
          </li>
          <li class="separator">ContainerAwareEventManager</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/symfony/symfony/src/Symfony/Bridge/Doctrine/ContainerAwareEventManager.php.xhtml#line23">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Symfony\Bridge\Doctrine\</small>ContainerAwareEventManager</h1>
        <h4>Allows lazy loading of listener services.</h4>
        <p/>
        <ul>
          <li>Author: Johannes M. Schmitt &lt;schmittjoh@gmail.com&gt;</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class ContainerAwareEventManager
                extends <a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager.xhtml">EventManager</a>
            {<br/><ul class="none"><li>// members</li><li>private array <a href="#members">$listeners</a>;
                    </li><li>private array <a href="#members">$initialized</a>;
                    </li><li>private <a href="#members">$container</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="Symfony\Bridge\Doctrine\ContainerAwareEventManager" href="../classes/Symfony_Bridge_Doctrine_ContainerAwareEventManager/__construct.xhtml">__construct</a>()
                    </li><li>public boolean <a title="Symfony\Bridge\Doctrine\ContainerAwareEventManager" href="../classes/Symfony_Bridge_Doctrine_ContainerAwareEventManager/dispatchEvent.xhtml">dispatchEvent</a>()
                    </li><li>public array <a title="Symfony\Bridge\Doctrine\ContainerAwareEventManager" href="../classes/Symfony_Bridge_Doctrine_ContainerAwareEventManager/getListeners.xhtml">getListeners</a>()
                    </li><li>public boolean <a title="Symfony\Bridge\Doctrine\ContainerAwareEventManager" href="../classes/Symfony_Bridge_Doctrine_ContainerAwareEventManager/hasListeners.xhtml">hasListeners</a>()
                    </li><li>public void <a title="Symfony\Bridge\Doctrine\ContainerAwareEventManager" href="../classes/Symfony_Bridge_Doctrine_ContainerAwareEventManager/addEventListener.xhtml">addEventListener</a>()
                    </li><li>public void <a title="Symfony\Bridge\Doctrine\ContainerAwareEventManager" href="../classes/Symfony_Bridge_Doctrine_ContainerAwareEventManager/removeEventListener.xhtml">removeEventListener</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="Doctrine\Common\EventManager">EventManager</span></li><li>public boolean <a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager/dispatchEvent.xhtml">dispatchEvent</a>()
                        </li><li>public array <a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager/getListeners.xhtml">getListeners</a>()
                        </li><li>public boolean <a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager/hasListeners.xhtml">hasListeners</a>()
                        </li><li>public void <a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager/addEventListener.xhtml">addEventListener</a>()
                        </li><li>public void <a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager/removeEventListener.xhtml">removeEventListener</a>()
                        </li><li>public void <a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager/addEventSubscriber.xhtml">addEventSubscriber</a>()
                        </li><li>public void <a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager/removeEventSubscriber.xhtml">removeEventSubscriber</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/Doctrine_Common_EventManager.xhtml">Doctrine\Common\EventManager</a>
            </li>
          </ul>
        </div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="container">
              <strong>$container</strong>
            </li>
            <li id="initialized">
              <strong>$initialized</strong>
            </li>
            <li id="listeners"><strong>$listeners</strong>
                —
                array<br/><span class="indent">Map of registered listeners.</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="__construct">
              <a title="Symfony\Bridge\Doctrine\ContainerAwareEventManager" href="../classes/Symfony_Bridge_Doctrine_ContainerAwareEventManager/__construct.xhtml">__construct()</a>
            </li>
            <li id="addEventListener"><a title="Symfony\Bridge\Doctrine\ContainerAwareEventManager" href="../classes/Symfony_Bridge_Doctrine_ContainerAwareEventManager/addEventListener.xhtml">addEventListener()</a>
                — Adds an event listener that listens on the specified events.</li>
            <li id="dispatchEvent"><a title="Symfony\Bridge\Doctrine\ContainerAwareEventManager" href="../classes/Symfony_Bridge_Doctrine_ContainerAwareEventManager/dispatchEvent.xhtml">dispatchEvent()</a>
                — Dispatches an event to all registered listeners.</li>
            <li id="getListeners"><a title="Symfony\Bridge\Doctrine\ContainerAwareEventManager" href="../classes/Symfony_Bridge_Doctrine_ContainerAwareEventManager/getListeners.xhtml">getListeners()</a>
                — Gets the listeners of a specific event or all listeners.</li>
            <li id="hasListeners"><a title="Symfony\Bridge\Doctrine\ContainerAwareEventManager" href="../classes/Symfony_Bridge_Doctrine_ContainerAwareEventManager/hasListeners.xhtml">hasListeners()</a>
                — Checks whether an event has any registered listeners.</li>
            <li id="removeEventListener"><a title="Symfony\Bridge\Doctrine\ContainerAwareEventManager" href="../classes/Symfony_Bridge_Doctrine_ContainerAwareEventManager/removeEventListener.xhtml">removeEventListener()</a>
                — Removes an event listener from the specified events.</li>
          </ul>
          <h3>Inherited from <a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager.xhtml">Doctrine\Common\EventManager</a></h3>
          <h4>public</h4>
          <ul>
            <li id="addEventListener"><a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager/addEventListener.xhtml">addEventListener()</a>
                — Adds an event listener that listens on the specified events.</li>
            <li id="addEventSubscriber"><a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager/addEventSubscriber.xhtml">addEventSubscriber()</a>
                — Adds an EventSubscriber. The subscriber is asked for all the events he is interested in and added as a listener for these events.</li>
            <li id="dispatchEvent"><a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager/dispatchEvent.xhtml">dispatchEvent()</a>
                — Dispatches an event to all registered listeners.</li>
            <li id="getListeners"><a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager/getListeners.xhtml">getListeners()</a>
                — Gets the listeners of a specific event or all listeners.</li>
            <li id="hasListeners"><a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager/hasListeners.xhtml">hasListeners()</a>
                — Checks whether an event has any registered listeners.</li>
            <li id="removeEventListener"><a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager/removeEventListener.xhtml">removeEventListener()</a>
                — Removes an event listener from the specified events.</li>
            <li id="removeEventSubscriber"><a title="Doctrine\Common\EventManager" href="../classes/Doctrine_Common_EventManager/removeEventSubscriber.xhtml">removeEventSubscriber()</a>
                — Removes an EventSubscriber. The subscriber is asked for all the events it is interested in and removed as a listener for these events.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
