<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Swift_Signers_SMimeSigner</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">Swift_Signers_SMimeSigner</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/swiftmailer/swiftmailer/lib/classes/Swift/Signers/SMimeSigner.php.xhtml#line20">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>Swift_Signers_SMimeSigner</h1>
        <h4>MIME Message Signer used to apply S/MIME Signature/Encryption to a message.</h4>
        <p/>
        <ul>
          <li>Author: Romain-Geissler</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Swift_Signers_SMimeSigner
                implements
                <a title="Swift_Signers_BodySigner" href="../interfaces/Swift_Signers_BodySigner.xhtml">Swift_Signers_BodySigner</a>
            {<br/><ul class="none"><li>// members</li><li>protected <a href="#members">$signCertificate</a>;
                    </li><li>protected <a href="#members">$signPrivateKey</a>;
                    </li><li>protected <a href="#members">$encryptCert</a>;
                    </li><li>protected <a href="#members">$signThenEncrypt</a>;
                    </li><li>protected <a href="#members">$signLevel</a>;
                    </li><li>protected <a href="#members">$encryptLevel</a>;
                    </li><li>protected <a href="#members">$signOptions</a>;
                    </li><li>protected <a href="#members">$encryptOptions</a>;
                    </li><li>protected <a href="#members">$encryptCipher</a>;
                    </li><li>protected <span title="Swift_StreamFilters_StringReplacementFilterFactory">Swift_StreamFilters_StringReplacementFilterFactory</span> <a href="#members">$replacementFactory</a>;
                    </li><li>protected <span title="Swift_Mime_HeaderFactory">Swift_Mime_HeaderFactory</span> <a href="#members">$headerFactory</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/__construct.xhtml">__construct</a>()
                    </li><li>public static Swift_Signers_SMimeSigner <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/newInstance.xhtml">newInstance</a>()
                    </li><li>public Swift_Signers_SMimeSigner <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/setSignCertificate.xhtml">setSignCertificate</a>()
                    </li><li>public Swift_Signers_SMimeSigner <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/setEncryptCertificate.xhtml">setEncryptCertificate</a>()
                    </li><li>public string <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/getSignCertificate.xhtml">getSignCertificate</a>()
                    </li><li>public string <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/getSignPrivateKey.xhtml">getSignPrivateKey</a>()
                    </li><li>public Swift_Signers_SMimeSigner <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/setSignThenEncrypt.xhtml">setSignThenEncrypt</a>()
                    </li><li>public Boolean <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/isSignThenEncrypt.xhtml">isSignThenEncrypt</a>()
                    </li><li>public Swift_Signers_SMimeSigner <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/reset.xhtml">reset</a>()
                    </li><li>public Swift_Signers_SMimeSigner <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/signMessage.xhtml">signMessage</a>()
                    </li><li>public array <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/getAlteredHeaders.xhtml">getAlteredHeaders</a>()
                    </li><li>protected void <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/toSMimeByteStream.xhtml">toSMimeByteStream</a>()
                    </li><li>protected Swift_Message <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/createMessage.xhtml">createMessage</a>()
                    </li><li>protected void <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/messageStreamToSignedByteStream.xhtml">messageStreamToSignedByteStream</a>()
                    </li><li>protected void <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/messageStreamToEncryptedByteStream.xhtml">messageStreamToEncryptedByteStream</a>()
                    </li><li>protected void <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/copyFromOpenSSLOutput.xhtml">copyFromOpenSSLOutput</a>()
                    </li><li>protected void <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/streamToMime.xhtml">streamToMime</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Implements</h4>
          <ul>
            <li>
              <a href="../interfaces/Swift_Signers_BodySigner.xhtml">Swift_Signers_BodySigner</a>
            </li>
          </ul>
        </div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="encryptCert">
              <strong>$encryptCert</strong>
            </li>
            <li id="encryptCipher">
              <strong>$encryptCipher</strong>
            </li>
            <li id="encryptLevel">
              <strong>$encryptLevel</strong>
            </li>
            <li id="encryptOptions">
              <strong>$encryptOptions</strong>
            </li>
            <li id="headerFactory"><strong>$headerFactory</strong>
                —
                <a href="#">Swift_Mime_HeaderFactory</a></li>
            <li id="replacementFactory"><strong>$replacementFactory</strong>
                —
                <a href="#">Swift_StreamFilters_StringReplacementFilterFactory</a></li>
            <li id="signCertificate">
              <strong>$signCertificate</strong>
            </li>
            <li id="signLevel">
              <strong>$signLevel</strong>
            </li>
            <li id="signOptions">
              <strong>$signOptions</strong>
            </li>
            <li id="signPrivateKey">
              <strong>$signPrivateKey</strong>
            </li>
            <li id="signThenEncrypt">
              <strong>$signThenEncrypt</strong>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>protected</h4>
          <ul>
            <li id="copyFromOpenSSLOutput">
              <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/copyFromOpenSSLOutput.xhtml">copyFromOpenSSLOutput()</a>
            </li>
            <li id="createMessage">
              <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/createMessage.xhtml">createMessage()</a>
            </li>
            <li id="messageStreamToEncryptedByteStream">
              <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/messageStreamToEncryptedByteStream.xhtml">messageStreamToEncryptedByteStream()</a>
            </li>
            <li id="messageStreamToSignedByteStream">
              <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/messageStreamToSignedByteStream.xhtml">messageStreamToSignedByteStream()</a>
            </li>
            <li id="streamToMime"><a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/streamToMime.xhtml">streamToMime()</a>
                — Merges an OutputByteStream to Swift_SignedMessage.</li>
            <li id="toSMimeByteStream">
              <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/toSMimeByteStream.xhtml">toSMimeByteStream()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/__construct.xhtml">__construct()</a>
                — Constructor.</li>
            <li id="getAlteredHeaders"><a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/getAlteredHeaders.xhtml">getAlteredHeaders()</a>
                — Return the list of header a signer might tamper.</li>
            <li id="getSignCertificate">
              <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/getSignCertificate.xhtml">getSignCertificate()</a>
            </li>
            <li id="getSignPrivateKey">
              <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/getSignPrivateKey.xhtml">getSignPrivateKey()</a>
            </li>
            <li id="isSignThenEncrypt">
              <a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/isSignThenEncrypt.xhtml">isSignThenEncrypt()</a>
            </li>
            <li id="newInstance"><a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/newInstance.xhtml">newInstance()</a>
                — Returns an new Swift_Signers_SMimeSigner instance.</li>
            <li id="reset"><a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/reset.xhtml">reset()</a>
                — Resets internal states.</li>
            <li id="setEncryptCertificate"><a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/setEncryptCertificate.xhtml">setEncryptCertificate()</a>
                — Set the certificate location to use for encryption.</li>
            <li id="setSignCertificate"><a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/setSignCertificate.xhtml">setSignCertificate()</a>
                — Set the certificate location to use for signing.</li>
            <li id="setSignThenEncrypt"><a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/setSignThenEncrypt.xhtml">setSignThenEncrypt()</a>
                — Set perform signing before encryption.</li>
            <li id="signMessage"><a title="Swift_Signers_SMimeSigner" href="../classes/Swift_Signers_SMimeSigner/signMessage.xhtml">signMessage()</a>
                — Change the Swift_SignedMessage to apply the singing.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
