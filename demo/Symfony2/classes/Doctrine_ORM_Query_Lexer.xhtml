<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Doctrine\ORM\Query\Lexer</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Doctrine_ORM_Query">Doctrine\ORM\Query</a>
          </li>
          <li class="separator">Lexer</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/doctrine/orm/lib/Doctrine/ORM/Query/Lexer.php.xhtml#line30">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Doctrine\ORM\Query\</small>Lexer</h1>
        <h4>Scans a DQL query for tokens.</h4>
        <p/>
        <ul>
          <li>Author: Guilherme Blanco &lt;guilhermeblanco@hotmail.com&gt;</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Lexer
                extends <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer.xhtml">Lexer</a>
            {<br/><ul class="none"><li>// constants</li><li>const T_NONE = 1;</li><li>const T_INTEGER = 2;</li><li>const T_STRING = 3;</li><li>const T_INPUT_PARAMETER = 4;</li><li>const T_FLOAT = 5;</li><li>const T_CLOSE_PARENTHESIS = 6;</li><li>const T_OPEN_PARENTHESIS = 7;</li><li>const T_COMMA = 8;</li><li>const T_DIVIDE = 9;</li><li>const T_DOT = 10;</li><li>const T_EQUALS = 11;</li><li>const T_GREATER_THAN = 12;</li><li>const T_LOWER_THAN = 13;</li><li>const T_MINUS = 14;</li><li>const T_MULTIPLY = 15;</li><li>const T_NEGATE = 16;</li><li>const T_PLUS = 17;</li><li>const T_OPEN_CURLY_BRACE = 18;</li><li>const T_CLOSE_CURLY_BRACE = 19;</li><li>const T_IDENTIFIER = 100;</li><li>const T_ALL = 101;</li><li>const T_AND = 102;</li><li>const T_ANY = 103;</li><li>const T_AS = 104;</li><li>const T_ASC = 105;</li><li>const T_AVG = 106;</li><li>const T_BETWEEN = 107;</li><li>const T_BOTH = 108;</li><li>const T_BY = 109;</li><li>const T_CASE = 110;</li><li>const T_COALESCE = 111;</li><li>const T_COUNT = 112;</li><li>const T_DELETE = 113;</li><li>const T_DESC = 114;</li><li>const T_DISTINCT = 115;</li><li>const T_ELSE = 116;</li><li>const T_EMPTY = 117;</li><li>const T_END = 118;</li><li>const T_ESCAPE = 119;</li><li>const T_EXISTS = 120;</li><li>const T_FALSE = 121;</li><li>const T_FROM = 122;</li><li>const T_GROUP = 123;</li><li>const T_HAVING = 124;</li><li>const T_HIDDEN = 125;</li><li>const T_IN = 126;</li><li>const T_INDEX = 127;</li><li>const T_INNER = 128;</li><li>const T_INSTANCE = 129;</li><li>const T_IS = 130;</li><li>const T_JOIN = 131;</li><li>const T_LEADING = 132;</li><li>const T_LEFT = 133;</li><li>const T_LIKE = 134;</li><li>const T_MAX = 135;</li><li>const T_MEMBER = 136;</li><li>const T_MIN = 137;</li><li>const T_NOT = 138;</li><li>const T_NULL = 139;</li><li>const T_NULLIF = 140;</li><li>const T_OF = 141;</li><li>const T_OR = 142;</li><li>const T_ORDER = 143;</li><li>const T_OUTER = 144;</li><li>const T_SELECT = 145;</li><li>const T_SET = 146;</li><li>const T_SOME = 147;</li><li>const T_SUM = 148;</li><li>const T_THEN = 149;</li><li>const T_TRAILING = 150;</li><li>const T_TRUE = 151;</li><li>const T_UPDATE = 152;</li><li>const T_WHEN = 153;</li><li>const T_WHERE = 154;</li><li>const T_WITH = 155;</li><li>const T_PARTIAL = 156;</li></ul><ul class="none"><li>// Inherited members from <span title="Doctrine\Common\Lexer">Lexer</span></li><li>public array <a href="#members">$lookahead</a>;
                        </li><li>public array <a href="#members">$token</a>;
                        </li></ul><ul class="none"><li>// methods</li><li>public void <a title="Doctrine\ORM\Query\Lexer" href="../classes/Doctrine_ORM_Query_Lexer/__construct.xhtml">__construct</a>()
                    </li><li>protected void <a title="Doctrine\ORM\Query\Lexer" href="../classes/Doctrine_ORM_Query_Lexer/getCatchablePatterns.xhtml">getCatchablePatterns</a>()
                    </li><li>protected void <a title="Doctrine\ORM\Query\Lexer" href="../classes/Doctrine_ORM_Query_Lexer/getNonCatchablePatterns.xhtml">getNonCatchablePatterns</a>()
                    </li><li>protected void <a title="Doctrine\ORM\Query\Lexer" href="../classes/Doctrine_ORM_Query_Lexer/getType.xhtml">getType</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="Doctrine\Common\Lexer">Lexer</span></li><li>public void <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/setInput.xhtml">setInput</a>()
                        </li><li>public void <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/reset.xhtml">reset</a>()
                        </li><li>public void <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/resetPeek.xhtml">resetPeek</a>()
                        </li><li>public void <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/resetPosition.xhtml">resetPosition</a>()
                        </li><li>public boolean <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/isNextToken.xhtml">isNextToken</a>()
                        </li><li>public boolean <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/isNextTokenAny.xhtml">isNextTokenAny</a>()
                        </li><li>public array|null <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/moveNext.xhtml">moveNext</a>()
                        </li><li>public void <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/skipUntil.xhtml">skipUntil</a>()
                        </li><li>public boolean <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/isA.xhtml">isA</a>()
                        </li><li>public array <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/peek.xhtml">peek</a>()
                        </li><li>public array|null <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/glimpse.xhtml">glimpse</a>()
                        </li><li>protected void <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/scan.xhtml">scan</a>()
                        </li><li>public string <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/getLiteral.xhtml">getLiteral</a>()
                        </li><li>protected abstract array <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/getCatchablePatterns.xhtml">getCatchablePatterns</a>()
                        </li><li>protected abstract array <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/getNonCatchablePatterns.xhtml">getNonCatchablePatterns</a>()
                        </li><li>protected abstract integer <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/getType.xhtml">getType</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/Doctrine_Common_Lexer.xhtml">Doctrine\Common\Lexer</a>
            </li>
          </ul>
        </div>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="T_NONE">T_NONE</td>
              <td>1</td>
            </tr>
            <tr>
              <td id="T_INTEGER">T_INTEGER</td>
              <td>2</td>
            </tr>
            <tr>
              <td id="T_STRING">T_STRING</td>
              <td>3</td>
            </tr>
            <tr>
              <td id="T_INPUT_PARAMETER">T_INPUT_PARAMETER</td>
              <td>4</td>
            </tr>
            <tr>
              <td id="T_FLOAT">T_FLOAT</td>
              <td>5</td>
            </tr>
            <tr>
              <td id="T_CLOSE_PARENTHESIS">T_CLOSE_PARENTHESIS</td>
              <td>6</td>
            </tr>
            <tr>
              <td id="T_OPEN_PARENTHESIS">T_OPEN_PARENTHESIS</td>
              <td>7</td>
            </tr>
            <tr>
              <td id="T_COMMA">T_COMMA</td>
              <td>8</td>
            </tr>
            <tr>
              <td id="T_DIVIDE">T_DIVIDE</td>
              <td>9</td>
            </tr>
            <tr>
              <td id="T_DOT">T_DOT</td>
              <td>10</td>
            </tr>
            <tr>
              <td id="T_EQUALS">T_EQUALS</td>
              <td>11</td>
            </tr>
            <tr>
              <td id="T_GREATER_THAN">T_GREATER_THAN</td>
              <td>12</td>
            </tr>
            <tr>
              <td id="T_LOWER_THAN">T_LOWER_THAN</td>
              <td>13</td>
            </tr>
            <tr>
              <td id="T_MINUS">T_MINUS</td>
              <td>14</td>
            </tr>
            <tr>
              <td id="T_MULTIPLY">T_MULTIPLY</td>
              <td>15</td>
            </tr>
            <tr>
              <td id="T_NEGATE">T_NEGATE</td>
              <td>16</td>
            </tr>
            <tr>
              <td id="T_PLUS">T_PLUS</td>
              <td>17</td>
            </tr>
            <tr>
              <td id="T_OPEN_CURLY_BRACE">T_OPEN_CURLY_BRACE</td>
              <td>18</td>
            </tr>
            <tr>
              <td id="T_CLOSE_CURLY_BRACE">T_CLOSE_CURLY_BRACE</td>
              <td>19</td>
            </tr>
            <tr>
              <td id="T_IDENTIFIER">T_IDENTIFIER</td>
              <td>100</td>
            </tr>
            <tr>
              <td id="T_ALL">T_ALL</td>
              <td>101</td>
            </tr>
            <tr>
              <td id="T_AND">T_AND</td>
              <td>102</td>
            </tr>
            <tr>
              <td id="T_ANY">T_ANY</td>
              <td>103</td>
            </tr>
            <tr>
              <td id="T_AS">T_AS</td>
              <td>104</td>
            </tr>
            <tr>
              <td id="T_ASC">T_ASC</td>
              <td>105</td>
            </tr>
            <tr>
              <td id="T_AVG">T_AVG</td>
              <td>106</td>
            </tr>
            <tr>
              <td id="T_BETWEEN">T_BETWEEN</td>
              <td>107</td>
            </tr>
            <tr>
              <td id="T_BOTH">T_BOTH</td>
              <td>108</td>
            </tr>
            <tr>
              <td id="T_BY">T_BY</td>
              <td>109</td>
            </tr>
            <tr>
              <td id="T_CASE">T_CASE</td>
              <td>110</td>
            </tr>
            <tr>
              <td id="T_COALESCE">T_COALESCE</td>
              <td>111</td>
            </tr>
            <tr>
              <td id="T_COUNT">T_COUNT</td>
              <td>112</td>
            </tr>
            <tr>
              <td id="T_DELETE">T_DELETE</td>
              <td>113</td>
            </tr>
            <tr>
              <td id="T_DESC">T_DESC</td>
              <td>114</td>
            </tr>
            <tr>
              <td id="T_DISTINCT">T_DISTINCT</td>
              <td>115</td>
            </tr>
            <tr>
              <td id="T_ELSE">T_ELSE</td>
              <td>116</td>
            </tr>
            <tr>
              <td id="T_EMPTY">T_EMPTY</td>
              <td>117</td>
            </tr>
            <tr>
              <td id="T_END">T_END</td>
              <td>118</td>
            </tr>
            <tr>
              <td id="T_ESCAPE">T_ESCAPE</td>
              <td>119</td>
            </tr>
            <tr>
              <td id="T_EXISTS">T_EXISTS</td>
              <td>120</td>
            </tr>
            <tr>
              <td id="T_FALSE">T_FALSE</td>
              <td>121</td>
            </tr>
            <tr>
              <td id="T_FROM">T_FROM</td>
              <td>122</td>
            </tr>
            <tr>
              <td id="T_GROUP">T_GROUP</td>
              <td>123</td>
            </tr>
            <tr>
              <td id="T_HAVING">T_HAVING</td>
              <td>124</td>
            </tr>
            <tr>
              <td id="T_HIDDEN">T_HIDDEN</td>
              <td>125</td>
            </tr>
            <tr>
              <td id="T_IN">T_IN</td>
              <td>126</td>
            </tr>
            <tr>
              <td id="T_INDEX">T_INDEX</td>
              <td>127</td>
            </tr>
            <tr>
              <td id="T_INNER">T_INNER</td>
              <td>128</td>
            </tr>
            <tr>
              <td id="T_INSTANCE">T_INSTANCE</td>
              <td>129</td>
            </tr>
            <tr>
              <td id="T_IS">T_IS</td>
              <td>130</td>
            </tr>
            <tr>
              <td id="T_JOIN">T_JOIN</td>
              <td>131</td>
            </tr>
            <tr>
              <td id="T_LEADING">T_LEADING</td>
              <td>132</td>
            </tr>
            <tr>
              <td id="T_LEFT">T_LEFT</td>
              <td>133</td>
            </tr>
            <tr>
              <td id="T_LIKE">T_LIKE</td>
              <td>134</td>
            </tr>
            <tr>
              <td id="T_MAX">T_MAX</td>
              <td>135</td>
            </tr>
            <tr>
              <td id="T_MEMBER">T_MEMBER</td>
              <td>136</td>
            </tr>
            <tr>
              <td id="T_MIN">T_MIN</td>
              <td>137</td>
            </tr>
            <tr>
              <td id="T_NOT">T_NOT</td>
              <td>138</td>
            </tr>
            <tr>
              <td id="T_NULL">T_NULL</td>
              <td>139</td>
            </tr>
            <tr>
              <td id="T_NULLIF">T_NULLIF</td>
              <td>140</td>
            </tr>
            <tr>
              <td id="T_OF">T_OF</td>
              <td>141</td>
            </tr>
            <tr>
              <td id="T_OR">T_OR</td>
              <td>142</td>
            </tr>
            <tr>
              <td id="T_ORDER">T_ORDER</td>
              <td>143</td>
            </tr>
            <tr>
              <td id="T_OUTER">T_OUTER</td>
              <td>144</td>
            </tr>
            <tr>
              <td id="T_SELECT">T_SELECT</td>
              <td>145</td>
            </tr>
            <tr>
              <td id="T_SET">T_SET</td>
              <td>146</td>
            </tr>
            <tr>
              <td id="T_SOME">T_SOME</td>
              <td>147</td>
            </tr>
            <tr>
              <td id="T_SUM">T_SUM</td>
              <td>148</td>
            </tr>
            <tr>
              <td id="T_THEN">T_THEN</td>
              <td>149</td>
            </tr>
            <tr>
              <td id="T_TRAILING">T_TRAILING</td>
              <td>150</td>
            </tr>
            <tr>
              <td id="T_TRUE">T_TRUE</td>
              <td>151</td>
            </tr>
            <tr>
              <td id="T_UPDATE">T_UPDATE</td>
              <td>152</td>
            </tr>
            <tr>
              <td id="T_WHEN">T_WHEN</td>
              <td>153</td>
            </tr>
            <tr>
              <td id="T_WHERE">T_WHERE</td>
              <td>154</td>
            </tr>
            <tr>
              <td id="T_WITH">T_WITH</td>
              <td>155</td>
            </tr>
            <tr>
              <td id="T_PARTIAL">T_PARTIAL</td>
              <td>156</td>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>public</h4>
          <ul class="members">
            <li id="lookahead"><strong>$lookahead</strong>
                —
                array</li>
            <li id="token"><strong>$token</strong>
                —
                array</li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>protected</h4>
          <ul>
            <li id="getCatchablePatterns">
              <a title="Doctrine\ORM\Query\Lexer" href="../classes/Doctrine_ORM_Query_Lexer/getCatchablePatterns.xhtml">getCatchablePatterns()</a>
            </li>
            <li id="getNonCatchablePatterns">
              <a title="Doctrine\ORM\Query\Lexer" href="../classes/Doctrine_ORM_Query_Lexer/getNonCatchablePatterns.xhtml">getNonCatchablePatterns()</a>
            </li>
            <li id="getType">
              <a title="Doctrine\ORM\Query\Lexer" href="../classes/Doctrine_ORM_Query_Lexer/getType.xhtml">getType()</a>
            </li>
          </ul>
          <h3>Inherited from <a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer.xhtml">Doctrine\Common\Lexer</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="getCatchablePatterns"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/getCatchablePatterns.xhtml">getCatchablePatterns()</a>
                — Lexical catchable patterns.</li>
            <li id="getNonCatchablePatterns"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/getNonCatchablePatterns.xhtml">getNonCatchablePatterns()</a>
                — Lexical non-catchable patterns.</li>
            <li id="getType"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/getType.xhtml">getType()</a>
                — Retrieve token type. Also processes the token value if necessary.</li>
            <li id="scan"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/scan.xhtml">scan()</a>
                — Scans the input string for tokens.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="getLiteral"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/getLiteral.xhtml">getLiteral()</a>
                — Gets the literal for a given token.</li>
            <li id="glimpse"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/glimpse.xhtml">glimpse()</a>
                — Peeks at the next token, returns it and immediately resets the peek.</li>
            <li id="isA"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/isA.xhtml">isA()</a>
                — Checks if given value is identical to the given token</li>
            <li id="isNextToken"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/isNextToken.xhtml">isNextToken()</a>
                — Checks whether a given token matches the current lookahead.</li>
            <li id="isNextTokenAny"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/isNextTokenAny.xhtml">isNextTokenAny()</a>
                — Checks whether any of the given tokens matches the current lookahead</li>
            <li id="moveNext"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/moveNext.xhtml">moveNext()</a>
                — Moves to the next token in the input string.</li>
            <li id="peek"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/peek.xhtml">peek()</a>
                — Moves the lookahead token forward.</li>
            <li id="reset"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/reset.xhtml">reset()</a>
                — Resets the lexer.</li>
            <li id="resetPeek"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/resetPeek.xhtml">resetPeek()</a>
                — Resets the peek pointer to 0.</li>
            <li id="resetPosition"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/resetPosition.xhtml">resetPosition()</a>
                — Resets the lexer position on the input to the given position.</li>
            <li id="setInput"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/setInput.xhtml">setInput()</a>
                — Sets the input data to be tokenized.</li>
            <li id="skipUntil"><a title="Doctrine\Common\Lexer" href="../classes/Doctrine_Common_Lexer/skipUntil.xhtml">skipUntil()</a>
                — Tells the lexer to skip input tokens until it sees a token with the given value.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
