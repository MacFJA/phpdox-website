<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Swift_DependencyContainer</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">Swift_DependencyContainer</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/swiftmailer/swiftmailer/lib/classes/Swift/DependencyContainer.php.xhtml#line17">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>Swift_DependencyContainer</h1>
        <h4>Dependency Injection container.</h4>
        <p/>
        <ul>
          <li>Author: Chris Corbyn</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Swift_DependencyContainer
            {<br/><ul class="none"><li>// constants</li><li>const TYPE_VALUE = 0x0001;</li><li>const TYPE_INSTANCE = 0x0010;</li><li>const TYPE_SHARED = 0x0100;</li><li>const TYPE_ALIAS = 0x1000;</li></ul><ul class="none"><li>// members</li><li>private <a href="#members">$_instance</a>;
                    </li><li>private array <a href="#members">$_store</a>;
                    </li><li>private <a href="#members">$_endPoint</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/__construct.xhtml">__construct</a>()
                    </li><li>public static Swift_DependencyContainer <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/getInstance.xhtml">getInstance</a>()
                    </li><li>public array <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/listItems.xhtml">listItems</a>()
                    </li><li>public boolean <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/has.xhtml">has</a>()
                    </li><li>public mixed <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/lookup.xhtml">lookup</a>()
                    </li><li>public array <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/createDependenciesFor.xhtml">createDependenciesFor</a>()
                    </li><li>public Swift_DependencyContainer <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/register.xhtml">register</a>()
                    </li><li>public Swift_DependencyContainer <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/asValue.xhtml">asValue</a>()
                    </li><li>public Swift_DependencyContainer <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/asAliasOf.xhtml">asAliasOf</a>()
                    </li><li>public Swift_DependencyContainer <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/asNewInstanceOf.xhtml">asNewInstanceOf</a>()
                    </li><li>public Swift_DependencyContainer <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/asSharedInstanceOf.xhtml">asSharedInstanceOf</a>()
                    </li><li>public Swift_DependencyContainer <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/withDependencies.xhtml">withDependencies</a>()
                    </li><li>public Swift_DependencyContainer <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/addConstructorValue.xhtml">addConstructorValue</a>()
                    </li><li>public Swift_DependencyContainer <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/addConstructorLookup.xhtml">addConstructorLookup</a>()
                    </li><li>private void <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/_getValue.xhtml">_getValue</a>()
                    </li><li>private void <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/_createAlias.xhtml">_createAlias</a>()
                    </li><li>private void <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/_createNewInstance.xhtml">_createNewInstance</a>()
                    </li><li>private void <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/_createSharedInstance.xhtml">_createSharedInstance</a>()
                    </li><li>private void <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/_getEndPoint.xhtml">_getEndPoint</a>()
                    </li><li>private void <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/_resolveArgs.xhtml">_resolveArgs</a>()
                    </li><li>private void <a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/_lookupRecursive.xhtml">_lookupRecursive</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="TYPE_VALUE">TYPE_VALUE</td>
              <td>0x0001</td>
            </tr>
            <tr>
              <td id="TYPE_INSTANCE">TYPE_INSTANCE</td>
              <td>0x0010</td>
            </tr>
            <tr>
              <td id="TYPE_SHARED">TYPE_SHARED</td>
              <td>0x0100</td>
            </tr>
            <tr>
              <td id="TYPE_ALIAS">TYPE_ALIAS</td>
              <td>0x1000</td>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="_endPoint">
              <strong>$_endPoint</strong>
              <br/>
              <span class="indent">The current endpoint in the data container</span>
            </li>
            <li id="_instance">
              <strong>$_instance</strong>
              <br/>
              <span class="indent">Singleton instance</span>
            </li>
            <li id="_store">
              <strong>$_store</strong>
              <br/>
              <span class="indent">The data container</span>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="_createAlias"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/_createAlias.xhtml">_createAlias()</a>
                — Resolve an alias to another item</li>
            <li id="_createNewInstance"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/_createNewInstance.xhtml">_createNewInstance()</a>
                — Create a fresh instance of $itemName</li>
            <li id="_createSharedInstance"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/_createSharedInstance.xhtml">_createSharedInstance()</a>
                — Create and register a shared instance of $itemName</li>
            <li id="_getEndPoint"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/_getEndPoint.xhtml">_getEndPoint()</a>
                — Get the current endpoint in the store</li>
            <li id="_getValue"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/_getValue.xhtml">_getValue()</a>
                — Get the literal value with $itemName</li>
            <li id="_lookupRecursive"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/_lookupRecursive.xhtml">_lookupRecursive()</a>
                — Resolve a single dependency with an collections</li>
            <li id="_resolveArgs"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/_resolveArgs.xhtml">_resolveArgs()</a>
                — Get an argument list with dependencies resolved</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/__construct.xhtml">__construct()</a>
                — Constructor should not be used.</li>
            <li id="addConstructorLookup"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/addConstructorLookup.xhtml">addConstructorLookup()</a>
                — Specify a dependency lookup for the constructor of the previously registered item.</li>
            <li id="addConstructorValue"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/addConstructorValue.xhtml">addConstructorValue()</a>
                — Specify a literal (non looked up) value for the constructor of the previously registered item.</li>
            <li id="asAliasOf"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/asAliasOf.xhtml">asAliasOf()</a>
                — Specify the previously registered item as an alias of another item.</li>
            <li id="asNewInstanceOf"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/asNewInstanceOf.xhtml">asNewInstanceOf()</a>
                — Specify the previously registered item as a new instance of $className.</li>
            <li id="asSharedInstanceOf"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/asSharedInstanceOf.xhtml">asSharedInstanceOf()</a>
                — Specify the previously registered item as a shared instance of $className.</li>
            <li id="asValue"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/asValue.xhtml">asValue()</a>
                — Specify the previously registered item as a literal value.</li>
            <li id="createDependenciesFor"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/createDependenciesFor.xhtml">createDependenciesFor()</a>
                — Create an array of arguments passed to the constructor of $itemName.</li>
            <li id="getInstance"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/getInstance.xhtml">getInstance()</a>
                — Returns a singleton of the DependencyContainer.</li>
            <li id="has"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/has.xhtml">has()</a>
                — Test if an item is registered in this container with the given name.</li>
            <li id="listItems"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/listItems.xhtml">listItems()</a>
                — List the names of all items stored in the Container.</li>
            <li id="lookup"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/lookup.xhtml">lookup()</a>
                — Lookup the item with the given $itemName.</li>
            <li id="register"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/register.xhtml">register()</a>
                — Register a new dependency with $itemName.</li>
            <li id="withDependencies"><a title="Swift_DependencyContainer" href="../classes/Swift_DependencyContainer/withDependencies.xhtml">withDependencies()</a>
                — Specify a list of injected dependencies for the previously registered item.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
