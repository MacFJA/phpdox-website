<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Symfony\Component\DependencyInjection\DefinitionDecorator</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Symfony_Component_DependencyInjection">Symfony\Component\DependencyInjection</a>
          </li>
          <li class="separator">DefinitionDecorator</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/symfony/symfony/src/Symfony/Component/DependencyInjection/DefinitionDecorator.php.xhtml#line24">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Symfony\Component\DependencyInjection\</small>DefinitionDecorator</h1>
        <h4>This definition decorates another definition.</h4>
        <p/>
        <ul>
          <li>Author: Johannes M. Schmitt &lt;schmittjoh@gmail.com&gt;</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class DefinitionDecorator
                extends <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition.xhtml">Definition</a>
            {<br/><ul class="none"><li>// members</li><li>private <a href="#members">$parent</a>;
                    </li><li>private <a href="#members">$changes</a>;
                    </li></ul><ul class="none"><li>// Inherited members from <span title="Symfony\Component\DependencyInjection\Definition">Definition</span></li><li>protected <a href="#members">$arguments</a>;
                        </li></ul><ul class="none"><li>// methods</li><li>public void <a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/__construct.xhtml">__construct</a>()
                    </li><li>public string <a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/getParent.xhtml">getParent</a>()
                    </li><li>public array <a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/getChanges.xhtml">getChanges</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/setClass.xhtml">setClass</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/setFactoryClass.xhtml">setFactoryClass</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/setFactoryMethod.xhtml">setFactoryMethod</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/setFactoryService.xhtml">setFactoryService</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/setConfigurator.xhtml">setConfigurator</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/setFile.xhtml">setFile</a>()
                    </li><li>public void <a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/setPublic.xhtml">setPublic</a>()
                    </li><li>public mixed <a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/getArgument.xhtml">getArgument</a>()
                    </li><li>public DefinitionDecorator <a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/replaceArgument.xhtml">replaceArgument</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="Symfony\Component\DependencyInjection\Definition">Definition</span></li><li>public void <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/__construct.xhtml">__construct</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setFactoryClass.xhtml">setFactoryClass</a>()
                        </li><li>public string <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getFactoryClass.xhtml">getFactoryClass</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setFactoryMethod.xhtml">setFactoryMethod</a>()
                        </li><li>public string <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getFactoryMethod.xhtml">getFactoryMethod</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setFactoryService.xhtml">setFactoryService</a>()
                        </li><li>public string <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getFactoryService.xhtml">getFactoryService</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setClass.xhtml">setClass</a>()
                        </li><li>public string <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getClass.xhtml">getClass</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setArguments.xhtml">setArguments</a>()
                        </li><li>public void <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setProperties.xhtml">setProperties</a>()
                        </li><li>public void <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getProperties.xhtml">getProperties</a>()
                        </li><li>public void <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setProperty.xhtml">setProperty</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/addArgument.xhtml">addArgument</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/replaceArgument.xhtml">replaceArgument</a>()
                        </li><li>public array <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getArguments.xhtml">getArguments</a>()
                        </li><li>public mixed <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getArgument.xhtml">getArgument</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setMethodCalls.xhtml">setMethodCalls</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/addMethodCall.xhtml">addMethodCall</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/removeMethodCall.xhtml">removeMethodCall</a>()
                        </li><li>public Boolean <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/hasMethodCall.xhtml">hasMethodCall</a>()
                        </li><li>public array <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getMethodCalls.xhtml">getMethodCalls</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setTags.xhtml">setTags</a>()
                        </li><li>public array <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getTags.xhtml">getTags</a>()
                        </li><li>public array <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getTag.xhtml">getTag</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/addTag.xhtml">addTag</a>()
                        </li><li>public Boolean <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/hasTag.xhtml">hasTag</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/clearTag.xhtml">clearTag</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/clearTags.xhtml">clearTags</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setFile.xhtml">setFile</a>()
                        </li><li>public string <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getFile.xhtml">getFile</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setScope.xhtml">setScope</a>()
                        </li><li>public string <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getScope.xhtml">getScope</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setPublic.xhtml">setPublic</a>()
                        </li><li>public Boolean <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isPublic.xhtml">isPublic</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setSynchronized.xhtml">setSynchronized</a>()
                        </li><li>public Boolean <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isSynchronized.xhtml">isSynchronized</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setLazy.xhtml">setLazy</a>()
                        </li><li>public Boolean <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isLazy.xhtml">isLazy</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setSynthetic.xhtml">setSynthetic</a>()
                        </li><li>public Boolean <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isSynthetic.xhtml">isSynthetic</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setAbstract.xhtml">setAbstract</a>()
                        </li><li>public Boolean <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isAbstract.xhtml">isAbstract</a>()
                        </li><li>public Definition <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setConfigurator.xhtml">setConfigurator</a>()
                        </li><li>public callable <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getConfigurator.xhtml">getConfigurator</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/Symfony_Component_DependencyInjection_Definition.xhtml">Symfony\Component\DependencyInjection\Definition</a>
            </li>
          </ul>
        </div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="changes">
              <strong>$changes</strong>
            </li>
            <li id="parent">
              <strong>$parent</strong>
            </li>
          </ul>
          <h4>protected</h4>
          <ul class="members">
            <li id="arguments">
              <strong>$arguments</strong>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/__construct.xhtml">__construct()</a>
                — Constructor.</li>
            <li id="getArgument"><a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/getArgument.xhtml">getArgument()</a>
                — Gets an argument to pass to the service constructor/factory method.</li>
            <li id="getChanges"><a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/getChanges.xhtml">getChanges()</a>
                — Returns all changes tracked for the Definition object.</li>
            <li id="getParent"><a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/getParent.xhtml">getParent()</a>
                — Returns the Definition being decorated.</li>
            <li id="replaceArgument"><a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/replaceArgument.xhtml">replaceArgument()</a>
                — You should always use this method when overwriting existing arguments of the parent definition.</li>
            <li id="setClass"><a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/setClass.xhtml">setClass()</a>
                — {@inheritDoc}</li>
            <li id="setConfigurator"><a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/setConfigurator.xhtml">setConfigurator()</a>
                — {@inheritDoc}</li>
            <li id="setFactoryClass"><a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/setFactoryClass.xhtml">setFactoryClass()</a>
                — {@inheritDoc}</li>
            <li id="setFactoryMethod"><a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/setFactoryMethod.xhtml">setFactoryMethod()</a>
                — {@inheritDoc}</li>
            <li id="setFactoryService"><a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/setFactoryService.xhtml">setFactoryService()</a>
                — {@inheritDoc}</li>
            <li id="setFile"><a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/setFile.xhtml">setFile()</a>
                — {@inheritDoc}</li>
            <li id="setPublic"><a title="Symfony\Component\DependencyInjection\DefinitionDecorator" href="../classes/Symfony_Component_DependencyInjection_DefinitionDecorator/setPublic.xhtml">setPublic()</a>
                — {@inheritDoc}</li>
          </ul>
          <h3>Inherited from <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition.xhtml">Symfony\Component\DependencyInjection\Definition</a></h3>
          <h4>public</h4>
          <ul>
            <li id="addArgument"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/addArgument.xhtml">addArgument()</a>
                — Adds an argument to pass to the service constructor/factory method.</li>
            <li id="addMethodCall"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/addMethodCall.xhtml">addMethodCall()</a>
                — Adds a method to call after service initialization.</li>
            <li id="addTag"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/addTag.xhtml">addTag()</a>
                — Adds a tag for this definition.</li>
            <li id="clearTag"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/clearTag.xhtml">clearTag()</a>
                — Clears all tags for a given name.</li>
            <li id="clearTags"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/clearTags.xhtml">clearTags()</a>
                — Clears the tags for this definition.</li>
            <li id="getArgument"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getArgument.xhtml">getArgument()</a>
                — Gets an argument to pass to the service constructor/factory method.</li>
            <li id="getArguments"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getArguments.xhtml">getArguments()</a>
                — Gets the arguments to pass to the service constructor/factory method.</li>
            <li id="getClass"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getClass.xhtml">getClass()</a>
                — Gets the service class.</li>
            <li id="getConfigurator"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getConfigurator.xhtml">getConfigurator()</a>
                — Gets the configurator to call after the service is fully initialized.</li>
            <li id="getFactoryClass"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getFactoryClass.xhtml">getFactoryClass()</a>
                — Gets the factory class.</li>
            <li id="getFactoryMethod"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getFactoryMethod.xhtml">getFactoryMethod()</a>
                — Gets the factory method.</li>
            <li id="getFactoryService"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getFactoryService.xhtml">getFactoryService()</a>
                — Gets the factory service id.</li>
            <li id="getFile"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getFile.xhtml">getFile()</a>
                — Gets the file to require before creating the service.</li>
            <li id="getMethodCalls"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getMethodCalls.xhtml">getMethodCalls()</a>
                — Gets the methods to call after service initialization.</li>
            <li id="getProperties">
              <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getProperties.xhtml">getProperties()</a>
            </li>
            <li id="getScope"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getScope.xhtml">getScope()</a>
                — Returns the scope of the service</li>
            <li id="getTag"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getTag.xhtml">getTag()</a>
                — Gets a tag by name.</li>
            <li id="getTags"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/getTags.xhtml">getTags()</a>
                — Returns all tags.</li>
            <li id="hasMethodCall"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/hasMethodCall.xhtml">hasMethodCall()</a>
                — Check if the current definition has a given method to call after service initialization.</li>
            <li id="hasTag"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/hasTag.xhtml">hasTag()</a>
                — Whether this definition has a tag with the given name</li>
            <li id="isAbstract"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isAbstract.xhtml">isAbstract()</a>
                — Whether this definition is abstract, that means it merely serves as a template for other definitions.</li>
            <li id="isLazy"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isLazy.xhtml">isLazy()</a>
                — Whether this service is lazy.</li>
            <li id="isPublic"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isPublic.xhtml">isPublic()</a>
                — Whether this service is public facing</li>
            <li id="isSynchronized"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isSynchronized.xhtml">isSynchronized()</a>
                — Whether this service is synchronized.</li>
            <li id="isSynthetic"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/isSynthetic.xhtml">isSynthetic()</a>
                — Whether this definition is synthetic, that is not constructed by the container, but dynamically injected.</li>
            <li id="removeMethodCall"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/removeMethodCall.xhtml">removeMethodCall()</a>
                — Removes a method to call after service initialization.</li>
            <li id="replaceArgument"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/replaceArgument.xhtml">replaceArgument()</a>
                — Sets a specific argument</li>
            <li id="setAbstract"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setAbstract.xhtml">setAbstract()</a>
                — Whether this definition is abstract, that means it merely serves as a template for other definitions.</li>
            <li id="setArguments"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setArguments.xhtml">setArguments()</a>
                — Sets the arguments to pass to the service constructor/factory method.</li>
            <li id="setClass"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setClass.xhtml">setClass()</a>
                — Sets the service class.</li>
            <li id="setConfigurator"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setConfigurator.xhtml">setConfigurator()</a>
                — Sets a configurator to call after the service is fully initialized.</li>
            <li id="setFactoryClass"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setFactoryClass.xhtml">setFactoryClass()</a>
                — Sets the name of the class that acts as a factory using the factory method, which will be invoked statically.</li>
            <li id="setFactoryMethod"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setFactoryMethod.xhtml">setFactoryMethod()</a>
                — Sets the factory method able to create an instance of this class.</li>
            <li id="setFactoryService"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setFactoryService.xhtml">setFactoryService()</a>
                — Sets the name of the service that acts as a factory using the factory method.</li>
            <li id="setFile"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setFile.xhtml">setFile()</a>
                — Sets a file to require before creating the service.</li>
            <li id="setLazy"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setLazy.xhtml">setLazy()</a>
                — Sets the lazy flag of this service.</li>
            <li id="setMethodCalls"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setMethodCalls.xhtml">setMethodCalls()</a>
                — Sets the methods to call after service initialization.</li>
            <li id="setProperties">
              <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setProperties.xhtml">setProperties()</a>
            </li>
            <li id="setProperty">
              <a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setProperty.xhtml">setProperty()</a>
            </li>
            <li id="setPublic"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setPublic.xhtml">setPublic()</a>
                — Sets the visibility of this service.</li>
            <li id="setScope"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setScope.xhtml">setScope()</a>
                — Sets the scope of the service</li>
            <li id="setSynchronized"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setSynchronized.xhtml">setSynchronized()</a>
                — Sets the synchronized flag of this service.</li>
            <li id="setSynthetic"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setSynthetic.xhtml">setSynthetic()</a>
                — Sets whether this definition is synthetic, that is not constructed by the container, but dynamically injected.</li>
            <li id="setTags"><a title="Symfony\Component\DependencyInjection\Definition" href="../classes/Symfony_Component_DependencyInjection_Definition/setTags.xhtml">setTags()</a>
                — Sets tags for this definition</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
