<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Symfony\Component\HttpFoundation\Request</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Symfony_Component_HttpFoundation">Symfony\Component\HttpFoundation</a>
          </li>
          <li class="separator">Request</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/symfony/symfony/src/Symfony/Component/HttpFoundation/Request.php.xhtml#line31">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Symfony\Component\HttpFoundation\</small>Request</h1>
        <h4>Request represents an HTTP request.</h4>
        <p>The methods dealing with URL accept / return a raw path (% encoded):<br/>* getBasePath<br/>* getBaseUrl<br/>* getPathInfo<br/>* getRequestUri<br/>* getUri<br/>  * getUriForPath</p>
        <ul>
          <li>Author: Fabien Potencier &lt;fabien@symfony.com&gt;</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Request
            {<br/><ul class="none"><li>// constants</li><li>const HEADER_CLIENT_IP = 'client_ip';</li><li>const HEADER_CLIENT_HOST = 'client_host';</li><li>const HEADER_CLIENT_PROTO = 'client_proto';</li><li>const HEADER_CLIENT_PORT = 'client_port';</li></ul><ul class="none"><li>// members</li><li>protected array <a href="#members">$trustedProxies</a>;
                    </li><li>protected array <a href="#members">$trustedHeaders</a>;
                    </li><li>protected <a href="#members">$httpMethodParameterOverride</a>;
                    </li><li>public <span title="\Symfony\Component\HttpFoundation\ParameterBag">ParameterBag</span> <a href="#members">$attributes</a>;
                    </li><li>public <span title="\Symfony\Component\HttpFoundation\ParameterBag">ParameterBag</span> <a href="#members">$request</a>;
                    </li><li>public <span title="\Symfony\Component\HttpFoundation\ParameterBag">ParameterBag</span> <a href="#members">$query</a>;
                    </li><li>public <span title="\Symfony\Component\HttpFoundation\ServerBag">ServerBag</span> <a href="#members">$server</a>;
                    </li><li>public <span title="\Symfony\Component\HttpFoundation\FileBag">FileBag</span> <a href="#members">$files</a>;
                    </li><li>public <span title="\Symfony\Component\HttpFoundation\ParameterBag">ParameterBag</span> <a href="#members">$cookies</a>;
                    </li><li>public <span title="\Symfony\Component\HttpFoundation\HeaderBag">HeaderBag</span> <a href="#members">$headers</a>;
                    </li><li>protected string <a href="#members">$content</a>;
                    </li><li>protected array <a href="#members">$languages</a>;
                    </li><li>protected array <a href="#members">$charsets</a>;
                    </li><li>protected array <a href="#members">$acceptableContentTypes</a>;
                    </li><li>protected string <a href="#members">$pathInfo</a>;
                    </li><li>protected string <a href="#members">$requestUri</a>;
                    </li><li>protected string <a href="#members">$baseUrl</a>;
                    </li><li>protected string <a href="#members">$basePath</a>;
                    </li><li>protected string <a href="#members">$method</a>;
                    </li><li>protected string <a href="#members">$format</a>;
                    </li><li>protected <span title="\Symfony\Component\HttpFoundation\Session\SessionInterface">SessionInterface</span> <a href="#members">$session</a>;
                    </li><li>protected string <a href="#members">$locale</a>;
                    </li><li>protected string <a href="#members">$defaultLocale</a>;
                    </li><li>protected array <a href="#members">$formats</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/__construct.xhtml">__construct</a>()
                    </li><li>public void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/initialize.xhtml">initialize</a>()
                    </li><li>public static Request <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/createFromGlobals.xhtml">createFromGlobals</a>()
                    </li><li>public static Request <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/create.xhtml">create</a>()
                    </li><li>public Request <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/duplicate.xhtml">duplicate</a>()
                    </li><li>public void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/__clone.xhtml">__clone</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/__toString.xhtml">__toString</a>()
                    </li><li>public void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/overrideGlobals.xhtml">overrideGlobals</a>()
                    </li><li>public static void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setTrustedProxies.xhtml">setTrustedProxies</a>()
                    </li><li>public static array <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getTrustedProxies.xhtml">getTrustedProxies</a>()
                    </li><li>public static void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setTrustedHeaderName.xhtml">setTrustedHeaderName</a>()
                    </li><li>public static string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getTrustedHeaderName.xhtml">getTrustedHeaderName</a>()
                    </li><li>public static string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/normalizeQueryString.xhtml">normalizeQueryString</a>()
                    </li><li>public static void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/enableHttpMethodParameterOverride.xhtml">enableHttpMethodParameterOverride</a>()
                    </li><li>public static Boolean <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getHttpMethodParameterOverride.xhtml">getHttpMethodParameterOverride</a>()
                    </li><li>public mixed <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/get.xhtml">get</a>()
                    </li><li>public SessionInterface|null <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getSession.xhtml">getSession</a>()
                    </li><li>public Boolean <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/hasPreviousSession.xhtml">hasPreviousSession</a>()
                    </li><li>public Boolean <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/hasSession.xhtml">hasSession</a>()
                    </li><li>public void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setSession.xhtml">setSession</a>()
                    </li><li>public array <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getClientIps.xhtml">getClientIps</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getClientIp.xhtml">getClientIp</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getScriptName.xhtml">getScriptName</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getPathInfo.xhtml">getPathInfo</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getBasePath.xhtml">getBasePath</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getBaseUrl.xhtml">getBaseUrl</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getScheme.xhtml">getScheme</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getPort.xhtml">getPort</a>()
                    </li><li>public string|null <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getUser.xhtml">getUser</a>()
                    </li><li>public string|null <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getPassword.xhtml">getPassword</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getUserInfo.xhtml">getUserInfo</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getHttpHost.xhtml">getHttpHost</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getRequestUri.xhtml">getRequestUri</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getSchemeAndHttpHost.xhtml">getSchemeAndHttpHost</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getUri.xhtml">getUri</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getUriForPath.xhtml">getUriForPath</a>()
                    </li><li>public string|null <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getQueryString.xhtml">getQueryString</a>()
                    </li><li>public Boolean <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/isSecure.xhtml">isSecure</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getHost.xhtml">getHost</a>()
                    </li><li>public void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setMethod.xhtml">setMethod</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getMethod.xhtml">getMethod</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getRealMethod.xhtml">getRealMethod</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getMimeType.xhtml">getMimeType</a>()
                    </li><li>public string|null <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getFormat.xhtml">getFormat</a>()
                    </li><li>public void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setFormat.xhtml">setFormat</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getRequestFormat.xhtml">getRequestFormat</a>()
                    </li><li>public void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setRequestFormat.xhtml">setRequestFormat</a>()
                    </li><li>public string|null <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getContentType.xhtml">getContentType</a>()
                    </li><li>public void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setDefaultLocale.xhtml">setDefaultLocale</a>()
                    </li><li>public void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setLocale.xhtml">setLocale</a>()
                    </li><li>public string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getLocale.xhtml">getLocale</a>()
                    </li><li>public Boolean <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/isMethod.xhtml">isMethod</a>()
                    </li><li>public Boolean <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/isMethodSafe.xhtml">isMethodSafe</a>()
                    </li><li>public string|resource <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getContent.xhtml">getContent</a>()
                    </li><li>public array <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getETags.xhtml">getETags</a>()
                    </li><li>public Boolean <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/isNoCache.xhtml">isNoCache</a>()
                    </li><li>public string|null <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getPreferredLanguage.xhtml">getPreferredLanguage</a>()
                    </li><li>public array <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getLanguages.xhtml">getLanguages</a>()
                    </li><li>public array <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getCharsets.xhtml">getCharsets</a>()
                    </li><li>public array <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getAcceptableContentTypes.xhtml">getAcceptableContentTypes</a>()
                    </li><li>public Boolean <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/isXmlHttpRequest.xhtml">isXmlHttpRequest</a>()
                    </li><li>protected void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/prepareRequestUri.xhtml">prepareRequestUri</a>()
                    </li><li>protected string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/prepareBaseUrl.xhtml">prepareBaseUrl</a>()
                    </li><li>protected string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/prepareBasePath.xhtml">prepareBasePath</a>()
                    </li><li>protected string <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/preparePathInfo.xhtml">preparePathInfo</a>()
                    </li><li>protected static void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/initializeFormats.xhtml">initializeFormats</a>()
                    </li><li>private void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setPhpDefaultLocale.xhtml">setPhpDefaultLocale</a>()
                    </li><li>private void <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getUrlencodedPrefix.xhtml">getUrlencodedPrefix</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extended by</h4>
          <ul>
            <li>
              <a href="../classes/Symfony_Component_HttpFoundation_ApacheRequest.xhtml">Symfony\Component\HttpFoundation\ApacheRequest</a>
            </li>
          </ul>
        </div>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="HEADER_CLIENT_IP">HEADER_CLIENT_IP</td>
              <td>'client_ip'</td>
            </tr>
            <tr>
              <td id="HEADER_CLIENT_HOST">HEADER_CLIENT_HOST</td>
              <td>'client_host'</td>
            </tr>
            <tr>
              <td id="HEADER_CLIENT_PROTO">HEADER_CLIENT_PROTO</td>
              <td>'client_proto'</td>
            </tr>
            <tr>
              <td id="HEADER_CLIENT_PORT">HEADER_CLIENT_PORT</td>
              <td>'client_port'</td>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="acceptableContentTypes"><strong>$acceptableContentTypes</strong>
                —
                array</li>
            <li id="basePath"><strong>$basePath</strong>
                —
                string</li>
            <li id="baseUrl"><strong>$baseUrl</strong>
                —
                string</li>
            <li id="charsets"><strong>$charsets</strong>
                —
                array</li>
            <li id="content"><strong>$content</strong>
                —
                string</li>
            <li id="defaultLocale"><strong>$defaultLocale</strong>
                —
                string</li>
            <li id="format"><strong>$format</strong>
                —
                string</li>
            <li id="formats"><strong>$formats</strong>
                —
                array</li>
            <li id="httpMethodParameterOverride">
              <strong>$httpMethodParameterOverride</strong>
            </li>
            <li id="languages"><strong>$languages</strong>
                —
                array</li>
            <li id="locale"><strong>$locale</strong>
                —
                string</li>
            <li id="method"><strong>$method</strong>
                —
                string</li>
            <li id="pathInfo"><strong>$pathInfo</strong>
                —
                string</li>
            <li id="requestUri"><strong>$requestUri</strong>
                —
                string</li>
            <li id="session"><strong>$session</strong>
                —
                <a href="#">\Symfony\Component\HttpFoundation\Session\SessionInterface</a></li>
            <li id="trustedHeaders">
              <strong>$trustedHeaders</strong>
              <br/>
              <span class="indent">Names for headers that can be trusted when using trusted proxies.</span>
            </li>
            <li id="trustedProxies">
              <strong>$trustedProxies</strong>
            </li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="attributes"><strong>$attributes</strong>
                —
                <a href="#">\Symfony\Component\HttpFoundation\ParameterBag</a></li>
            <li id="cookies"><strong>$cookies</strong>
                —
                <a href="#">\Symfony\Component\HttpFoundation\ParameterBag</a></li>
            <li id="files"><strong>$files</strong>
                —
                <a href="#">\Symfony\Component\HttpFoundation\FileBag</a></li>
            <li id="headers"><strong>$headers</strong>
                —
                <a href="#">\Symfony\Component\HttpFoundation\HeaderBag</a></li>
            <li id="query"><strong>$query</strong>
                —
                <a href="#">\Symfony\Component\HttpFoundation\ParameterBag</a></li>
            <li id="request"><strong>$request</strong>
                —
                <a href="#">\Symfony\Component\HttpFoundation\ParameterBag</a></li>
            <li id="server"><strong>$server</strong>
                —
                <a href="#">\Symfony\Component\HttpFoundation\ServerBag</a></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="getUrlencodedPrefix">
              <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getUrlencodedPrefix.xhtml">getUrlencodedPrefix()</a>
            </li>
            <li id="setPhpDefaultLocale"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setPhpDefaultLocale.xhtml">setPhpDefaultLocale()</a>
                — Sets the default PHP locale.</li>
          </ul>
          <h4>protected</h4>
          <ul>
            <li id="initializeFormats"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/initializeFormats.xhtml">initializeFormats()</a>
                — Initializes HTTP request formats.</li>
            <li id="prepareBasePath"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/prepareBasePath.xhtml">prepareBasePath()</a>
                — Prepares the base path.</li>
            <li id="prepareBaseUrl"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/prepareBaseUrl.xhtml">prepareBaseUrl()</a>
                — Prepares the base URL.</li>
            <li id="preparePathInfo"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/preparePathInfo.xhtml">preparePathInfo()</a>
                — Prepares the path info.</li>
            <li id="prepareRequestUri">
              <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/prepareRequestUri.xhtml">prepareRequestUri()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/__construct.xhtml">__construct()</a>
                — Constructor.</li>
            <li id="__clone"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/__clone.xhtml">__clone()</a>
                — Clones the current request.</li>
            <li id="__toString"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/__toString.xhtml">__toString()</a>
                — Returns the request as a string.</li>
            <li id="create"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/create.xhtml">create()</a>
                — Creates a Request based on a given URI and configuration.</li>
            <li id="createFromGlobals"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/createFromGlobals.xhtml">createFromGlobals()</a>
                — Creates a new request with values from PHP's super globals.</li>
            <li id="duplicate"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/duplicate.xhtml">duplicate()</a>
                — Clones a request and overrides some of its parameters.</li>
            <li id="enableHttpMethodParameterOverride"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/enableHttpMethodParameterOverride.xhtml">enableHttpMethodParameterOverride()</a>
                — Enables support for the _method request parameter to determine the intended HTTP method.</li>
            <li id="get"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/get.xhtml">get()</a>
                — Gets a "parameter" value.</li>
            <li id="getAcceptableContentTypes"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getAcceptableContentTypes.xhtml">getAcceptableContentTypes()</a>
                — Gets a list of content types acceptable by the client browser</li>
            <li id="getBasePath"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getBasePath.xhtml">getBasePath()</a>
                — Returns the root path from which this request is executed.</li>
            <li id="getBaseUrl"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getBaseUrl.xhtml">getBaseUrl()</a>
                — Returns the root url from which this request is executed.</li>
            <li id="getCharsets"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getCharsets.xhtml">getCharsets()</a>
                — Gets a list of charsets acceptable by the client browser.</li>
            <li id="getClientIp"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getClientIp.xhtml">getClientIp()</a>
                — Returns the client IP address.</li>
            <li id="getClientIps"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getClientIps.xhtml">getClientIps()</a>
                — Returns the client IP addresses.</li>
            <li id="getContent"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getContent.xhtml">getContent()</a>
                — Returns the request body content.</li>
            <li id="getContentType"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getContentType.xhtml">getContentType()</a>
                — Gets the format associated with the request.</li>
            <li id="getETags"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getETags.xhtml">getETags()</a>
                — Gets the Etags.</li>
            <li id="getFormat"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getFormat.xhtml">getFormat()</a>
                — Gets the format associated with the mime type.</li>
            <li id="getHost"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getHost.xhtml">getHost()</a>
                — Returns the host name.</li>
            <li id="getHttpHost"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getHttpHost.xhtml">getHttpHost()</a>
                — Returns the HTTP host being requested.</li>
            <li id="getHttpMethodParameterOverride"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getHttpMethodParameterOverride.xhtml">getHttpMethodParameterOverride()</a>
                — Checks whether support for the _method request parameter is enabled.</li>
            <li id="getLanguages"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getLanguages.xhtml">getLanguages()</a>
                — Gets a list of languages acceptable by the client browser.</li>
            <li id="getLocale"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getLocale.xhtml">getLocale()</a>
                — Get the locale.</li>
            <li id="getMethod"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getMethod.xhtml">getMethod()</a>
                — Gets the request "intended" method.</li>
            <li id="getMimeType"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getMimeType.xhtml">getMimeType()</a>
                — Gets the mime type associated with the format.</li>
            <li id="getPassword"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getPassword.xhtml">getPassword()</a>
                — Returns the password.</li>
            <li id="getPathInfo"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getPathInfo.xhtml">getPathInfo()</a>
                — Returns the path being requested relative to the executed script.</li>
            <li id="getPort"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getPort.xhtml">getPort()</a>
                — Returns the port on which the request is made.</li>
            <li id="getPreferredLanguage"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getPreferredLanguage.xhtml">getPreferredLanguage()</a>
                — Returns the preferred language.</li>
            <li id="getQueryString"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getQueryString.xhtml">getQueryString()</a>
                — Generates the normalized query string for the Request.</li>
            <li id="getRealMethod"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getRealMethod.xhtml">getRealMethod()</a>
                — Gets the "real" request method.</li>
            <li id="getRequestFormat"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getRequestFormat.xhtml">getRequestFormat()</a>
                — Gets the request format.</li>
            <li id="getRequestUri"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getRequestUri.xhtml">getRequestUri()</a>
                — Returns the requested URI.</li>
            <li id="getScheme"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getScheme.xhtml">getScheme()</a>
                — Gets the request's scheme.</li>
            <li id="getSchemeAndHttpHost"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getSchemeAndHttpHost.xhtml">getSchemeAndHttpHost()</a>
                — Gets the scheme and HTTP host.</li>
            <li id="getScriptName"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getScriptName.xhtml">getScriptName()</a>
                — Returns current script name.</li>
            <li id="getSession"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getSession.xhtml">getSession()</a>
                — Gets the Session.</li>
            <li id="getTrustedHeaderName"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getTrustedHeaderName.xhtml">getTrustedHeaderName()</a>
                — Gets the trusted proxy header name.</li>
            <li id="getTrustedProxies"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getTrustedProxies.xhtml">getTrustedProxies()</a>
                — Gets the list of trusted proxies.</li>
            <li id="getUri"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getUri.xhtml">getUri()</a>
                — Generates a normalized URI for the Request.</li>
            <li id="getUriForPath"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getUriForPath.xhtml">getUriForPath()</a>
                — Generates a normalized URI for the given path.</li>
            <li id="getUser"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getUser.xhtml">getUser()</a>
                — Returns the user.</li>
            <li id="getUserInfo"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/getUserInfo.xhtml">getUserInfo()</a>
                — Gets the user info.</li>
            <li id="hasPreviousSession"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/hasPreviousSession.xhtml">hasPreviousSession()</a>
                — Whether the request contains a Session which was started in one of the previous requests.</li>
            <li id="hasSession"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/hasSession.xhtml">hasSession()</a>
                — Whether the request contains a Session object.</li>
            <li id="initialize"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/initialize.xhtml">initialize()</a>
                — Sets the parameters for this request.</li>
            <li id="isMethod"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/isMethod.xhtml">isMethod()</a>
                — Checks if the request method is of specified type.</li>
            <li id="isMethodSafe"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/isMethodSafe.xhtml">isMethodSafe()</a>
                — Checks whether the method is safe or not.</li>
            <li id="isNoCache">
              <a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/isNoCache.xhtml">isNoCache()</a>
            </li>
            <li id="isSecure"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/isSecure.xhtml">isSecure()</a>
                — Checks whether the request is secure or not.</li>
            <li id="isXmlHttpRequest"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/isXmlHttpRequest.xhtml">isXmlHttpRequest()</a>
                — Returns true if the request is a XMLHttpRequest.</li>
            <li id="normalizeQueryString"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/normalizeQueryString.xhtml">normalizeQueryString()</a>
                — Normalizes a query string.</li>
            <li id="overrideGlobals"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/overrideGlobals.xhtml">overrideGlobals()</a>
                — Overrides the PHP global variables according to this request instance.</li>
            <li id="setDefaultLocale"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setDefaultLocale.xhtml">setDefaultLocale()</a>
                — Sets the default locale.</li>
            <li id="setFormat"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setFormat.xhtml">setFormat()</a>
                — Associates a format with mime types.</li>
            <li id="setLocale"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setLocale.xhtml">setLocale()</a>
                — Sets the locale.</li>
            <li id="setMethod"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setMethod.xhtml">setMethod()</a>
                — Sets the request method.</li>
            <li id="setRequestFormat"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setRequestFormat.xhtml">setRequestFormat()</a>
                — Sets the request format.</li>
            <li id="setSession"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setSession.xhtml">setSession()</a>
                — Sets the Session.</li>
            <li id="setTrustedHeaderName"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setTrustedHeaderName.xhtml">setTrustedHeaderName()</a>
                — Sets the name for trusted headers.</li>
            <li id="setTrustedProxies"><a title="Symfony\Component\HttpFoundation\Request" href="../classes/Symfony_Component_HttpFoundation_Request/setTrustedProxies.xhtml">setTrustedProxies()</a>
                — Sets a list of trusted proxies.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
