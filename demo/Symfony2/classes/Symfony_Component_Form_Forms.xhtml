<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Symfony\Component\Form\Forms</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Symfony_Component_Form">Symfony\Component\Form</a>
          </li>
          <li class="separator">Forms</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/symfony/symfony/src/Symfony/Component/Form/Forms.php.xhtml#line154">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Symfony\Component\Form\</small>Forms</h1>
        <h4>Entry point of the Form component.</h4>
        <p>Use this class to conveniently create new form factories:<br/><br/>&lt;code&gt;<br/>use Symfony\Component\Form\Forms;<br/><br/>$formFactory = Forms::createFormFactory();<br/><br/>$form = $formFactory-&gt;createBuilder()<br/>-&gt;add('firstName', 'text')<br/>-&gt;add('lastName', 'text')<br/>-&gt;add('age', 'integer')<br/>-&gt;add('gender', 'choice', array(<br/>'choices' =&gt; array('m' =&gt; 'Male', 'f' =&gt; 'Female'),<br/>))<br/>-&gt;getForm();<br/>&lt;/code&gt;<br/><br/>You can also add custom extensions to the form factory:<br/><br/>&lt;code&gt;<br/>$formFactory = Forms::createFormFactoryBuilder()<br/>-&gt;addExtension(new AcmeExtension())<br/>-&gt;getFormFactory();<br/>&lt;/code&gt;<br/><br/>If you create custom form types or type extensions, it is<br/>generally recommended to create your own extensions that lazily<br/>load these types and type extensions. In projects where performance<br/>does not matter that much, you can also pass them directly to the<br/>form factory:<br/><br/>&lt;code&gt;<br/>$formFactory = Forms::createFormFactoryBuilder()<br/>-&gt;addType(new PersonType())<br/>-&gt;addType(new PhoneNumberType())<br/>-&gt;addTypeExtension(new FormTypeHelpTextExtension())<br/>-&gt;getFormFactory();<br/>&lt;/code&gt;<br/><br/>Support for CSRF protection is provided by the CsrfExtension.<br/>This extension needs a CSRF provider with a strong secret<br/>(e.g. a 20 character long random string). The default<br/>implementation for this is DefaultCsrfProvider:<br/><br/>&lt;code&gt;<br/>use Symfony\Component\Form\Extension\Csrf\CsrfExtension;<br/>use Symfony\Component\Form\Extension\Csrf\CsrfProvider\DefaultCsrfProvider;<br/><br/>$secret = 'V8a5Z97e...';<br/>$formFactory = Forms::createFormFactoryBuilder()<br/>-&gt;addExtension(new CsrfExtension(new DefaultCsrfProvider($secret)))<br/>-&gt;getFormFactory();<br/>&lt;/code&gt;<br/><br/>Support for the HttpFoundation is provided by the<br/>HttpFoundationExtension. You are also advised to load the CSRF<br/>extension with the driver for HttpFoundation's Session class:<br/><br/>&lt;code&gt;<br/>use Symfony\Component\HttpFoundation\Session\Session;<br/>use Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationExtension;<br/>use Symfony\Component\Form\Extension\Csrf\CsrfExtension;<br/>use Symfony\Component\Form\Extension\Csrf\CsrfProvider\SessionCsrfProvider;<br/><br/>$session = new Session();<br/>$secret = 'V8a5Z97e...';<br/>$formFactory = Forms::createFormFactoryBuilder()<br/>-&gt;addExtension(new HttpFoundationExtension())<br/>-&gt;addExtension(new CsrfExtension(new SessionCsrfProvider($session, $secret)))<br/>-&gt;getFormFactory();<br/>&lt;/code&gt;<br/><br/>Support for the Validator component is provided by ValidatorExtension.<br/>This extension needs a validator object to function properly:<br/><br/>&lt;code&gt;<br/>use Symfony\Component\Validator\Validation;<br/>use Symfony\Component\Form\Extension\Validator\ValidatorExtension;<br/><br/>$validator = Validation::createValidator();<br/>$formFactory = Forms::createFormFactoryBuilder()<br/>-&gt;addExtension(new ValidatorExtension($validator))<br/>-&gt;getFormFactory();<br/>&lt;/code&gt;<br/><br/>Support for the Templating component is provided by TemplatingExtension.<br/>This extension needs a PhpEngine object for rendering forms. As second<br/>argument you should pass the names of the default themes. Here is an<br/>example for using the default layout with "&lt;div&gt;" tags:<br/><br/>&lt;code&gt;<br/>use Symfony\Component\Form\Extension\Templating\TemplatingExtension;<br/><br/>$formFactory = Forms::createFormFactoryBuilder()<br/>-&gt;addExtension(new TemplatingExtension($engine, null, array(<br/>'FrameworkBundle:Form',<br/>)))<br/>-&gt;getFormFactory();<br/>&lt;/code&gt;<br/><br/>The next example shows how to include the "&lt;table&gt;" layout:<br/><br/>&lt;code&gt;<br/>use Symfony\Component\Form\Extension\Templating\TemplatingExtension;<br/><br/>$formFactory = Forms::createFormFactoryBuilder()<br/>-&gt;addExtension(new TemplatingExtension($engine, null, array(<br/>'FrameworkBundle:Form',<br/>'FrameworkBundle:FormTable',<br/>)))<br/>-&gt;getFormFactory();<br/>&lt;/code&gt;<br/><br/>If you also loaded the CsrfExtension, you should pass the CSRF provider<br/>to the extension so that you can render CSRF tokens in your templates<br/>more easily:<br/><br/>&lt;code&gt;<br/>use Symfony\Component\Form\Extension\Csrf\CsrfExtension;<br/>use Symfony\Component\Form\Extension\Csrf\CsrfProvider\DefaultCsrfProvider;<br/>use Symfony\Component\Form\Extension\Templating\TemplatingExtension;<br/><br/><br/>$secret = 'V8a5Z97e...';<br/>$csrfProvider = new DefaultCsrfProvider($secret);<br/>$formFactory = Forms::createFormFactoryBuilder()<br/>-&gt;addExtension(new CsrfExtension($csrfProvider))<br/>-&gt;addExtension(new TemplatingExtension($engine, $csrfProvider, array(<br/>'FrameworkBundle:Form',<br/>)))<br/>-&gt;getFormFactory();<br/>&lt;/code&gt;</p>
        <ul>
          <li>Author: Bernhard Schussek &lt;bschussek@gmail.com&gt;</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Forms
            {<br/><ul class="none"><li>// methods</li><li>public static FormFactoryInterface <a title="Symfony\Component\Form\Forms" href="../classes/Symfony_Component_Form_Forms/createFormFactory.xhtml">createFormFactory</a>()
                    </li><li>public static FormFactoryBuilderInterface <a title="Symfony\Component\Form\Forms" href="../classes/Symfony_Component_Form_Forms/createFormFactoryBuilder.xhtml">createFormFactoryBuilder</a>()
                    </li><li>private void <a title="Symfony\Component\Form\Forms" href="../classes/Symfony_Component_Form_Forms/__construct.xhtml">__construct</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="createFormFactory"><a title="Symfony\Component\Form\Forms" href="../classes/Symfony_Component_Form_Forms/createFormFactory.xhtml">createFormFactory()</a>
                — Creates a form factory with the default configuration.</li>
            <li id="createFormFactoryBuilder"><a title="Symfony\Component\Form\Forms" href="../classes/Symfony_Component_Form_Forms/createFormFactoryBuilder.xhtml">createFormFactoryBuilder()</a>
                — Creates a form factory builder with the default configuration.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
