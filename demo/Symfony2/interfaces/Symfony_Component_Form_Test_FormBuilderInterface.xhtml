<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Symfony\Component\Form\Test\FormBuilderInterface</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../interfaces.xhtml">Interfaces</a>
          </li>
          <li class="separator">
            <a href="../interfaces.xhtml#Symfony_Component_Form_Test">Symfony\Component\Form\Test</a>
          </li>
          <li class="separator">FormBuilderInterface</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#violations">Violations</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/symfony/symfony/src/Symfony/Component/Form/Test/FormBuilderInterface.php.xhtml#line14">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Symfony\Component\Form\Test\</small>FormBuilderInterface</h1>
        <h4/>
        <p/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">interface FormBuilderInterface
                extends <a title="Iterator" href="../interfaces/Iterator.xhtml">Iterator</a>, <a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface.xhtml">FormBuilderInterface</a>
            {<br/><ul class="none"><li>// Inherited methods from <span title="Iterator">Iterator</span></li><li>public mixed <a title="Iterator" href="../interfaces/Iterator/current.xhtml">current</a>()
                        </li><li>public scalar <a title="Iterator" href="../interfaces/Iterator/key.xhtml">key</a>()
                        </li><li>public void <a title="Iterator" href="../interfaces/Iterator/next.xhtml">next</a>()
                        </li><li>public void <a title="Iterator" href="../interfaces/Iterator/rewind.xhtml">rewind</a>()
                        </li><li>public boolean <a title="Iterator" href="../interfaces/Iterator/valid.xhtml">valid</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="Symfony\Component\Form\FormBuilderInterface">FormBuilderInterface</span></li><li>public FormBuilderInterface <a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface/add.xhtml">add</a>()
                        </li><li>public FormBuilderInterface <a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface/create.xhtml">create</a>()
                        </li><li>public FormBuilderInterface <a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface/get.xhtml">get</a>()
                        </li><li>public FormBuilderInterface <a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface/remove.xhtml">remove</a>()
                        </li><li>public Boolean <a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface/has.xhtml">has</a>()
                        </li><li>public array <a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface/all.xhtml">all</a>()
                        </li><li>public Form <a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface/getForm.xhtml">getForm</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="Countable">Countable</span></li><li>public int <a title="Countable" href="../interfaces/Countable/count.xhtml">count</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="Symfony\Component\Form\FormConfigBuilderInterface">FormConfigBuilderInterface</span></li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/addEventListener.xhtml">addEventListener</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/addEventSubscriber.xhtml">addEventSubscriber</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/addViewTransformer.xhtml">addViewTransformer</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/resetViewTransformers.xhtml">resetViewTransformers</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/addModelTransformer.xhtml">addModelTransformer</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/resetModelTransformers.xhtml">resetModelTransformers</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setAttribute.xhtml">setAttribute</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setAttributes.xhtml">setAttributes</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setDataMapper.xhtml">setDataMapper</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setDisabled.xhtml">setDisabled</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setEmptyData.xhtml">setEmptyData</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setErrorBubbling.xhtml">setErrorBubbling</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setRequired.xhtml">setRequired</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setPropertyPath.xhtml">setPropertyPath</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setMapped.xhtml">setMapped</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setByReference.xhtml">setByReference</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setInheritData.xhtml">setInheritData</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setCompound.xhtml">setCompound</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setType.xhtml">setType</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setData.xhtml">setData</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setDataLocked.xhtml">setDataLocked</a>()
                        </li><li>public void <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setFormFactory.xhtml">setFormFactory</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setAction.xhtml">setAction</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setMethod.xhtml">setMethod</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setRequestHandler.xhtml">setRequestHandler</a>()
                        </li><li>public self <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setAutoInitialize.xhtml">setAutoInitialize</a>()
                        </li><li>public FormConfigInterface <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/getFormConfig.xhtml">getFormConfig</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="Symfony\Component\Form\FormConfigInterface">FormConfigInterface</span></li><li>public EventDispatcherInterface <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getEventDispatcher.xhtml">getEventDispatcher</a>()
                        </li><li>public string <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getName.xhtml">getName</a>()
                        </li><li>public PropertyPathInterface <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getPropertyPath.xhtml">getPropertyPath</a>()
                        </li><li>public Boolean <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getMapped.xhtml">getMapped</a>()
                        </li><li>public Boolean <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getByReference.xhtml">getByReference</a>()
                        </li><li>public Boolean <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getInheritData.xhtml">getInheritData</a>()
                        </li><li>public Boolean <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getCompound.xhtml">getCompound</a>()
                        </li><li>public ResolvedFormTypeInterface <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getType.xhtml">getType</a>()
                        </li><li>public array <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getViewTransformers.xhtml">getViewTransformers</a>()
                        </li><li>public array <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getModelTransformers.xhtml">getModelTransformers</a>()
                        </li><li>public DataMapperInterface <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getDataMapper.xhtml">getDataMapper</a>()
                        </li><li>public Boolean <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getRequired.xhtml">getRequired</a>()
                        </li><li>public Boolean <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getDisabled.xhtml">getDisabled</a>()
                        </li><li>public Boolean <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getErrorBubbling.xhtml">getErrorBubbling</a>()
                        </li><li>public mixed <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getEmptyData.xhtml">getEmptyData</a>()
                        </li><li>public array <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getAttributes.xhtml">getAttributes</a>()
                        </li><li>public Boolean <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/hasAttribute.xhtml">hasAttribute</a>()
                        </li><li>public mixed <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getAttribute.xhtml">getAttribute</a>()
                        </li><li>public mixed <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getData.xhtml">getData</a>()
                        </li><li>public string <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getDataClass.xhtml">getDataClass</a>()
                        </li><li>public Boolean <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getDataLocked.xhtml">getDataLocked</a>()
                        </li><li>public FormFactoryInterface <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getFormFactory.xhtml">getFormFactory</a>()
                        </li><li>public string <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getAction.xhtml">getAction</a>()
                        </li><li>public string <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getMethod.xhtml">getMethod</a>()
                        </li><li>public RequestHandlerInterface <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getRequestHandler.xhtml">getRequestHandler</a>()
                        </li><li>public Boolean <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getAutoInitialize.xhtml">getAutoInitialize</a>()
                        </li><li>public array <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getOptions.xhtml">getOptions</a>()
                        </li><li>public Boolean <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/hasOption.xhtml">hasOption</a>()
                        </li><li>public mixed <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getOption.xhtml">getOption</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../interfaces/Iterator.xhtml">Iterator</a>
            </li>
            <li>
              <a href="../interfaces/Symfony_Component_Form_FormBuilderInterface.xhtml">Symfony\Component\Form\FormBuilderInterface</a>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h3>Inherited from <a title="Iterator" href="../interfaces/Iterator.xhtml">Iterator</a></h3>
          <h4>public</h4>
          <ul>
            <li id="current"><a title="Iterator" href="../interfaces/Iterator/current.xhtml">current()</a>
                — Return the current element</li>
            <li id="key"><a title="Iterator" href="../interfaces/Iterator/key.xhtml">key()</a>
                — Return the key of the current element</li>
            <li id="next"><a title="Iterator" href="../interfaces/Iterator/next.xhtml">next()</a>
                — Move forward to next element</li>
            <li id="rewind"><a title="Iterator" href="../interfaces/Iterator/rewind.xhtml">rewind()</a>
                — Rewind the Iterator to the first element</li>
            <li id="valid"><a title="Iterator" href="../interfaces/Iterator/valid.xhtml">valid()</a>
                — Checks if current position is valid</li>
          </ul>
          <h3>Inherited from <a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface.xhtml">Symfony\Component\Form\FormBuilderInterface</a></h3>
          <h4>public</h4>
          <ul>
            <li id="add"><a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface/add.xhtml">add()</a>
                — Adds a new field to this group. A field must have a unique name within the group. Otherwise the existing field is overwritten.</li>
            <li id="all"><a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface/all.xhtml">all()</a>
                — Returns the children.</li>
            <li id="create"><a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface/create.xhtml">create()</a>
                — Creates a form builder.</li>
            <li id="get"><a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface/get.xhtml">get()</a>
                — Returns a child by name.</li>
            <li id="getForm"><a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface/getForm.xhtml">getForm()</a>
                — Creates the form.</li>
            <li id="has"><a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface/has.xhtml">has()</a>
                — Returns whether a field with the given name exists.</li>
            <li id="remove"><a title="Symfony\Component\Form\FormBuilderInterface" href="../interfaces/Symfony_Component_Form_FormBuilderInterface/remove.xhtml">remove()</a>
                — Removes the field with the given name.</li>
          </ul>
          <h3>Inherited from <a title="Countable" href="../interfaces/Countable.xhtml">Countable</a></h3>
          <h4>public</h4>
          <ul>
            <li id="count"><a title="Countable" href="../interfaces/Countable/count.xhtml">count()</a>
                — Count elements of an object</li>
          </ul>
          <h3>Inherited from <a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface.xhtml">Symfony\Component\Form\FormConfigBuilderInterface</a></h3>
          <h4>public</h4>
          <ul>
            <li id="addEventListener"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/addEventListener.xhtml">addEventListener()</a>
                — Adds an event listener to an event on this form.</li>
            <li id="addEventSubscriber"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/addEventSubscriber.xhtml">addEventSubscriber()</a>
                — Adds an event subscriber for events on this form.</li>
            <li id="addModelTransformer"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/addModelTransformer.xhtml">addModelTransformer()</a>
                — Prepends / appends a transformer to the normalization transformer chain.</li>
            <li id="addViewTransformer"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/addViewTransformer.xhtml">addViewTransformer()</a>
                — Appends / prepends a transformer to the view transformer chain.</li>
            <li id="getFormConfig"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/getFormConfig.xhtml">getFormConfig()</a>
                — Builds and returns the form configuration.</li>
            <li id="resetModelTransformers"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/resetModelTransformers.xhtml">resetModelTransformers()</a>
                — Clears the normalization transformers.</li>
            <li id="resetViewTransformers"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/resetViewTransformers.xhtml">resetViewTransformers()</a>
                — Clears the view transformers.</li>
            <li id="setAction"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setAction.xhtml">setAction()</a>
                — Sets the target URL of the form.</li>
            <li id="setAttribute"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setAttribute.xhtml">setAttribute()</a>
                — Sets the value for an attribute.</li>
            <li id="setAttributes"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setAttributes.xhtml">setAttributes()</a>
                — Sets the attributes.</li>
            <li id="setAutoInitialize"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setAutoInitialize.xhtml">setAutoInitialize()</a>
                — Sets whether the form should be initialized automatically.</li>
            <li id="setByReference"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setByReference.xhtml">setByReference()</a>
                — Sets whether the form's data should be modified by reference.</li>
            <li id="setCompound"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setCompound.xhtml">setCompound()</a>
                — Sets whether the form should be compound.</li>
            <li id="setData"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setData.xhtml">setData()</a>
                — Sets the initial data of the form.</li>
            <li id="setDataLocked"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setDataLocked.xhtml">setDataLocked()</a>
                — Locks the form's data to the data passed in the configuration.</li>
            <li id="setDataMapper"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setDataMapper.xhtml">setDataMapper()</a>
                — Sets the data mapper used by the form.</li>
            <li id="setDisabled"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setDisabled.xhtml">setDisabled()</a>
                — Set whether the form is disabled.</li>
            <li id="setEmptyData"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setEmptyData.xhtml">setEmptyData()</a>
                — Sets the data used for the client data when no value is submitted.</li>
            <li id="setErrorBubbling"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setErrorBubbling.xhtml">setErrorBubbling()</a>
                — Sets whether errors bubble up to the parent.</li>
            <li id="setFormFactory"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setFormFactory.xhtml">setFormFactory()</a>
                — Sets the form factory used for creating new forms.</li>
            <li id="setInheritData"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setInheritData.xhtml">setInheritData()</a>
                — Sets whether the form should read and write the data of its parent.</li>
            <li id="setMapped"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setMapped.xhtml">setMapped()</a>
                — Sets whether the form should be mapped to an element of its parent's data.</li>
            <li id="setMethod"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setMethod.xhtml">setMethod()</a>
                — Sets the HTTP method used by the form.</li>
            <li id="setPropertyPath"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setPropertyPath.xhtml">setPropertyPath()</a>
                — Sets the property path that the form should be mapped to.</li>
            <li id="setRequestHandler"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setRequestHandler.xhtml">setRequestHandler()</a>
                — Sets the request handler used by the form.</li>
            <li id="setRequired"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setRequired.xhtml">setRequired()</a>
                — Sets whether this field is required to be filled out when submitted.</li>
            <li id="setType"><a title="Symfony\Component\Form\FormConfigBuilderInterface" href="../interfaces/Symfony_Component_Form_FormConfigBuilderInterface/setType.xhtml">setType()</a>
                — Set the types.</li>
          </ul>
          <h3>Inherited from <a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface.xhtml">Symfony\Component\Form\FormConfigInterface</a></h3>
          <h4>public</h4>
          <ul>
            <li id="getAction"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getAction.xhtml">getAction()</a>
                — Returns the target URL of the form.</li>
            <li id="getAttribute"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getAttribute.xhtml">getAttribute()</a>
                — Returns the value of the given attribute.</li>
            <li id="getAttributes"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getAttributes.xhtml">getAttributes()</a>
                — Returns additional attributes of the form.</li>
            <li id="getAutoInitialize"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getAutoInitialize.xhtml">getAutoInitialize()</a>
                — Returns whether the form should be initialized upon creation.</li>
            <li id="getByReference"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getByReference.xhtml">getByReference()</a>
                — Returns whether the form's data should be modified by reference.</li>
            <li id="getCompound"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getCompound.xhtml">getCompound()</a>
                — Returns whether the form is compound.</li>
            <li id="getData"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getData.xhtml">getData()</a>
                — Returns the initial data of the form.</li>
            <li id="getDataClass"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getDataClass.xhtml">getDataClass()</a>
                — Returns the class of the form data or null if the data is scalar or an array.</li>
            <li id="getDataLocked"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getDataLocked.xhtml">getDataLocked()</a>
                — Returns whether the form's data is locked.</li>
            <li id="getDataMapper"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getDataMapper.xhtml">getDataMapper()</a>
                — Returns the data mapper of the form.</li>
            <li id="getDisabled"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getDisabled.xhtml">getDisabled()</a>
                — Returns whether the form is disabled.</li>
            <li id="getEmptyData"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getEmptyData.xhtml">getEmptyData()</a>
                — Returns the data that should be returned when the form is empty.</li>
            <li id="getErrorBubbling"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getErrorBubbling.xhtml">getErrorBubbling()</a>
                — Returns whether errors attached to the form will bubble to its parent.</li>
            <li id="getEventDispatcher"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getEventDispatcher.xhtml">getEventDispatcher()</a>
                — Returns the event dispatcher used to dispatch form events.</li>
            <li id="getFormFactory"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getFormFactory.xhtml">getFormFactory()</a>
                — Returns the form factory used for creating new forms.</li>
            <li id="getInheritData"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getInheritData.xhtml">getInheritData()</a>
                — Returns whether the form should read and write the data of its parent.</li>
            <li id="getMapped"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getMapped.xhtml">getMapped()</a>
                — Returns whether the form should be mapped to an element of its parent's data.</li>
            <li id="getMethod"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getMethod.xhtml">getMethod()</a>
                — Returns the HTTP method used by the form.</li>
            <li id="getModelTransformers"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getModelTransformers.xhtml">getModelTransformers()</a>
                — Returns the model transformers of the form.</li>
            <li id="getName"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getName.xhtml">getName()</a>
                — Returns the name of the form used as HTTP parameter.</li>
            <li id="getOption"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getOption.xhtml">getOption()</a>
                — Returns the value of a specific option.</li>
            <li id="getOptions"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getOptions.xhtml">getOptions()</a>
                — Returns all options passed during the construction of the form.</li>
            <li id="getPropertyPath"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getPropertyPath.xhtml">getPropertyPath()</a>
                — Returns the property path that the form should be mapped to.</li>
            <li id="getRequestHandler"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getRequestHandler.xhtml">getRequestHandler()</a>
                — Returns the request handler used by the form.</li>
            <li id="getRequired"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getRequired.xhtml">getRequired()</a>
                — Returns whether the form is required.</li>
            <li id="getType"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getType.xhtml">getType()</a>
                — Returns the form types used to construct the form.</li>
            <li id="getViewTransformers"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/getViewTransformers.xhtml">getViewTransformers()</a>
                — Returns the view transformers of the form.</li>
            <li id="hasAttribute"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/hasAttribute.xhtml">hasAttribute()</a>
                — Returns whether the attribute with the given name exists.</li>
            <li id="hasOption"><a title="Symfony\Component\Form\FormConfigInterface" href="../interfaces/Symfony_Component_Form_FormConfigInterface/hasOption.xhtml">hasOption()</a>
                — Returns whether a specific option exists.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
