<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Uri\UriInterface - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#__toString">__toString</a>
          </li>
          <li>
            <a href="#getFragment">getFragment</a>
          </li>
          <li>
            <a href="#getHost">getHost</a>
          </li>
          <li>
            <a href="#getPath">getPath</a>
          </li>
          <li>
            <a href="#getPort">getPort</a>
          </li>
          <li>
            <a href="#getQuery">getQuery</a>
          </li>
          <li>
            <a href="#getQueryAsArray">getQueryAsArray</a>
          </li>
          <li>
            <a href="#getScheme">getScheme</a>
          </li>
          <li>
            <a href="#getUserInfo">getUserInfo</a>
          </li>
          <li>
            <a href="#isAbsolute">isAbsolute</a>
          </li>
          <li>
            <a href="#isValid">isValid</a>
          </li>
          <li>
            <a href="#isValidRelative">isValidRelative</a>
          </li>
          <li>
            <a href="#makeRelative">makeRelative</a>
          </li>
          <li>
            <a href="#normalize">normalize</a>
          </li>
          <li>
            <a href="#parse">parse</a>
          </li>
          <li>
            <a href="#setFragment">setFragment</a>
          </li>
          <li>
            <a href="#setHost">setHost</a>
          </li>
          <li>
            <a href="#setPath">setPath</a>
          </li>
          <li>
            <a href="#setPort">setPort</a>
          </li>
          <li>
            <a href="#setQuery">setQuery</a>
          </li>
          <li>
            <a href="#setScheme">setScheme</a>
          </li>
          <li>
            <a href="#setUserInfo">setUserInfo</a>
          </li>
          <li>
            <a href="#toString">toString</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Uri\</span>UriInterface</h2>
        <div class="file-notice">
          <p>Interface defining an URI</p>
        </div>
        <ul class="fileinfos"/>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><span title="Uri|string|null">Uri|string|null</span></span><strong> $uri</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create a new URI object</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$uri</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="__toString"/>
            <h4><span class="label public">public</span>__toString<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Magic method to convert the URI to a string</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFragment"/>
            <h4><span class="label public">public</span>getFragment<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the URI fragment</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getHost"/>
            <h4><span class="label public">public</span>getHost<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the URI host</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPath"/>
            <h4><span class="label public">public</span>getPath<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the URI path</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPort"/>
            <h4><span class="label public">public</span>getPort<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the URI port</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getQuery"/>
            <h4><span class="label public">public</span>getQuery<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the URI query</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getQueryAsArray"/>
            <h4><span class="label public">public</span>getQueryAsArray<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Return the query string as an associative array of key =&gt; value pairs<pre>This is an extension to RFC-3986 but is quite useful when working with
most common URI types</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getScheme"/>
            <h4><span class="label public">public</span>getScheme<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the scheme part of the URI</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getUserInfo"/>
            <h4><span class="label public">public</span>getUserInfo<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the User-info (usually user:password) part</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isAbsolute"/>
            <h4><span class="label public">public</span>isAbsolute<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check if the URI is an absolute or relative URI</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isValid"/>
            <h4><span class="label public">public</span>isValid<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check if the URI is valid<pre>Note that a relative URI may still be valid</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isValidRelative"/>
            <h4><span class="label public">public</span>isValidRelative<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check if the URI is a valid relative URI</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="makeRelative"/>
            <h4><span class="label public">public</span>makeRelative<span style="font-size:90%;">( <span class="param-type"><span title="Uri|string">Uri|string</span></span><strong> $baseUri</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Convert the link to a relative link by substracting a base URI<pre>This is the opposite of resolving a relative link - i.e. creating a
 relative reference link from an original URI and a base URI.

 If the two URIs do not intersect (e.g. the original URI is not in any
 way related to the base URI) the URI will not be modified.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$baseUri</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="normalize"/>
            <h4><span class="label public">public</span>normalize<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Normalize the URI<pre>Normalizing a URI includes removing any redundant parent directory or
current directory references from the path (e.g. foo/bar/../baz becomes
foo/baz), normalizing the scheme case, decoding any over-encoded
characters etc.

Eventually, two normalized URLs pointing to the same resource should be
equal even if they were originally represented by two different strings</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="parse"/>
            <h4><span class="label public">public</span>parse<span style="font-size:90%;">( <span class="param-type">string</span><strong> $uri</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Parse a URI string</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$uri</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFragment"/>
            <h4><span class="label public">public</span>setFragment<span style="font-size:90%;">( <span class="param-type">string</span><strong> $fragment</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the URI fragment part</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$fragment</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidUriPartException If the schema definition</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setHost"/>
            <h4><span class="label public">public</span>setHost<span style="font-size:90%;">( <span class="param-type">string</span><strong> $host</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the URI host<pre>Note that the generic syntax for URIs allows using host names which
are not necessarily IPv4 addresses or valid DNS host names. For example,
IPv6 addresses are allowed as well, and also an abstract "registered name"
which may be any name composed of a valid set of characters, including,
for example, tilda (~) and underscore (_) which are not allowed in DNS
names.

Subclasses of Uri may impose more strict validation of host names - for
example the HTTP RFC clearly states that only IPv4 and valid DNS names
are allowed in HTTP URIs.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$host</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidUriPartException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setPath"/>
            <h4><span class="label public">public</span>setPath<span style="font-size:90%;">( <span class="param-type">string</span><strong> $path</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the path</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$path</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setPort"/>
            <h4><span class="label public">public</span>setPort<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $port</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the port part of the URI</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$port</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setQuery"/>
            <h4><span class="label public">public</span>setQuery<span style="font-size:90%;">( <span class="param-type"><span title="string|array">string|array</span></span><strong> $query</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the query string<pre>If an array is provided, will encode this array of parameters into a
query string. Array values will be represented in the query string using
PHP's common square bracket notation.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$query</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setScheme"/>
            <h4><span class="label public">public</span>setScheme<span style="font-size:90%;">( <span class="param-type">string</span><strong> $scheme</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the URI scheme<pre>If the scheme is not valid according to the generic scheme syntax or
is not acceptable by the specific URI class (e.g. 'http' or 'https' are
the only acceptable schemes for the Zend\Uri\Http class) an exception
will be thrown.

You can check if a scheme is valid before setting it using the
validateScheme() method.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$scheme</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidUriPartException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setUserInfo"/>
            <h4><span class="label public">public</span>setUserInfo<span style="font-size:90%;">( <span class="param-type">string</span><strong> $userInfo</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the URI User-info part (usually user:password)</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$userInfo</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidUriPartException If the schema definition</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="toString"/>
            <h4><span class="label public">public</span>toString<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Compose the URI into a string</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidUriException</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
