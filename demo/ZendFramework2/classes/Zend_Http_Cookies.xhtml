<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Zend\Http\Cookies</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Zend_Http">Zend\Http</a>
          </li>
          <li class="separator">Cookies</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#tasks">Tasks</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/Http/Cookies.php.xhtml#line35">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Zend\Http\</small>Cookies</h1>
        <h4>A Zend\Http\Cookies object is designed to contain and maintain HTTP cookies, and should be used along with Zend\Http\Client in order to manage cookies across HTTP requests and responses.</h4>
        <p>The class contains an array of Zend\Http\Header\Cookie objects. Cookies can be added<br/>automatically from a request or manually. Then, the Cookies class can find and return the<br/>cookies needed for a specific HTTP request.<br/><br/>A special parameter can be passed to all methods of this class that return cookies: Cookies<br/>can be returned either in their native form (as Zend\Http\Header\Cookie objects) or as strings -<br/>the later is suitable for sending as the value of the "Cookie" header in an HTTP request.<br/>You can also choose, when returning more than one cookie, whether to get an array of strings<br/>(by passing Zend\Http\Client\Cookies::COOKIE_STRING_ARRAY) or one unified string for all cookies<br/>(by passing Zend\Http\Client\Cookies::COOKIE_STRING_CONCAT).</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Cookies
                extends <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers.xhtml">Headers</a>
            {<br/><ul class="none"><li>// constants</li><li>const COOKIE_OBJECT = 0;</li><li>const COOKIE_STRING_ARRAY = 1;</li><li>const COOKIE_STRING_CONCAT = 2;</li><li>const COOKIE_STRING_CONCAT_STRICT = 3;</li></ul><ul class="none"><li>// members</li><li>protected <span title="\Zend\Http\Cookies">Cookies</span> <a href="#members">$cookies</a>;
                    </li><li>protected <span title="\Zend\Http\Headers">Headers</span> <a href="#members">$headers</a>;
                    </li><li>protected array <a href="#members">$rawCookies</a>;
                    </li></ul><ul class="none"><li>// Inherited members from <span title="Zend\Http\Headers">Headers</span></li><li>protected <span title="Zend\Http\PluginClassLoader">PluginClassLoader</span> <a href="#members">$pluginClassLoader</a>;
                        </li><li>protected array <a href="#members">$headersKeys</a>;
                        </li><li>protected array <a href="#members">$headers</a>;
                        </li></ul><ul class="none"><li>// methods</li><li>public static void <a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/fromString.xhtml">fromString</a>()
                    </li><li>public void <a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/addCookie.xhtml">addCookie</a>()
                    </li><li>public void <a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/addCookiesFromResponse.xhtml">addCookiesFromResponse</a>()
                    </li><li>public array|string <a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/getAllCookies.xhtml">getAllCookies</a>()
                    </li><li>public array|string <a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/getMatchingCookies.xhtml">getMatchingCookies</a>()
                    </li><li>public SetCookie|string <a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/getCookie.xhtml">getCookie</a>()
                    </li><li>protected array|string <a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/_flattenCookiesArray.xhtml">_flattenCookiesArray</a>()
                    </li><li>protected array <a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/_matchDomain.xhtml">_matchDomain</a>()
                    </li><li>protected array <a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/_matchPath.xhtml">_matchPath</a>()
                    </li><li>public static Cookies <a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/fromResponse.xhtml">fromResponse</a>()
                    </li><li>public bool <a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/isEmpty.xhtml">isEmpty</a>()
                    </li><li>public Cookies <a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/reset.xhtml">reset</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="Zend\Http\Headers">Headers</span></li><li>public static Headers <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/fromString.xhtml">fromString</a>()
                        </li><li>public Headers <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/setPluginClassLoader.xhtml">setPluginClassLoader</a>()
                        </li><li>public PluginClassLocator <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/getPluginClassLoader.xhtml">getPluginClassLoader</a>()
                        </li><li>public Headers <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/addHeaders.xhtml">addHeaders</a>()
                        </li><li>public Headers <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/addHeaderLine.xhtml">addHeaderLine</a>()
                        </li><li>public Headers <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/addHeader.xhtml">addHeader</a>()
                        </li><li>public bool <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/removeHeader.xhtml">removeHeader</a>()
                        </li><li>public Headers <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/clearHeaders.xhtml">clearHeaders</a>()
                        </li><li>public HeaderInterface|ArrayIterator <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/get.xhtml">get</a>()
                        </li><li>public bool <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/has.xhtml">has</a>()
                        </li><li>public void <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/next.xhtml">next</a>()
                        </li><li>public mixed <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/key.xhtml">key</a>()
                        </li><li>public bool <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/valid.xhtml">valid</a>()
                        </li><li>public void <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/rewind.xhtml">rewind</a>()
                        </li><li>public HeaderInterface <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/current.xhtml">current</a>()
                        </li><li>public int <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/count.xhtml">count</a>()
                        </li><li>public string <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/toString.xhtml">toString</a>()
                        </li><li>public array <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/toArray.xhtml">toArray</a>()
                        </li><li>public bool <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/forceLoading.xhtml">forceLoading</a>()
                        </li><li>protected mixed|void <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/lazyLoadHeader.xhtml">lazyLoadHeader</a>()
                        </li><li>protected static string <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/createKey.xhtml">createKey</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/Zend_Http_Headers.xhtml">Zend\Http\Headers</a>
            </li>
          </ul>
        </div>
        <h2 id="tasks">Tasks</h2>
        <table class="styled">
          <thead>
            <tr>
              <th style="width:3em;">Line</th>
              <th>Task</th>
            </tr>
          </thead>
          <tr>
            <td class="nummeric">343+</td>
            <td>Add the $uri functionality.</td>
          </tr>
          <tr>
            <td class="nummeric">383+</td>
            <td>determine how to produce single line headers, if they are supported</td>
          </tr>
        </table>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="COOKIE_OBJECT">COOKIE_OBJECT</td>
              <td>0</td>
            </tr>
            <tr>
              <td id="COOKIE_STRING_ARRAY">COOKIE_STRING_ARRAY</td>
              <td>1</td>
            </tr>
            <tr>
              <td id="COOKIE_STRING_CONCAT">COOKIE_STRING_CONCAT</td>
              <td>2</td>
            </tr>
            <tr>
              <td id="COOKIE_STRING_CONCAT_STRICT">COOKIE_STRING_CONCAT_STRICT</td>
              <td>3</td>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="cookies"><strong>$cookies</strong>
                —
                <a href="#">\Zend\Http\Cookies</a></li>
            <li id="headers"><strong>$headers</strong>
                —
                <a href="#">\Zend\Http\Headers</a></li>
            <li id="headers"><strong>$headers</strong>
                —
                array</li>
            <li id="headersKeys"><strong>$headersKeys</strong>
                —
                array</li>
            <li id="pluginClassLoader"><strong>$pluginClassLoader</strong>
                —
                <a href="#">Zend\Http\PluginClassLoader</a></li>
            <li id="rawCookies"><strong>$rawCookies</strong>
                —
                array</li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>protected</h4>
          <ul>
            <li id="_flattenCookiesArray"><a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/_flattenCookiesArray.xhtml">_flattenCookiesArray()</a>
                — Helper function to recursively flatten an array. Should be used when exporting the cookies array (or parts of it)</li>
            <li id="_matchDomain"><a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/_matchDomain.xhtml">_matchDomain()</a>
                — Return a subset of the cookies array matching a specific domain</li>
            <li id="_matchPath"><a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/_matchPath.xhtml">_matchPath()</a>
                — Return a subset of a domain-matching cookies that also match a specified path</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="addCookie"><a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/addCookie.xhtml">addCookie()</a>
                — Add a cookie to the class. Cookie should be passed either as a Zend\Http\Header\Cookie object or as a string - in which case an object is created from the string.</li>
            <li id="addCookiesFromResponse"><a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/addCookiesFromResponse.xhtml">addCookiesFromResponse()</a>
                — Parse an HTTP response, adding all the cookies set in that response</li>
            <li id="fromResponse"><a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/fromResponse.xhtml">fromResponse()</a>
                — Create a new Cookies object and automatically load into it all the cookies set in a Response object. If $uri is set, it will be considered as the requested URI for setting default domain and path of the cookie.</li>
            <li id="fromString">
              <a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/fromString.xhtml">fromString()</a>
            </li>
            <li id="getAllCookies"><a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/getAllCookies.xhtml">getAllCookies()</a>
                — Get all cookies in the cookie jar as an array</li>
            <li id="getCookie"><a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/getCookie.xhtml">getCookie()</a>
                — Get a specific cookie according to a URI and name</li>
            <li id="getMatchingCookies"><a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/getMatchingCookies.xhtml">getMatchingCookies()</a>
                — Return an array of all cookies matching a specific request according to the request URI, whether session cookies should be sent or not, and the time to consider as "now" when checking cookie expiry time.</li>
            <li id="isEmpty"><a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/isEmpty.xhtml">isEmpty()</a>
                — Tells if the array of cookies is empty</li>
            <li id="reset"><a title="Zend\Http\Cookies" href="../classes/Zend_Http_Cookies/reset.xhtml">reset()</a>
                — Empties the cookieJar of any cookie</li>
          </ul>
          <h3>Inherited from <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers.xhtml">Zend\Http\Headers</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="createKey"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/createKey.xhtml">createKey()</a>
                — Create array key from header name</li>
            <li id="lazyLoadHeader">
              <a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/lazyLoadHeader.xhtml">lazyLoadHeader()</a>
            </li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="addHeader"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/addHeader.xhtml">addHeader()</a>
                — Add a Header to this container, for raw values @see addHeaderLine() and addHeaders()</li>
            <li id="addHeaderLine"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/addHeaderLine.xhtml">addHeaderLine()</a>
                — Add a raw header line, either in name =&gt; value, or as a single string 'name: value'</li>
            <li id="addHeaders"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/addHeaders.xhtml">addHeaders()</a>
                — Add many headers at once</li>
            <li id="clearHeaders"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/clearHeaders.xhtml">clearHeaders()</a>
                — Clear all headers</li>
            <li id="count"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/count.xhtml">count()</a>
                — Return the number of headers in this contain, if all headers have not been parsed, actual count could increase if MultipleHeader objects exist in the Request/Response.  If you need an exact count, iterate</li>
            <li id="current"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/current.xhtml">current()</a>
                — Return the current value for this iterator, lazy loading it if need be</li>
            <li id="forceLoading"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/forceLoading.xhtml">forceLoading()</a>
                — By calling this, it will force parsing and loading of all headers, after this count() will be accurate</li>
            <li id="fromString"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/fromString.xhtml">fromString()</a>
                — Populates headers from string representation</li>
            <li id="get"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/get.xhtml">get()</a>
                — Get all headers of a certain name/type</li>
            <li id="getPluginClassLoader"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/getPluginClassLoader.xhtml">getPluginClassLoader()</a>
                — Return an instance of a PluginClassLocator, lazyload and inject map if necessary</li>
            <li id="has"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/has.xhtml">has()</a>
                — Test for existence of a type of header</li>
            <li id="key"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/key.xhtml">key()</a>
                — Return the current key for this object as an iterator</li>
            <li id="next"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/next.xhtml">next()</a>
                — Advance the pointer for this object as an iterator</li>
            <li id="removeHeader"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/removeHeader.xhtml">removeHeader()</a>
                — Remove a Header from the container</li>
            <li id="rewind"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/rewind.xhtml">rewind()</a>
                — Reset the internal pointer for this object as an iterator</li>
            <li id="setPluginClassLoader"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/setPluginClassLoader.xhtml">setPluginClassLoader()</a>
                — Set an alternate implementation for the PluginClassLoader</li>
            <li id="toArray"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/toArray.xhtml">toArray()</a>
                — Return the headers container as an array</li>
            <li id="toString"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/toString.xhtml">toString()</a>
                — Render all headers at once</li>
            <li id="valid"><a title="Zend\Http\Headers" href="../classes/Zend_Http_Headers/valid.xhtml">valid()</a>
                — Is this iterator still valid?</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
