<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Mail\Header\HeaderLoader - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#plugins">$plugins</a>
          </li>
          <li>
            <a href="#plugins">$plugins</a>
          </li>
          <li>
            <a href="#staticMap">$staticMap</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#addStaticMap">addStaticMap</a>
          </li>
          <li>
            <a href="#getClassName">getClassName</a>
          </li>
          <li>
            <a href="#getIterator">getIterator</a>
          </li>
          <li>
            <a href="#getRegisteredPlugins">getRegisteredPlugins</a>
          </li>
          <li>
            <a href="#isLoaded">isLoaded</a>
          </li>
          <li>
            <a href="#load">load</a>
          </li>
          <li>
            <a href="#registerPlugin">registerPlugin</a>
          </li>
          <li>
            <a href="#registerPlugins">registerPlugins</a>
          </li>
          <li>
            <a href="#unregisterPlugin">unregisterPlugin</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Mail\Header\</span>HeaderLoader</h2>
        <div class="file-notice">
          <p>Plugin Class Loader implementation for HTTP headers</p>
        </div>
        <ul class="fileinfos"/>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="plugins"/>
            <h4><span class="label protected">protected</span>array 
                
                $plugins</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><span title="null|array|Traversable">null|array|Traversable</span></span><strong> $map</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$map</code> - If provided, seeds the loader with a map</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="addStaticMap"/>
            <h4><span class="label true">true</span><span class="label public">public</span>addStaticMap<span style="font-size:90%;">( <span class="param-type"><span title="null|array|Traversable">null|array|Traversable</span></span><strong> $map</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Add a static map of plugins<pre>A null value will clear the static map.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$map</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getClassName"/>
            <h4><span class="label public">public</span>getClassName<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Return full class name for a named helper</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getIterator"/>
            <h4><span class="label public">public</span>getIterator<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Defined by IteratorAggregate<pre>Returns an instance of ArrayIterator, containing a map of
all plugins</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRegisteredPlugins"/>
            <h4><span class="label public">public</span>getRegisteredPlugins<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get a list of all registered plugins</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isLoaded"/>
            <h4><span class="label public">public</span>isLoaded<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Whether or not a plugin by a specific name has been registered</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="load"/>
            <h4><span class="label public">public</span>load<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Load a helper via the name provided</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerPlugin"/>
            <h4><span class="label public">public</span>registerPlugin<span style="font-size:90%;">( <span class="param-type">string</span><strong> $shortName</strong>, <span class="param-type">string</span><strong> $className</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Register a class to a given short name</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$shortName</code> - </li>
                <li><code>$className</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerPlugins"/>
            <h4><span class="label public">public</span>registerPlugins<span style="font-size:90%;">( <span class="param-type"><span title="string|array|Traversable">string|array|Traversable</span></span><strong> $map</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Register many plugins at once<pre>If $map is a string, assumes that the map is the class name of a
Traversable object (likely a ShortNameLocator); it will then instantiate
this class and use it to register plugins.

If $map is an array or Traversable object, it will iterate it to
register plugin names/classes.

For all other arguments, or if the string $map is not a class or not a
Traversable class, an exception will be raised.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$map</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="unregisterPlugin"/>
            <h4><span class="label public">public</span>unregisterPlugin<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $shortName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Unregister a short name lookup</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$shortName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
