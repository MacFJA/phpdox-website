<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Memory\Container\Movable - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Constants</h3>
        <ul>
          <li>
            <a href="#LOADED">LOADED</a>
          </li>
          <li>
            <a href="#SWAPPED">SWAPPED</a>
          </li>
          <li>
            <a href="#LOCKED">LOCKED</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#id">$id</a>
          </li>
          <li>
            <a href="#memManager">$memManager</a>
          </li>
          <li>
            <a href="#value">$value</a>
          </li>
          <li>
            <a href="#state">$state</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#__get">__get</a>
          </li>
          <li>
            <a href="#__set">__set</a>
          </li>
          <li>
            <a href="#destroy">destroy</a>
          </li>
          <li>
            <a href="#getId">getId</a>
          </li>
          <li>
            <a href="#getRef">getRef</a>
          </li>
          <li>
            <a href="#isLocked">isLocked</a>
          </li>
          <li>
            <a href="#isSwapped">isSwapped</a>
          </li>
          <li>
            <a href="#lock">lock</a>
          </li>
          <li>
            <a href="#markAsSwapped">markAsSwapped</a>
          </li>
          <li>
            <a href="#processUpdate">processUpdate</a>
          </li>
          <li>
            <a href="#setValue">setValue</a>
          </li>
          <li>
            <a href="#startTrace">startTrace</a>
          </li>
          <li>
            <a href="#touch">touch</a>
          </li>
          <li>
            <a href="#unloadValue">unloadValue</a>
          </li>
          <li>
            <a href="#unlock">unlock</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Memory\Container\</span>Movable</h2>
        <div class="file-notice">
          <p>Memory value container</p>
          <p>
            <pre>Movable (may be swapped with specified backend and unloaded).</pre>
          </p>
        </div>
        <ul class="fileinfos"/>
        <h3>Constants</h3>
        <ul class="varlist">
          <li><a name="LOADED"/>LOADED = 1<em> </em><p><li>Value states</li></p><hr/></li>
          <li><a name="SWAPPED"/>SWAPPED = 2<hr/></li>
          <li><a name="LOCKED"/>LOCKED = 4<hr/></li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="id"/>
            <h4><span class="label protected">protected</span>integer 
                
                $id</h4>
            <ul class="varlist">
              <li>Internal object Id</li>
            </ul>
          </li>
          <li>
            <a name="memManager"/>
            <h4><span class="label private">private</span>object 
                
                $memManager</h4>
            <ul class="varlist">
              <li>Memory manager reference</li>
            </ul>
          </li>
          <li>
            <a name="value"/>
            <h4><span class="label private">private</span>object 
                
                $value</h4>
            <ul class="varlist">
              <li>Value object</li>
            </ul>
          </li>
          <li>
            <a name="state"/>
            <h4><span class="label private">private</span>integer 
                
                $state</h4>
            <ul class="varlist">
              <li>Value state (LOADED/SWAPPED/LOCKED)</li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><span title="Zend\Memory\Container\Memory\MemoryManager">MemoryManager</span></span><strong> $memoryManager</strong>, <span class="param-type">integer</span><strong> $id</strong>, <span class="param-type">string</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Object constructor</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$memoryManager</code> - </li>
                <li><code>$id</code> - </li>
                <li><code>$value</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="__get"/>
            <h4><span class="label public">public</span>__get<span style="font-size:90%;">( <span class="param-type">string</span><strong> $property</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get handler<pre>Loads object if necessary and moves it to the top of loaded objects list.
Swaps objects from the bottom of loaded objects list, if necessary.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$property</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="__set"/>
            <h4><span class="label public">public</span>__set<span style="font-size:90%;">( <span class="param-type">string</span><strong> $property</strong>, <span class="param-type">string</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set handler</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$property</code> - </li>
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="destroy"/>
            <h4><span class="label public">public</span>destroy<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Destroy memory container and remove it from memory manager list</li>
            </p>
          </li>
          <li>
            <a name="getId"/>
            <h4><span class="label public">public</span>getId<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get object id</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRef"/>
            <h4><span class="label public">public</span>getRef<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get string value reference<pre>_Must_ be used for value access before PHP v 5.2
or _may_ be used for performance considerations</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isLocked"/>
            <h4><span class="label public">public</span>isLocked<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Return true if object is locked</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isSwapped"/>
            <h4><span class="label public">public</span>isSwapped<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check if object is marked as swapped</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="lock"/>
            <h4><span class="label public">public</span>lock<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Lock object in memory.</li>
            </p>
          </li>
          <li>
            <a name="markAsSwapped"/>
            <h4><span class="label public">public</span>markAsSwapped<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Mark, that object is swapped</li>
            </p>
          </li>
          <li>
            <a name="processUpdate"/>
            <h4><span class="label public">public</span>processUpdate<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Process container value update.<pre>Must be called only by value object</pre></li>
            </p>
          </li>
          <li>
            <a name="setValue"/>
            <h4><span class="label public">public</span>setValue<span style="font-size:90%;">( <span class="param-type"/><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set value (used by memory manager when value is loaded)</li>
            </p>
          </li>
          <li>
            <a name="startTrace"/>
            <h4><span class="label public">public</span>startTrace<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Start modifications trace</li>
            </p>
          </li>
          <li>
            <a name="touch"/>
            <h4><span class="label public">public</span>touch<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Signal, that value is updated by external code.<pre>Should be used together with getRef()</pre></li>
            </p>
          </li>
          <li>
            <a name="unloadValue"/>
            <h4><span class="label public">public</span>unloadValue<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Clear value (used by memory manager when value is swapped)</li>
            </p>
          </li>
          <li>
            <a name="unlock"/>
            <h4><span class="label public">public</span>unlock<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Unlock object</li>
            </p>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
