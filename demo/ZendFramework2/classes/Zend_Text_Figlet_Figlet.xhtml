<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Text\Figlet\Figlet - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Constants</h3>
        <ul>
          <li>
            <a href="#SM_EQUAL">SM_EQUAL</a>
          </li>
          <li>
            <a href="#SM_LOWLINE">SM_LOWLINE</a>
          </li>
          <li>
            <a href="#SM_HIERARCHY">SM_HIERARCHY</a>
          </li>
          <li>
            <a href="#SM_PAIR">SM_PAIR</a>
          </li>
          <li>
            <a href="#SM_BIGX">SM_BIGX</a>
          </li>
          <li>
            <a href="#SM_HARDBLANK">SM_HARDBLANK</a>
          </li>
          <li>
            <a href="#SM_KERN">SM_KERN</a>
          </li>
          <li>
            <a href="#SM_SMUSH">SM_SMUSH</a>
          </li>
          <li>
            <a href="#SMO_NO">SMO_NO</a>
          </li>
          <li>
            <a href="#SMO_YES">SMO_YES</a>
          </li>
          <li>
            <a href="#SMO_FORCE">SMO_FORCE</a>
          </li>
          <li>
            <a href="#JUSTIFICATION_LEFT">JUSTIFICATION_LEFT</a>
          </li>
          <li>
            <a href="#JUSTIFICATION_CENTER">JUSTIFICATION_CENTER</a>
          </li>
          <li>
            <a href="#JUSTIFICATION_RIGHT">JUSTIFICATION_RIGHT</a>
          </li>
          <li>
            <a href="#DIRECTION_LEFT_TO_RIGHT">DIRECTION_LEFT_TO_RIGHT</a>
          </li>
          <li>
            <a href="#DIRECTION_RIGHT_TO_LEFT">DIRECTION_RIGHT_TO_LEFT</a>
          </li>
          <li>
            <a href="#FONTFILE_MAGIC_NUMBER">FONTFILE_MAGIC_NUMBER</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#charList">$charList</a>
          </li>
          <li>
            <a href="#fontLoaded">$fontLoaded</a>
          </li>
          <li>
            <a href="#germanChars">$germanChars</a>
          </li>
          <li>
            <a href="#outputWidth">$outputWidth</a>
          </li>
          <li>
            <a href="#hardBlank">$hardBlank</a>
          </li>
          <li>
            <a href="#charHeight">$charHeight</a>
          </li>
          <li>
            <a href="#maxLength">$maxLength</a>
          </li>
          <li>
            <a href="#smushMode">$smushMode</a>
          </li>
          <li>
            <a href="#fontSmush">$fontSmush</a>
          </li>
          <li>
            <a href="#userSmush">$userSmush</a>
          </li>
          <li>
            <a href="#handleParagraphs">$handleParagraphs</a>
          </li>
          <li>
            <a href="#justification">$justification</a>
          </li>
          <li>
            <a href="#rightToLeft">$rightToLeft</a>
          </li>
          <li>
            <a href="#smushOverride">$smushOverride</a>
          </li>
          <li>
            <a href="#fontOptions">$fontOptions</a>
          </li>
          <li>
            <a href="#previousCharWidth">$previousCharWidth</a>
          </li>
          <li>
            <a href="#currentCharWidth">$currentCharWidth</a>
          </li>
          <li>
            <a href="#outlineLength">$outlineLength</a>
          </li>
          <li>
            <a href="#outlineLengthLimit">$outlineLengthLimit</a>
          </li>
          <li>
            <a href="#inCharLine">$inCharLine</a>
          </li>
          <li>
            <a href="#inCharLineLength">$inCharLineLength</a>
          </li>
          <li>
            <a href="#inCharLineLengthLimit">$inCharLineLengthLimit</a>
          </li>
          <li>
            <a href="#currentChar">$currentChar</a>
          </li>
          <li>
            <a href="#outputLine">$outputLine</a>
          </li>
          <li>
            <a href="#output">$output</a>
          </li>
          <li>
            <a href="#skipOptions">$skipOptions</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#_addChar">_addChar</a>
          </li>
          <li>
            <a href="#_appendLine">_appendLine</a>
          </li>
          <li>
            <a href="#_clearLine">_clearLine</a>
          </li>
          <li>
            <a href="#_getLetter">_getLetter</a>
          </li>
          <li>
            <a href="#_loadChar">_loadChar</a>
          </li>
          <li>
            <a href="#_loadFont">_loadFont</a>
          </li>
          <li>
            <a href="#_putString">_putString</a>
          </li>
          <li>
            <a href="#_readMagic">_readMagic</a>
          </li>
          <li>
            <a href="#_setUsedSmush">_setUsedSmush</a>
          </li>
          <li>
            <a href="#_skipToEol">_skipToEol</a>
          </li>
          <li>
            <a href="#_smushAmount">_smushAmount</a>
          </li>
          <li>
            <a href="#_smushem">_smushem</a>
          </li>
          <li>
            <a href="#_splitLine">_splitLine</a>
          </li>
          <li>
            <a href="#_uniOrd">_uniOrd</a>
          </li>
          <li>
            <a href="#render">render</a>
          </li>
          <li>
            <a href="#setFont">setFont</a>
          </li>
          <li>
            <a href="#setHandleParagraphs">setHandleParagraphs</a>
          </li>
          <li>
            <a href="#setJustification">setJustification</a>
          </li>
          <li>
            <a href="#setOptions">setOptions</a>
          </li>
          <li>
            <a href="#setOutputWidth">setOutputWidth</a>
          </li>
          <li>
            <a href="#setRightToLeft">setRightToLeft</a>
          </li>
          <li>
            <a href="#setSmushMode">setSmushMode</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Text\Figlet\</span>Figlet</h2>
        <div class="file-notice">
          <p>Zend\Text\Figlet is a PHP implementation of FIGlet</p>
        </div>
        <ul class="fileinfos"/>
        <h3>Constants</h3>
        <ul class="varlist">
          <li><a name="SM_EQUAL"/>SM_EQUAL = 0x01<em> </em><p><li>Smush2 layout modes</li></p><hr/></li>
          <li><a name="SM_LOWLINE"/>SM_LOWLINE = 0x02<hr/></li>
          <li><a name="SM_HIERARCHY"/>SM_HIERARCHY = 0x04<hr/></li>
          <li><a name="SM_PAIR"/>SM_PAIR = 0x08<hr/></li>
          <li><a name="SM_BIGX"/>SM_BIGX = 0x10<hr/></li>
          <li><a name="SM_HARDBLANK"/>SM_HARDBLANK = 0x20<hr/></li>
          <li><a name="SM_KERN"/>SM_KERN = 0x40<hr/></li>
          <li><a name="SM_SMUSH"/>SM_SMUSH = 0x80<hr/></li>
          <li><a name="SMO_NO"/>SMO_NO = 0<em> </em><p><li>Smush mode override modes</li></p><hr/></li>
          <li><a name="SMO_YES"/>SMO_YES = 1<hr/></li>
          <li><a name="SMO_FORCE"/>SMO_FORCE = 2<hr/></li>
          <li><a name="JUSTIFICATION_LEFT"/>JUSTIFICATION_LEFT = 0<em> </em><p><li>Justifications</li></p><hr/></li>
          <li><a name="JUSTIFICATION_CENTER"/>JUSTIFICATION_CENTER = 1<hr/></li>
          <li><a name="JUSTIFICATION_RIGHT"/>JUSTIFICATION_RIGHT = 2<hr/></li>
          <li><a name="DIRECTION_LEFT_TO_RIGHT"/>DIRECTION_LEFT_TO_RIGHT = 0<em> </em><p><li>Write directions</li></p><hr/></li>
          <li><a name="DIRECTION_RIGHT_TO_LEFT"/>DIRECTION_RIGHT_TO_LEFT = 1<hr/></li>
          <li><a name="FONTFILE_MAGIC_NUMBER"/>FONTFILE_MAGIC_NUMBER = 'flf2'<em> </em><p><li>Magic fontfile number</li></p><hr/></li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="charList"/>
            <h4><span class="label protected">protected</span>array 
                
                $charList</h4>
            <ul class="varlist">
              <li>Array containing all characters of the current font</li>
            </ul>
          </li>
          <li>
            <a name="fontLoaded"/>
            <h4><span class="label protected">protected</span>boolean 
                
                $fontLoaded</h4>
            <ul class="varlist">
              <li>Indicates if a font was loaded yet</li>
            </ul>
          </li>
          <li>
            <a name="germanChars"/>
            <h4><span class="label protected">protected</span>array 
                
                $germanChars</h4>
            <ul class="varlist">
              <li>Latin-1 codes for German letters, respectively:<pre>LATIN CAPITAL LETTER A WITH DIAERESIS = A-umlaut
LATIN CAPITAL LETTER O WITH DIAERESIS = O-umlaut
LATIN CAPITAL LETTER U WITH DIAERESIS = U-umlaut
LATIN SMALL LETTER A WITH DIAERESIS = a-umlaut
LATIN SMALL LETTER O WITH DIAERESIS = o-umlaut
LATIN SMALL LETTER U WITH DIAERESIS = u-umlaut
LATIN SMALL LETTER SHARP S = ess-zed</pre></li>
            </ul>
          </li>
          <li>
            <a name="outputWidth"/>
            <h4><span class="label protected">protected</span>integer 
                
                $outputWidth</h4>
            <ul class="varlist">
              <li>Output width, defaults to 80.</li>
            </ul>
          </li>
          <li>
            <a name="hardBlank"/>
            <h4><span class="label protected">protected</span>string 
                
                $hardBlank</h4>
            <ul class="varlist">
              <li>Hard blank character</li>
            </ul>
          </li>
          <li>
            <a name="charHeight"/>
            <h4><span class="label protected">protected</span>integer 
                
                $charHeight</h4>
            <ul class="varlist">
              <li>Height of the characters</li>
            </ul>
          </li>
          <li>
            <a name="maxLength"/>
            <h4><span class="label protected">protected</span>integer 
                
                $maxLength</h4>
            <ul class="varlist">
              <li>Max length of any character</li>
            </ul>
          </li>
          <li>
            <a name="smushMode"/>
            <h4><span class="label protected">protected</span>integer 
                
                $smushMode</h4>
            <ul class="varlist">
              <li>Smush mode</li>
            </ul>
          </li>
          <li>
            <a name="fontSmush"/>
            <h4><span class="label protected">protected</span>integer 
                
                $fontSmush</h4>
            <ul class="varlist">
              <li>Smush defined by the font</li>
            </ul>
          </li>
          <li>
            <a name="userSmush"/>
            <h4><span class="label protected">protected</span>integer 
                
                $userSmush</h4>
            <ul class="varlist">
              <li>Smush defined by the user</li>
            </ul>
          </li>
          <li>
            <a name="handleParagraphs"/>
            <h4><span class="label protected">protected</span>boolean 
                
                $handleParagraphs</h4>
            <ul class="varlist">
              <li>Whether to handle paragraphs || not</li>
            </ul>
          </li>
          <li>
            <a name="justification"/>
            <h4><span class="label protected">protected</span>integer 
                
                $justification</h4>
            <ul class="varlist">
              <li>Justification for the text, according to $outputWidth<pre>For using font default, this parameter should be null, else one of
the values of Zend\Text\Figlet::JUSTIFICATION_*</pre></li>
            </ul>
          </li>
          <li>
            <a name="rightToLeft"/>
            <h4><span class="label protected">protected</span>integer 
                
                $rightToLeft</h4>
            <ul class="varlist">
              <li>Direction of text-writing, namely right to left<pre>For using font default, this parameter should be null, else one of
the values of Zend\Text\Figlet::DIRECTION_*</pre></li>
            </ul>
          </li>
          <li>
            <a name="smushOverride"/>
            <h4><span class="label protected">protected</span>integer 
                
                $smushOverride</h4>
            <ul class="varlist">
              <li>Override font file smush layout</li>
            </ul>
          </li>
          <li>
            <a name="fontOptions"/>
            <h4><span class="label protected">protected</span>array 
                
                $fontOptions</h4>
            <ul class="varlist">
              <li>Options of the current font</li>
            </ul>
          </li>
          <li>
            <a name="previousCharWidth"/>
            <h4><span class="label protected">protected</span>integer 
                
                $previousCharWidth</h4>
            <ul class="varlist">
              <li>Previous character width</li>
            </ul>
          </li>
          <li>
            <a name="currentCharWidth"/>
            <h4><span class="label protected">protected</span>integer 
                
                $currentCharWidth</h4>
            <ul class="varlist">
              <li>Current character width</li>
            </ul>
          </li>
          <li>
            <a name="outlineLength"/>
            <h4><span class="label protected">protected</span>integer 
                
                $outlineLength</h4>
            <ul class="varlist">
              <li>Current outline length</li>
            </ul>
          </li>
          <li>
            <a name="outlineLengthLimit"/>
            <h4><span class="label protected">protected</span>integer 
                
                $outlineLengthLimit</h4>
            <ul class="varlist">
              <li>Maximum outline length</li>
            </ul>
          </li>
          <li>
            <a name="inCharLine"/>
            <h4><span class="label protected">protected</span>string 
                
                $inCharLine</h4>
            <ul class="varlist">
              <li>In character line</li>
            </ul>
          </li>
          <li>
            <a name="inCharLineLength"/>
            <h4><span class="label protected">protected</span>integer 
                
                $inCharLineLength</h4>
            <ul class="varlist">
              <li>In character line length</li>
            </ul>
          </li>
          <li>
            <a name="inCharLineLengthLimit"/>
            <h4><span class="label protected">protected</span>integer 
                
                $inCharLineLengthLimit</h4>
            <ul class="varlist">
              <li>Maximum in character line length</li>
            </ul>
          </li>
          <li>
            <a name="currentChar"/>
            <h4><span class="label protected">protected</span>array 
                
                $currentChar</h4>
            <ul class="varlist">
              <li>Current char</li>
            </ul>
          </li>
          <li>
            <a name="outputLine"/>
            <h4><span class="label protected">protected</span>array 
                
                $outputLine</h4>
            <ul class="varlist">
              <li>Current output line</li>
            </ul>
          </li>
          <li>
            <a name="output"/>
            <h4><span class="label protected">protected</span>string 
                
                $output</h4>
            <ul class="varlist">
              <li>Current output</li>
            </ul>
          </li>
          <li>
            <a name="skipOptions"/>
            <h4><span class="label protected">protected</span>array 
                
                $skipOptions</h4>
            <ul class="varlist">
              <li>Option keys to skip when calling setOptions()</li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><span title="array|Traversable">array|Traversable</span></span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiate the FIGlet with a specific font. If no font is given, the standard font is used. You can also supply multiple options via the $options variable, which can either be an array or an instance of Zend_Config.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$options</code> - Options for the output</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="render"/>
            <h4><span class="label public">public</span>render<span style="font-size:90%;">( <span class="param-type">string</span><strong> $text</strong>, <span class="param-type">string</span><strong> $encoding</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Render a FIGlet text</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$text</code> - Text to convert to a figlet text</li>
                <li><code>$encoding</code> - Encoding of the input string</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException When $text is not a string</code>
                </li>
                <li>
                  <code>Exception\UnexpectedValueException When $text it not properly encoded</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFont"/>
            <h4><span class="label public">public</span>setFont<span style="font-size:90%;">( <span class="param-type">string</span><strong> $font</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set a font to use</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$font</code> - Path to the font</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setHandleParagraphs"/>
            <h4><span class="label public">public</span>setHandleParagraphs<span style="font-size:90%;">( <span class="param-type">boolean</span><strong> $handleParagraphs</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set handling of paragraphs</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$handleParagraphs</code> - Whether to handle paragraphs or not</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setJustification"/>
            <h4><span class="label public">public</span>setJustification<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $justification</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the justification. 0 stands for left aligned, 1 for centered and 2 for right aligned.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$justification</code> - Justification of the output text</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setOptions"/>
            <h4><span class="label public">public</span>setOptions<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set options from array</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$options</code> - Configuration for Figlet</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setOutputWidth"/>
            <h4><span class="label public">public</span>setOutputWidth<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $outputWidth</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the output width</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$outputWidth</code> - Output with which should be used for word</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setRightToLeft"/>
            <h4><span class="label public">public</span>setRightToLeft<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $rightToLeft</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set right to left mode. For writing from left to right, use Zend\Text\Figlet::DIRECTION_LEFT_TO_RIGHT. For writing from right to left, use Zend\Text\Figlet::DIRECTION_RIGHT_TO_LEFT.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$rightToLeft</code> - Right-to-left mode</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setSmushMode"/>
            <h4><span class="label public">public</span>setSmushMode<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $smushMode</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the smush mode.<pre>Use one of the constants of Zend\Text\Figlet::SM_*, you may combine them.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$smushMode</code> - Smush mode to use for generating text</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_addChar"/>
            <h4><span class="label protected">protected</span>_addChar<span style="font-size:90%;">( <span class="param-type">string</span><strong> $char</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Attempts to add the given character onto the end of the current line.<pre>Returns true if this can be done, false otherwise.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$char</code> - Character which to add to the output</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_appendLine"/>
            <h4><span class="label protected">protected</span>_appendLine<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Appends the current line to the output</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_clearLine"/>
            <h4><span class="label protected">protected</span>_clearLine<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Clears the current line</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getLetter"/>
            <h4><span class="label protected">protected</span>_getLetter<span style="font-size:90%;">( <span class="param-type">string</span><strong> $char</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets the requested character and sets current and previous char width.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$char</code> - The character from which to get the letter of</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_loadChar"/>
            <h4><span class="label protected">protected</span>_loadChar<span style="font-size:90%;">( <span class="param-type">resource</span><strong> $fp</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Load a single character from the font file</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$fp</code> - File pointer to the font file</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_loadFont"/>
            <h4><span class="label protected">protected</span>_loadFont<span style="font-size:90%;">( <span class="param-type">string</span><strong> $fontFile</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Load the specified font</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$fontFile</code> - Font file to load</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\RuntimeException When font file was not found</code>
                </li>
                <li>
                  <code>Exception\RuntimeException When GZIP library is required but not found</code>
                </li>
                <li>
                  <code>Exception\RuntimeException When font file is not readable</code>
                </li>
                <li>
                  <code>Exception\UnexpectedValueException When font file is not a FIGlet 2 font file</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_putString"/>
            <h4><span class="label protected">protected</span>_putString<span style="font-size:90%;">( <span class="param-type">string</span><strong> $string</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Puts the given string, substituting blanks for hardblanks. If outputWidth is 1, puts the entire string; otherwise puts at most outputWidth - 1 characters. Puts a newline at the end of the string. The string is left- justified, centered or right-justified (taking outputWidth as the screen width) if justification is 0, 1 or 2 respectively.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$string</code> - The string to add to the output</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_readMagic"/>
            <h4><span class="label protected">protected</span>_readMagic<span style="font-size:90%;">( <span class="param-type">resource</span><strong> $fp</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Reads a four-character magic string from a stream</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$fp</code> - File pointer to the font file</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_setUsedSmush"/>
            <h4><span class="label protected">protected</span>_setUsedSmush<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the used smush mode, according to smush override, user smush and font smush.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_skipToEol"/>
            <h4><span class="label protected">protected</span>_skipToEol<span style="font-size:90%;">( <span class="param-type">resource</span><strong> $fp</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Skip a stream to the end of line</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$fp</code> - File pointer to the font file</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_smushAmount"/>
            <h4><span class="label protected">protected</span>_smushAmount<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the maximum amount that the current character can be smushed into the current line.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_smushem"/>
            <h4><span class="label protected">protected</span>_smushem<span style="font-size:90%;">( <span class="param-type">string</span><strong> $leftChar</strong>, <span class="param-type">string</span><strong> $rightChar</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Given two characters, attempts to smush them into one, according to the current smushmode. Returns smushed character or false if no smushing can be done.<pre>Smushmode values are sum of following (all values smush blanks):

 1: Smush equal chars (not hardblanks)
 2: Smush '_' with any char in hierarchy below
 4: hierarchy: "|", "/\", "[]", "{}", "()", "&lt;&gt;"
    Each class in hier. can be replaced by later class.
 8: [ + ] -&gt; |, { + } -&gt; |, ( + ) -&gt; |
16: / + \ -&gt; X, &gt; + &lt; -&gt; X (only in that order)
32: hardblank + hardblank -&gt; hardblank</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$leftChar</code> - Left character to smush</li>
                <li><code>$rightChar</code> - Right character to smush</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_splitLine"/>
            <h4><span class="label protected">protected</span>_splitLine<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Splits inCharLine at the last word break (bunch of consecutive blanks).<pre>Makes a new line out of the first part and appends it using appendLine().
Makes a new line out of the second part and returns.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_uniOrd"/>
            <h4><span class="label protected">protected</span>_uniOrd<span style="font-size:90%;">( <span class="param-type">string</span><strong> $c</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Unicode compatible ord() method</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$c</code> - The char to get the value from</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
