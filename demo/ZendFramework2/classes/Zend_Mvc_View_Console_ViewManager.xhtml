<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Mvc\View\Console\ViewManager - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#attach">attach</a>
          </li>
          <li>
            <a href="#detach">detach</a>
          </li>
          <li>
            <a href="#getExceptionStrategy">getExceptionStrategy</a>
          </li>
          <li>
            <a href="#getExceptionStrategy">getExceptionStrategy</a>
          </li>
          <li>
            <a href="#getHelperManager">getHelperManager</a>
          </li>
          <li>
            <a href="#getLayoutTemplate">getLayoutTemplate</a>
          </li>
          <li>
            <a href="#getMvcRenderingStrategy">getMvcRenderingStrategy</a>
          </li>
          <li>
            <a href="#getMvcRenderingStrategy">getMvcRenderingStrategy</a>
          </li>
          <li>
            <a href="#getRenderer">getRenderer</a>
          </li>
          <li>
            <a href="#getRendererStrategy">getRendererStrategy</a>
          </li>
          <li>
            <a href="#getResolver">getResolver</a>
          </li>
          <li>
            <a href="#getRouteNotFoundStrategy">getRouteNotFoundStrategy</a>
          </li>
          <li>
            <a href="#getRouteNotFoundStrategy">getRouteNotFoundStrategy</a>
          </li>
          <li>
            <a href="#getView">getView</a>
          </li>
          <li>
            <a href="#getViewModel">getViewModel</a>
          </li>
          <li>
            <a href="#onBootstrap">onBootstrap</a>
          </li>
          <li>
            <a href="#onBootstrap">onBootstrap</a>
          </li>
          <li>
            <a href="#registerMvcRenderingStrategies">registerMvcRenderingStrategies</a>
          </li>
          <li>
            <a href="#registerViewStrategies">registerViewStrategies</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Mvc\View\Console\</span>ViewManager</h2>
        <div class="file-notice">
          <p>Prepares the view layer for console applications</p>
        </div>
        <ul class="fileinfos"/>
        <h3>Members</h3>
        <ul class="varlist"/>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="attach"/>
            <h4><span class="label public">public</span>attach<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_EventManager_EventManagerInterface.xhtml">Zend\EventManager\EventManagerInterface</a></span><strong> $events</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Attach the aggregate to the specified event manager</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$events</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="detach"/>
            <h4><span class="label public">public</span>detach<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_EventManager_EventManagerInterface.xhtml">Zend\EventManager\EventManagerInterface</a></span><strong> $events</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Detach aggregate listeners from the specified event manager</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$events</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getExceptionStrategy"/>
            <h4><span class="label public">public</span>getExceptionStrategy<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiates and configures the exception strategy<pre>Overriding to ensure we pick up the exception strategy for console, as
well as to ensure that the appropriate aliases are set.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getExceptionStrategy"/>
            <h4><span class="label public">public</span>getExceptionStrategy<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiates and configures the exception strategy</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getHelperManager"/>
            <h4><span class="label public">public</span>getHelperManager<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiates and configures the renderer's helper manager</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getLayoutTemplate"/>
            <h4><span class="label public">public</span>getLayoutTemplate<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieves the layout template name from the configuration</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMvcRenderingStrategy"/>
            <h4><span class="label public">public</span>getMvcRenderingStrategy<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiates and configures the default MVC rendering strategy<pre>Overriding to ensure we pick up the MVC rendering strategy for console,
as well as to ensure that the appropriate aliases are set.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMvcRenderingStrategy"/>
            <h4><span class="label public">public</span>getMvcRenderingStrategy<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiates and configures the default MVC rendering strategy</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRenderer"/>
            <h4><span class="label public">public</span>getRenderer<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiates and configures the renderer</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRendererStrategy"/>
            <h4><span class="label public">public</span>getRendererStrategy<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiates and configures the renderer strategy for the view</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getResolver"/>
            <h4><span class="label public">public</span>getResolver<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiates and configures the renderer's resolver</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRouteNotFoundStrategy"/>
            <h4><span class="label public">public</span>getRouteNotFoundStrategy<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiates and configures the "route not found", or 404, strategy<pre>Overriding to ensure we pick up the route not found strategy for console,
as well as to ensure that the appropriate aliases are set.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRouteNotFoundStrategy"/>
            <h4><span class="label public">public</span>getRouteNotFoundStrategy<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiates and configures the "route not found", or 404, strategy</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getView"/>
            <h4><span class="label public">public</span>getView<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Instantiates and configures the view</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getViewModel"/>
            <h4><span class="label public">public</span>getViewModel<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Configures the MvcEvent view model to ensure it has the template injected</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="onBootstrap"/>
            <h4><span class="label public">public</span>onBootstrap<span style="font-size:90%;">( <span class="param-type"/><strong> $event</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Prepares the view layer<pre>Overriding, as several operations are omitted in the console view
algorithms, as well as to ensure we pick up the Console variants
of several listeners and strategies.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$event</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="onBootstrap"/>
            <h4><span class="label public">public</span>onBootstrap<span style="font-size:90%;">( <span class="param-type"/><strong> $event</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Prepares the view layer</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$event</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="registerMvcRenderingStrategies"/>
            <h4><span class="label protected">protected</span>registerMvcRenderingStrategies<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_EventManager_EventManagerInterface.xhtml">Zend\EventManager\EventManagerInterface</a></span><strong> $events</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Register additional mvc rendering strategies<pre>If there is a "mvc_strategies" key of the view manager configuration, loop
through it. Pull each as a service from the service manager, and, if it
is a ListenerAggregate, attach it to the view, at priority 100. This
latter allows each to trigger before the default mvc rendering strategy,
and for them to trigger in the order they are registered.</pre></li>
            </p>
          </li>
          <li>
            <a name="registerViewStrategies"/>
            <h4><span class="label protected">protected</span>registerViewStrategies<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Register additional view strategies<pre>If there is a "strategies" key of the view manager configuration, loop
through it. Pull each as a service from the service manager, and, if it
is a ListenerAggregate, attach it to the view, at priority 100. This
latter allows each to trigger before the default strategy, and for them
to trigger in the order they are registered.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
