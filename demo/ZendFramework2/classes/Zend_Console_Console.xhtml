<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Console\Console - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#instance">$instance</a>
          </li>
          <li>
            <a href="#isConsole">$isConsole</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__callStatic">__callStatic</a>
          </li>
          <li>
            <a href="#detectBestAdapter">detectBestAdapter</a>
          </li>
          <li>
            <a href="#getInstance">getInstance</a>
          </li>
          <li>
            <a href="#isAnsicon">isAnsicon</a>
          </li>
          <li>
            <a href="#isConsole">isConsole</a>
          </li>
          <li>
            <a href="#isWindows">isWindows</a>
          </li>
          <li>
            <a href="#overrideIsConsole">overrideIsConsole</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Console\</span>Console</h2>
        <div class="file-notice">
          <p>An static, utility class for interacting with Console environment.</p>
          <p>
            <pre>Declared abstract to prevent from instantiating.</pre>
          </p>
        </div>
        <ul class="fileinfos"/>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="instance"/>
            <h4><span class="label protected">protected</span>object 
                
                $instance</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="isConsole"/>
            <h4><span class="label protected">protected</span>object 
                
                $isConsole</h4>
            <ul class="varlist">
              <li>Allow overriding whether or not we're in a console env. If set, and boolean, returns that value from isConsole().</li>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="__callStatic"/>
            <h4><span class="label true">true</span><span class="label public">public</span>__callStatic<span style="font-size:90%;">( <span class="param-type"/><strong> $funcName</strong>, <span class="param-type"/><strong> $arguments</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Pass-thru static call to current AdapterInterface instance.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$funcName</code> - </li>
                <li><code>$arguments</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="detectBestAdapter"/>
            <h4><span class="label true">true</span><span class="label public">public</span>detectBestAdapter<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Try to detect best matching adapter</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getInstance"/>
            <h4><span class="label true">true</span><span class="label public">public</span>getInstance<span style="font-size:90%;">( <span class="param-type"><span title="null|string">null|string</span></span><strong> $forceAdapter</strong>, <span class="param-type"><span title="null|string">null|string</span></span><strong> $forceCharset</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create and return Adapter\AdapterInterface instance.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$forceAdapter</code> - Optional adapter class name. Ccan be absolute namespace or class name</li>
                <li><code>$forceCharset</code> - optional charset name can be absolute namespace or class name relative to</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
                <li>
                  <code>Exception\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isAnsicon"/>
            <h4><span class="label true">true</span><span class="label public">public</span>isAnsicon<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check if running under MS Windows Ansicon</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isConsole"/>
            <h4><span class="label true">true</span><span class="label public">public</span>isConsole<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check if running in a console environment (CLI)<pre>By default, returns value of PHP_SAPI global constant. If $isConsole is
set, and a boolean value, that value will be returned.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isWindows"/>
            <h4><span class="label true">true</span><span class="label public">public</span>isWindows<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check if currently running under MS Windows</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="overrideIsConsole"/>
            <h4><span class="label true">true</span><span class="label public">public</span>overrideIsConsole<span style="font-size:90%;">( <span class="param-type"><span title="null|bool">null|bool</span></span><strong> $flag</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Override the "is console environment" flag</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$flag</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
