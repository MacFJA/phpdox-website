<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Authentication\Adapter\DbTable - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#zendDb">$zendDb</a>
          </li>
          <li>
            <a href="#dbSelect">$dbSelect</a>
          </li>
          <li>
            <a href="#tableName">$tableName</a>
          </li>
          <li>
            <a href="#identityColumn">$identityColumn</a>
          </li>
          <li>
            <a href="#credentialColumn">$credentialColumn</a>
          </li>
          <li>
            <a href="#identity">$identity</a>
          </li>
          <li>
            <a href="#credential">$credential</a>
          </li>
          <li>
            <a href="#credentialTreatment">$credentialTreatment</a>
          </li>
          <li>
            <a href="#authenticateResultInfo">$authenticateResultInfo</a>
          </li>
          <li>
            <a href="#resultRow">$resultRow</a>
          </li>
          <li>
            <a href="#ambiguityIdentity">$ambiguityIdentity</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#_authenticateCreateAuthResult">_authenticateCreateAuthResult</a>
          </li>
          <li>
            <a href="#_authenticateCreateSelect">_authenticateCreateSelect</a>
          </li>
          <li>
            <a href="#_authenticateQuerySelect">_authenticateQuerySelect</a>
          </li>
          <li>
            <a href="#_authenticateSetup">_authenticateSetup</a>
          </li>
          <li>
            <a href="#_authenticateValidateResult">_authenticateValidateResult</a>
          </li>
          <li>
            <a href="#_authenticateValidateResultSet">_authenticateValidateResultSet</a>
          </li>
          <li>
            <a href="#authenticate">authenticate</a>
          </li>
          <li>
            <a href="#getAmbiguityIdentity">getAmbiguityIdentity</a>
          </li>
          <li>
            <a href="#getDbSelect">getDbSelect</a>
          </li>
          <li>
            <a href="#getResultRowObject">getResultRowObject</a>
          </li>
          <li>
            <a href="#setAmbiguityIdentity">setAmbiguityIdentity</a>
          </li>
          <li>
            <a href="#setCredential">setCredential</a>
          </li>
          <li>
            <a href="#setCredentialColumn">setCredentialColumn</a>
          </li>
          <li>
            <a href="#setCredentialTreatment">setCredentialTreatment</a>
          </li>
          <li>
            <a href="#setIdentity">setIdentity</a>
          </li>
          <li>
            <a href="#setIdentityColumn">setIdentityColumn</a>
          </li>
          <li>
            <a href="#setTableName">setTableName</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Authentication\Adapter\</span>DbTable</h2>
        <div class="file-notice">
          <p/>
        </div>
        <ul class="fileinfos"/>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Zend_Authentication_Adapter_AdapterInterface.xhtml">Zend\Authentication\Adapter\AdapterInterface</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="zendDb"/>
            <h4><span class="label protected">protected</span>object 
                
                $zendDb</h4>
            <ul class="varlist">
              <li>Database Connection</li>
            </ul>
          </li>
          <li>
            <a name="dbSelect"/>
            <h4><span class="label protected">protected</span>object 
                
                $dbSelect</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="tableName"/>
            <h4><span class="label protected">protected</span>string 
                
                $tableName</h4>
            <ul class="varlist">
              <li>$tableName - the table name to check</li>
            </ul>
          </li>
          <li>
            <a name="identityColumn"/>
            <h4><span class="label protected">protected</span>string 
                
                $identityColumn</h4>
            <ul class="varlist">
              <li>$identityColumn - the column to use as the identity</li>
            </ul>
          </li>
          <li>
            <a name="credentialColumn"/>
            <h4><span class="label protected">protected</span>string 
                
                $credentialColumn</h4>
            <ul class="varlist">
              <li>$credentialColumns - columns to be used as the credentials</li>
            </ul>
          </li>
          <li>
            <a name="identity"/>
            <h4><span class="label protected">protected</span>string 
                
                $identity</h4>
            <ul class="varlist">
              <li>$identity - Identity value</li>
            </ul>
          </li>
          <li>
            <a name="credential"/>
            <h4><span class="label protected">protected</span>string 
                
                $credential</h4>
            <ul class="varlist">
              <li>$credential - Credential values</li>
            </ul>
          </li>
          <li>
            <a name="credentialTreatment"/>
            <h4><span class="label protected">protected</span>string 
                
                $credentialTreatment</h4>
            <ul class="varlist">
              <li>$credentialTreatment - Treatment applied to the credential, such as MD5() or PASSWORD()</li>
            </ul>
          </li>
          <li>
            <a name="authenticateResultInfo"/>
            <h4><span class="label protected">protected</span>array 
                
                $authenticateResultInfo</h4>
            <ul class="varlist">
              <li>$authenticateResultInfo</li>
            </ul>
          </li>
          <li>
            <a name="resultRow"/>
            <h4><span class="label protected">protected</span>array 
                
                $resultRow</h4>
            <ul class="varlist">
              <li>$resultRow - Results of database authentication query</li>
            </ul>
          </li>
          <li>
            <a name="ambiguityIdentity"/>
            <h4><span class="label protected">protected</span>boolean 
                
                $ambiguityIdentity</h4>
            <ul class="varlist">
              <li>$ambiguityIdentity - Flag to indicate same Identity can be used with different credentials. Default is FALSE and need to be set to true to allow ambiguity usage.</li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Db_Adapter_Adapter.xhtml">Zend\Db\Adapter\Adapter</a></span><strong> $zendDb</strong>, <span class="param-type">string</span><strong> $tableName</strong>, <span class="param-type">string</span><strong> $identityColumn</strong>, <span class="param-type">string</span><strong> $credentialColumn</strong>, <span class="param-type">string</span><strong> $credentialTreatment</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>__construct() - Sets configuration options</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$zendDb</code> - </li>
                <li><code>$tableName</code> - Optional</li>
                <li><code>$identityColumn</code> - Optional</li>
                <li><code>$credentialColumn</code> - Optional</li>
                <li><code>$credentialTreatment</code> - Optional</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="authenticate"/>
            <h4><span class="label public">public</span>authenticate<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>This method is called to attempt an authentication. Previous to this call, this adapter would have already been configured with all necessary information to successfully connect to a database table and attempt to find a record matching the provided identity.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\RuntimeException if answering the authentication query is impossible</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getAmbiguityIdentity"/>
            <h4><span class="label public">public</span>getAmbiguityIdentity<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>getAmbiguityIdentity() - returns TRUE for usage of multiple identical identities with different credentials, FALSE if not used.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDbSelect"/>
            <h4><span class="label public">public</span>getDbSelect<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>getDbSelect() - Return the preauthentication Db Select object for userland select query modification</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getResultRowObject"/>
            <h4><span class="label public">public</span>getResultRowObject<span style="font-size:90%;">( <span class="param-type"><span title="string|array">string|array</span></span><strong> $returnColumns</strong>, <span class="param-type"><span title="string|array">string|array</span></span><strong> $omitColumns</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>getResultRowObject() - Returns the result row as a stdClass object</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$returnColumns</code> - </li>
                <li><code>$omitColumns</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAmbiguityIdentity"/>
            <h4><span class="label public">public</span>setAmbiguityIdentity<span style="font-size:90%;">( <span class="param-type"><span title="int|bool">int|bool</span></span><strong> $flag</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>setAmbiguityIdentity() - sets a flag for usage of identical identities with unique credentials. It accepts integers (0, 1) or boolean (true, false) parameters. Default is false.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$flag</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setCredential"/>
            <h4><span class="label public">public</span>setCredential<span style="font-size:90%;">( <span class="param-type">string</span><strong> $credential</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>setCredential() - set the credential value to be used, optionally can specify a treatment to be used, should be supplied in parametrized form, such as 'MD5(?)' or 'PASSWORD(?)'</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$credential</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setCredentialColumn"/>
            <h4><span class="label public">public</span>setCredentialColumn<span style="font-size:90%;">( <span class="param-type">string</span><strong> $credentialColumn</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>setCredentialColumn() - set the column name to be used as the credential column</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$credentialColumn</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setCredentialTreatment"/>
            <h4><span class="label public">public</span>setCredentialTreatment<span style="font-size:90%;">( <span class="param-type">string</span><strong> $treatment</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>setCredentialTreatment() - allows the developer to pass a parametrized string that is used to transform or treat the input credential data.<pre>In many cases, passwords and other sensitive data are encrypted, hashed, encoded,
obscured, or otherwise treated through some function or algorithm. By specifying a
parametrized treatment string with this method, a developer may apply arbitrary SQL
upon input credential data.

Examples:

 'PASSWORD(?)'
 'MD5(?)'</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$treatment</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setIdentity"/>
            <h4><span class="label public">public</span>setIdentity<span style="font-size:90%;">( <span class="param-type">string</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>setIdentity() - set the value to be used as the identity</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setIdentityColumn"/>
            <h4><span class="label public">public</span>setIdentityColumn<span style="font-size:90%;">( <span class="param-type">string</span><strong> $identityColumn</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>setIdentityColumn() - set the column name to be used as the identity column</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$identityColumn</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTableName"/>
            <h4><span class="label public">public</span>setTableName<span style="font-size:90%;">( <span class="param-type">string</span><strong> $tableName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>setTableName() - set the table name to be used in the select query</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$tableName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_authenticateCreateAuthResult"/>
            <h4><span class="label protected">protected</span>_authenticateCreateAuthResult<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Creates a Zend\Authentication\Result object from the information that has been collected during the authenticate() attempt.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_authenticateCreateSelect"/>
            <h4><span class="label protected">protected</span>_authenticateCreateSelect<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>_authenticateCreateSelect() - This method creates a Zend\Db\Sql\Select object that is completely configured to be queried against the database.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_authenticateQuerySelect"/>
            <h4><span class="label protected">protected</span>_authenticateQuerySelect<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Db_Sql_Select.xhtml">Zend\Db\Sql\Select</a></span><strong> $dbSelect</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>_authenticateQuerySelect() - This method accepts a Zend\Db\Sql\Select object and performs a query against the database with that object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$dbSelect</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\RuntimeException when an invalid select object is encountered</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_authenticateSetup"/>
            <h4><span class="label protected">protected</span>_authenticateSetup<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>_authenticateSetup() - This method abstracts the steps involved with making sure that this adapter was indeed setup properly with all required pieces of information.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\RuntimeException in the event that setup was not done properly</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_authenticateValidateResult"/>
            <h4><span class="label protected">protected</span>_authenticateValidateResult<span style="font-size:90%;">( <span class="param-type">array</span><strong> $resultIdentity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>_authenticateValidateResult() - This method attempts to validate that the record in the resultset is indeed a record that matched the identity provided to this adapter.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$resultIdentity</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_authenticateValidateResultSet"/>
            <h4><span class="label protected">protected</span>_authenticateValidateResultSet<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $resultIdentities</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>_authenticateValidateResultSet() - This method attempts to make certain that only one record was returned in the resultset</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$resultIdentities</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
