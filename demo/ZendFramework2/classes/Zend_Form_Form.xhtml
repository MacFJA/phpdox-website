<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Form\Form - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#attributes">$attributes</a>
          </li>
          <li>
            <a href="#bindAs">$bindAs</a>
          </li>
          <li>
            <a href="#bindOnValidate">$bindOnValidate</a>
          </li>
          <li>
            <a href="#baseFieldset">$baseFieldset</a>
          </li>
          <li>
            <a href="#data">$data</a>
          </li>
          <li>
            <a href="#filter">$filter</a>
          </li>
          <li>
            <a href="#useInputFilterDefaults">$useInputFilterDefaults</a>
          </li>
          <li>
            <a href="#hasValidated">$hasValidated</a>
          </li>
          <li>
            <a href="#isValid">$isValid</a>
          </li>
          <li>
            <a href="#isPrepared">$isPrepared</a>
          </li>
          <li>
            <a href="#wrapElements">$wrapElements</a>
          </li>
          <li>
            <a href="#validationGroup">$validationGroup</a>
          </li>
          <li>
            <a href="#factory">$factory</a>
          </li>
          <li>
            <a href="#byName">$byName</a>
          </li>
          <li>
            <a href="#elements">$elements</a>
          </li>
          <li>
            <a href="#fieldsets">$fieldsets</a>
          </li>
          <li>
            <a href="#messages">$messages</a>
          </li>
          <li>
            <a href="#iterator">$iterator</a>
          </li>
          <li>
            <a href="#hydrator">$hydrator</a>
          </li>
          <li>
            <a href="#object">$object</a>
          </li>
          <li>
            <a href="#useAsBaseFieldset">$useAsBaseFieldset</a>
          </li>
          <li>
            <a href="#attributes">$attributes</a>
          </li>
          <li>
            <a href="#label">$label</a>
          </li>
          <li>
            <a href="#labelAttributes">$labelAttributes</a>
          </li>
          <li>
            <a href="#messages">$messages</a>
          </li>
          <li>
            <a href="#options">$options</a>
          </li>
          <li>
            <a href="#value">$value</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__clone">__clone</a>
          </li>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#add">add</a>
          </li>
          <li>
            <a href="#add">add</a>
          </li>
          <li>
            <a href="#allowObjectBinding">allowObjectBinding</a>
          </li>
          <li>
            <a href="#allowValueBinding">allowValueBinding</a>
          </li>
          <li>
            <a href="#attachInputFilterDefaults">attachInputFilterDefaults</a>
          </li>
          <li>
            <a href="#bind">bind</a>
          </li>
          <li>
            <a href="#bindOnValidate">bindOnValidate</a>
          </li>
          <li>
            <a href="#bindValues">bindValues</a>
          </li>
          <li>
            <a href="#bindValues">bindValues</a>
          </li>
          <li>
            <a href="#clearAttributes">clearAttributes</a>
          </li>
          <li>
            <a href="#count">count</a>
          </li>
          <li>
            <a href="#extract">extract</a>
          </li>
          <li>
            <a href="#extract">extract</a>
          </li>
          <li>
            <a href="#get">get</a>
          </li>
          <li>
            <a href="#getAttribute">getAttribute</a>
          </li>
          <li>
            <a href="#getAttributes">getAttributes</a>
          </li>
          <li>
            <a href="#getBaseFieldset">getBaseFieldset</a>
          </li>
          <li>
            <a href="#getData">getData</a>
          </li>
          <li>
            <a href="#getElements">getElements</a>
          </li>
          <li>
            <a href="#getFieldsets">getFieldsets</a>
          </li>
          <li>
            <a href="#getFormFactory">getFormFactory</a>
          </li>
          <li>
            <a href="#getHydrator">getHydrator</a>
          </li>
          <li>
            <a href="#getInputFilter">getInputFilter</a>
          </li>
          <li>
            <a href="#getIterator">getIterator</a>
          </li>
          <li>
            <a href="#getLabel">getLabel</a>
          </li>
          <li>
            <a href="#getLabelAttributes">getLabelAttributes</a>
          </li>
          <li>
            <a href="#getMessages">getMessages</a>
          </li>
          <li>
            <a href="#getMessages">getMessages</a>
          </li>
          <li>
            <a href="#getName">getName</a>
          </li>
          <li>
            <a href="#getObject">getObject</a>
          </li>
          <li>
            <a href="#getOption">getOption</a>
          </li>
          <li>
            <a href="#getOptions">getOptions</a>
          </li>
          <li>
            <a href="#getValue">getValue</a>
          </li>
          <li>
            <a href="#has">has</a>
          </li>
          <li>
            <a href="#hasAttribute">hasAttribute</a>
          </li>
          <li>
            <a href="#hasValidated">hasValidated</a>
          </li>
          <li>
            <a href="#isValid">isValid</a>
          </li>
          <li>
            <a href="#populateValues">populateValues</a>
          </li>
          <li>
            <a href="#prepare">prepare</a>
          </li>
          <li>
            <a href="#prepareBindData">prepareBindData</a>
          </li>
          <li>
            <a href="#prepareElement">prepareElement</a>
          </li>
          <li>
            <a href="#prepareValidationGroup">prepareValidationGroup</a>
          </li>
          <li>
            <a href="#remove">remove</a>
          </li>
          <li>
            <a href="#setAttribute">setAttribute</a>
          </li>
          <li>
            <a href="#setAttributes">setAttributes</a>
          </li>
          <li>
            <a href="#setBaseFieldset">setBaseFieldset</a>
          </li>
          <li>
            <a href="#setBindOnValidate">setBindOnValidate</a>
          </li>
          <li>
            <a href="#setData">setData</a>
          </li>
          <li>
            <a href="#setFormFactory">setFormFactory</a>
          </li>
          <li>
            <a href="#setHydrator">setHydrator</a>
          </li>
          <li>
            <a href="#setHydrator">setHydrator</a>
          </li>
          <li>
            <a href="#setInputFilter">setInputFilter</a>
          </li>
          <li>
            <a href="#setLabel">setLabel</a>
          </li>
          <li>
            <a href="#setLabelAttributes">setLabelAttributes</a>
          </li>
          <li>
            <a href="#setMessages">setMessages</a>
          </li>
          <li>
            <a href="#setMessages">setMessages</a>
          </li>
          <li>
            <a href="#setName">setName</a>
          </li>
          <li>
            <a href="#setObject">setObject</a>
          </li>
          <li>
            <a href="#setOptions">setOptions</a>
          </li>
          <li>
            <a href="#setOptions">setOptions</a>
          </li>
          <li>
            <a href="#setPriority">setPriority</a>
          </li>
          <li>
            <a href="#setUseAsBaseFieldset">setUseAsBaseFieldset</a>
          </li>
          <li>
            <a href="#setUseInputFilterDefaults">setUseInputFilterDefaults</a>
          </li>
          <li>
            <a href="#setValidationGroup">setValidationGroup</a>
          </li>
          <li>
            <a href="#setValue">setValue</a>
          </li>
          <li>
            <a href="#setWrapElements">setWrapElements</a>
          </li>
          <li>
            <a href="#useAsBaseFieldset">useAsBaseFieldset</a>
          </li>
          <li>
            <a href="#useInputFilterDefaults">useInputFilterDefaults</a>
          </li>
          <li>
            <a href="#wrapElements">wrapElements</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Form\</span>Form</h2>
        <div class="file-notice">
          <p/>
        </div>
        <ul class="fileinfos"/>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Zend_Form_FormInterface.xhtml">Zend\Form\FormInterface</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="attributes"/>
            <h4><span class="label protected">protected</span>array 
                
                $attributes</h4>
            <ul class="varlist">
              <li>Seed attributes</li>
            </ul>
          </li>
          <li>
            <a name="bindAs"/>
            <h4><span class="label protected">protected</span>int 
                
                $bindAs</h4>
            <ul class="varlist">
              <li>How to bind values to the attached object</li>
            </ul>
          </li>
          <li>
            <a name="bindOnValidate"/>
            <h4><span class="label protected">protected</span>int 
                
                $bindOnValidate</h4>
            <ul class="varlist">
              <li>Whether or not to bind values to the bound object on successful validation</li>
            </ul>
          </li>
          <li>
            <a name="baseFieldset"/>
            <h4><span class="label protected">protected</span>object 
                
                $baseFieldset</h4>
            <ul class="varlist">
              <li>Base fieldset to use for hydrating (if none specified, directly hydrate elements)</li>
            </ul>
          </li>
          <li>
            <a name="data"/>
            <h4><span class="label protected">protected</span>object 
                
                $data</h4>
            <ul class="varlist">
              <li>Data being validated</li>
            </ul>
          </li>
          <li>
            <a name="filter"/>
            <h4><span class="label protected">protected</span>object 
                
                $filter</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="useInputFilterDefaults"/>
            <h4><span class="label protected">protected</span>object 
                
                $useInputFilterDefaults</h4>
            <ul class="varlist">
              <li>Whether or not to automatically scan for input filter defaults on attached fieldsets and elements</li>
            </ul>
          </li>
          <li>
            <a name="hasValidated"/>
            <h4><span class="label protected">protected</span>object 
                
                $hasValidated</h4>
            <ul class="varlist">
              <li>Whether or not validation has occurred</li>
            </ul>
          </li>
          <li>
            <a name="isValid"/>
            <h4><span class="label protected">protected</span>object 
                
                $isValid</h4>
            <ul class="varlist">
              <li>Result of last validation operation</li>
            </ul>
          </li>
          <li>
            <a name="isPrepared"/>
            <h4><span class="label protected">protected</span>object 
                
                $isPrepared</h4>
            <ul class="varlist">
              <li>Is the form prepared ?</li>
            </ul>
          </li>
          <li>
            <a name="wrapElements"/>
            <h4><span class="label protected">protected</span>object 
                
                $wrapElements</h4>
            <ul class="varlist">
              <li>Are the form elements/fieldsets wrapped by the form name ?</li>
            </ul>
          </li>
          <li>
            <a name="validationGroup"/>
            <h4><span class="label protected">protected</span>object 
                
                $validationGroup</h4>
            <ul class="varlist">
              <li>Validation group, if any</li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><span title="null|int|string">null|int|string</span></span><strong> $name</strong>, <span class="param-type">Array</span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - Optional name for the element</li>
                <li><code>$options</code> - Optional options for the element</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="__clone"/>
            <h4><span class="label public">public</span>__clone<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Make a deep clone of a fieldset</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="add"/>
            <h4><span class="label public">public</span>add<span style="font-size:90%;">( <span class="param-type"><span title="array|Traversable|ElementInterface">array|Traversable|ElementInterface</span></span><strong> $elementOrFieldset</strong>, <span class="param-type">Array</span><strong> $flags</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Add an element or fieldset<pre>If $elementOrFieldset is an array or Traversable, passes the argument on
to the composed factory to create the object before attaching it.

$flags could contain metadata such as the alias under which to register
the element or fieldset, order in which to prioritize it, etc.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$elementOrFieldset</code> - </li>
                <li><code>$flags</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="add"/>
            <h4><span class="label public">public</span>add<span style="font-size:90%;">( <span class="param-type"><span title="array|Traversable|ElementInterface">array|Traversable|ElementInterface</span></span><strong> $elementOrFieldset</strong>, <span class="param-type">Array</span><strong> $flags</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Add an element or fieldset<pre>$flags could contain metadata such as the alias under which to register
the element or fieldset, order in which to prioritize it, etc.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$elementOrFieldset</code> - </li>
                <li><code>$flags</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="allowObjectBinding"/>
            <h4><span class="label public">public</span>allowObjectBinding<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if the object can be set in this fieldset</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$object</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="allowValueBinding"/>
            <h4><span class="label public">public</span>allowValueBinding<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if this fieldset can bind data</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="attachInputFilterDefaults"/>
            <h4><span class="label public">public</span>attachInputFilterDefaults<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_InputFilter_InputFilterInterface.xhtml">Zend\InputFilter\InputFilterInterface</a></span><strong> $inputFilter</strong>, <span class="param-type"><a href="../interfaces/Zend_Form_FieldsetInterface.xhtml">Zend\Form\FieldsetInterface</a></span><strong> $fieldset</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Attach defaults provided by the elements to the input filter</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$inputFilter</code> - </li>
                <li><code>$fieldset</code> - Fieldset to traverse when looking for default inputs</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="bind"/>
            <h4><span class="label public">public</span>bind<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong>, <span class="param-type">int</span><strong> $flags</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Bind an object to the form<pre>Ensures the object is populated with validated values.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$object</code> - </li>
                <li><code>$flags</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="bindOnValidate"/>
            <h4><span class="label public">public</span>bindOnValidate<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Will we bind values to the bound object on successful validation?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="bindValues"/>
            <h4><span class="label public">public</span>bindValues<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $values</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Bind values to the bound object</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$values</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="bindValues"/>
            <h4><span class="label public">public</span>bindValues<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $values</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Bind values to the bound object</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$values</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="clearAttributes"/>
            <h4><span class="label public">public</span>clearAttributes<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Clear all attributes</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="count"/>
            <h4><span class="label public">public</span>count<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Countable: return count of attached elements/fieldsets</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="get"/>
            <h4><span class="label public">public</span>get<span style="font-size:90%;">( <span class="param-type">string</span><strong> $elementOrFieldset</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieve a named element or fieldset</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$elementOrFieldset</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getAttribute"/>
            <h4><span class="label public">public</span>getAttribute<span style="font-size:90%;">( <span class="param-type"/><strong> $key</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieve a single element attribute</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getAttributes"/>
            <h4><span class="label public">public</span>getAttributes<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieve all attributes at once</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getBaseFieldset"/>
            <h4><span class="label public">public</span>getBaseFieldset<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the base fieldset to use when hydrating</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getData"/>
            <h4><span class="label public">public</span>getData<span style="font-size:90%;">( <span class="param-type">int</span><strong> $flag</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieve the validated data<pre>By default, retrieves normalized values; pass one of the
FormInterface::VALUES_* constants to shape the behavior.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$flag</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\DomainException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getElements"/>
            <h4><span class="label public">public</span>getElements<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieve all attached elements<pre>Storage is an implementation detail of the concrete class.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFieldsets"/>
            <h4><span class="label public">public</span>getFieldsets<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieve all attached fieldsets<pre>Storage is an implementation detail of the concrete class.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFormFactory"/>
            <h4><span class="label public">public</span>getFormFactory<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieve composed form factory<pre>Lazy-loads one if none present.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getHydrator"/>
            <h4><span class="label public">public</span>getHydrator<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the hydrator used when binding an object to the fieldset<pre>Will lazy-load Hydrator\ArraySerializable if none is present.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getInputFilter"/>
            <h4><span class="label public">public</span>getInputFilter<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieve input filter used by this form</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getIterator"/>
            <h4><span class="label public">public</span>getIterator<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>IteratorAggregate: return internal iterator</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getLabel"/>
            <h4><span class="label public">public</span>getLabel<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieve the label used for this element</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getLabelAttributes"/>
            <h4><span class="label public">public</span>getLabelAttributes<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the attributes to use with the label</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMessages"/>
            <h4><span class="label public">public</span>getMessages<span style="font-size:90%;">( <span class="param-type"><span title="null|string">null|string</span></span><strong> $elementName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get validation error messages, if any<pre>Returns a hash of element names/messages for all elements failing
validation, or, if $elementName is provided, messages for that element
only.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$elementName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMessages"/>
            <h4><span class="label public">public</span>getMessages<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get validation error messages, if any.<pre>Returns a list of validation failure messages, if any.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getName"/>
            <h4><span class="label public">public</span>getName<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get value for name</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getObject"/>
            <h4><span class="label public">public</span>getObject<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the object used by the hydrator</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getOption"/>
            <h4><span class="label public">public</span>getOption<span style="font-size:90%;">( <span class="param-type">string</span><strong> $option</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Return the specified option</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$option</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getOptions"/>
            <h4><span class="label public">public</span>getOptions<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get defined options</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getValue"/>
            <h4><span class="label public">public</span>getValue<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieve the element value</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="has"/>
            <h4><span class="label public">public</span>has<span style="font-size:90%;">( <span class="param-type">string</span><strong> $elementOrFieldset</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Does the fieldset have an element/fieldset by the given name?</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$elementOrFieldset</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasAttribute"/>
            <h4><span class="label public">public</span>hasAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Does the element has a specific attribute ?</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasValidated"/>
            <h4><span class="label public">public</span>hasValidated<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check if the form has been validated</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isValid"/>
            <h4><span class="label public">public</span>isValid<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Validate the form<pre>Typically, will proxy to the composed input filter.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\DomainException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="populateValues"/>
            <h4><span class="label public">public</span>populateValues<span style="font-size:90%;">( <span class="param-type"><span title="array|Traversable">array|Traversable</span></span><strong> $data</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Recursively populate values of attached elements and fieldsets</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$data</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="prepare"/>
            <h4><span class="label public">public</span>prepare<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Ensures state is ready for use<pre>Marshalls the input filter, to ensure validation error messages are
available, and prepares any elements and/or fieldsets that require
preparation.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="prepareElement"/>
            <h4><span class="label public">public</span>prepareElement<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Form_Form.xhtml">Zend\Form\Form</a></span><strong> $form</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Ensures state is ready for use. Here, we append the name of the fieldsets to every elements in order to avoid name clashes if the same fieldset is used multiple times</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$form</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="remove"/>
            <h4><span class="label public">public</span>remove<span style="font-size:90%;">( <span class="param-type">string</span><strong> $elementOrFieldset</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Remove a named element or fieldset</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$elementOrFieldset</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAttribute"/>
            <h4><span class="label public">public</span>setAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $key</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set a single element attribute</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - </li>
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAttributes"/>
            <h4><span class="label public">public</span>setAttributes<span style="font-size:90%;">( <span class="param-type"><span title="array|Traversable">array|Traversable</span></span><strong> $arrayOrTraversable</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set many attributes at once<pre>Implementation will decide if this will overwrite or merge.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$arrayOrTraversable</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setBaseFieldset"/>
            <h4><span class="label public">public</span>setBaseFieldset<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Form_FieldsetInterface.xhtml">Zend\Form\FieldsetInterface</a></span><strong> $baseFieldset</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the base fieldset to use when hydrating</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$baseFieldset</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setBindOnValidate"/>
            <h4><span class="label public">public</span>setBindOnValidate<span style="font-size:90%;">( <span class="param-type">int</span><strong> $bindOnValidateFlag</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set flag indicating whether or not to bind values on successful validation</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$bindOnValidateFlag</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setData"/>
            <h4><span class="label public">public</span>setData<span style="font-size:90%;">( <span class="param-type"><span title="array|\ArrayAccess|\Traversable">Traversable</span></span><strong> $data</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set data to validate and/or populate elements<pre>Typically, also passes data on to the composed input filter.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$data</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFormFactory"/>
            <h4><span class="label public">public</span>setFormFactory<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Form_Factory.xhtml">Zend\Form\Factory</a></span><strong> $factory</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Compose a form factory to use when calling add() with a non-element/fieldset</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$factory</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setHydrator"/>
            <h4><span class="label public">public</span>setHydrator<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Stdlib_Hydrator_HydratorInterface.xhtml">Zend\Stdlib\Hydrator\HydratorInterface</a></span><strong> $hydrator</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the hydrator to use when binding an object to the element</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$hydrator</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setHydrator"/>
            <h4><span class="label public">public</span>setHydrator<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Stdlib_Hydrator_HydratorInterface.xhtml">Zend\Stdlib\Hydrator\HydratorInterface</a></span><strong> $hydrator</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the hydrator to use when binding an object to the element</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$hydrator</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setInputFilter"/>
            <h4><span class="label public">public</span>setInputFilter<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_InputFilter_InputFilterInterface.xhtml">Zend\InputFilter\InputFilterInterface</a></span><strong> $inputFilter</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the input filter used by this form</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$inputFilter</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setLabel"/>
            <h4><span class="label public">public</span>setLabel<span style="font-size:90%;">( <span class="param-type"/><strong> $label</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the label used for this element</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$label</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setLabelAttributes"/>
            <h4><span class="label public">public</span>setLabelAttributes<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $labelAttributes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the attributes to use with the label</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$labelAttributes</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setMessages"/>
            <h4><span class="label public">public</span>setMessages<span style="font-size:90%;">( <span class="param-type"><span title="array|Traversable">array|Traversable</span></span><strong> $messages</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set a hash of element names/messages to use when validation fails</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$messages</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setMessages"/>
            <h4><span class="label public">public</span>setMessages<span style="font-size:90%;">( <span class="param-type"><span title="array|Traversable">array|Traversable</span></span><strong> $messages</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set a list of messages to report when validation fails</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$messages</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setName"/>
            <h4><span class="label public">public</span>setName<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set value for name</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setObject"/>
            <h4><span class="label public">public</span>setObject<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the object used by the hydrator</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$object</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setOptions"/>
            <h4><span class="label public">public</span>setOptions<span style="font-size:90%;">( <span class="param-type"><span title="array|\Traversable">Traversable</span></span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set options for a fieldset. Accepted options are: - use_as_base_fieldset: is this fieldset use as the base fieldset?</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$options</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setOptions"/>
            <h4><span class="label public">public</span>setOptions<span style="font-size:90%;">( <span class="param-type"><span title="array|\Traversable">Traversable</span></span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set options for an element. Accepted options are: - label: label to associate with the element - label_attributes: attributes to use when the label is rendered</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$options</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setPriority"/>
            <h4><span class="label public">public</span>setPriority<span style="font-size:90%;">( <span class="param-type">string</span><strong> $elementOrFieldset</strong>, <span class="param-type">int</span><strong> $priority</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set/change the priority of an element or fieldset</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$elementOrFieldset</code> - </li>
                <li><code>$priority</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setUseAsBaseFieldset"/>
            <h4><span class="label public">public</span>setUseAsBaseFieldset<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $useAsBaseFieldset</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set if this fieldset is used as a base fieldset</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$useAsBaseFieldset</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setUseInputFilterDefaults"/>
            <h4><span class="label public">public</span>setUseInputFilterDefaults<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $useInputFilterDefaults</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set flag indicating whether or not to scan elements and fieldsets for defaults</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$useInputFilterDefaults</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setValidationGroup"/>
            <h4><span class="label public">public</span>setValidationGroup<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the validation group (set of values to validate)<pre>Typically, proxies to the composed input filter</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setValue"/>
            <h4><span class="label public">public</span>setValue<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the element value</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setWrapElements"/>
            <h4><span class="label public">public</span>setWrapElements<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $wrapElements</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Are the form elements/fieldsets names wrapped by the form name ?</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$wrapElements</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="useAsBaseFieldset"/>
            <h4><span class="label public">public</span>useAsBaseFieldset<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Is this fieldset use as a base fieldset for a form ?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="useInputFilterDefaults"/>
            <h4><span class="label public">public</span>useInputFilterDefaults<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Should we use input filter defaults from elements and fieldsets?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="wrapElements"/>
            <h4><span class="label public">public</span>wrapElements<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>If true, form elements/fieldsets name's are wrapped around the form name itself</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="extract"/>
            <h4><span class="label protected">protected</span>extract<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Recursively extract values for elements and sub-fieldsets, and populate form values</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="extract"/>
            <h4><span class="label protected">protected</span>extract<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Extract values from the bound object</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="prepareBindData"/>
            <h4><span class="label protected">protected</span>prepareBindData<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $values</strong>, <span class="param-type">Array</span><strong> $match</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Parse filtered values and return only posted fields for binding</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$values</code> - </li>
                <li><code>$match</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="prepareValidationGroup"/>
            <h4><span class="label protected">protected</span>prepareValidationGroup<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Form_FieldsetInterface.xhtml">Zend\Form\FieldsetInterface</a></span><strong> $formOrFieldset</strong>, <span class="param-type">Array</span><strong> $data</strong>, <span class="param-type">Array</span><strong> &amp;$validationGroup</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Prepare the validation group in case Collection elements were used (this function also handle the case where elements could have been dynamically added or removed from a collection using JavaScript)</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$formOrFieldset</code> - </li>
                <li><code>$data</code> - </li>
                <li><code>$validationGroup</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
