<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Permissions\Acl\Role\Registry - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#roles">$roles</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#add">add</a>
          </li>
          <li>
            <a href="#get">get</a>
          </li>
          <li>
            <a href="#getParents">getParents</a>
          </li>
          <li>
            <a href="#getRoles">getRoles</a>
          </li>
          <li>
            <a href="#has">has</a>
          </li>
          <li>
            <a href="#inherits">inherits</a>
          </li>
          <li>
            <a href="#remove">remove</a>
          </li>
          <li>
            <a href="#removeAll">removeAll</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Permissions\Acl\Role\</span>Registry</h2>
        <div class="file-notice">
          <p/>
        </div>
        <ul class="fileinfos"/>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="roles"/>
            <h4><span class="label protected">protected</span>array 
                
                $roles</h4>
            <ul class="varlist">
              <li>Internal Role registry data storage</li>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="add"/>
            <h4><span class="label public">public</span>add<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Role_RoleInterface.xhtml">Zend\Permissions\Acl\Role\RoleInterface</a></span><strong> $role</strong>, <span class="param-type"><span title="RoleInterface|string|array">RoleInterface|string|array</span></span><strong> $parents</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a Role having an identifier unique to the registry<pre>The $parents parameter may be a reference to, or the string identifier for,
a Role existing in the registry, or $parents may be passed as an array of
these - mixing string identifiers and objects is ok - to indicate the Roles
from which the newly added Role will directly inherit.

In order to resolve potential ambiguities with conflicting rules inherited
from different parents, the most recently added parent takes precedence over
parents that were previously added. In other words, the first parent added
will have the least priority, and the last parent added will have the
highest priority.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
                <li><code>$parents</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="get"/>
            <h4><span class="label public">public</span>get<span style="font-size:90%;">( <span class="param-type"><span title="RoleInterface|string">RoleInterface|string</span></span><strong> $role</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the identified Role<pre>The $role parameter can either be a Role or a Role identifier.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getParents"/>
            <h4><span class="label public">public</span>getParents<span style="font-size:90%;">( <span class="param-type"><span title="RoleInterface|string">RoleInterface|string</span></span><strong> $role</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns an array of an existing Role's parents<pre>The array keys are the identifiers of the parent Roles, and the values are
the parent Role instances. The parent Roles are ordered in this array by
ascending priority. The highest priority parent Role, last in the array,
corresponds with the parent Role most recently added.

If the Role does not have any parents, then an empty array is returned.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRoles"/>
            <h4><span class="label public">public</span>getRoles<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get all roles in the registry</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="has"/>
            <h4><span class="label public">public</span>has<span style="font-size:90%;">( <span class="param-type"><span title="RoleInterface|string">RoleInterface|string</span></span><strong> $role</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if and only if the Role exists in the registry<pre>The $role parameter can either be a Role or a Role identifier.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="inherits"/>
            <h4><span class="label public">public</span>inherits<span style="font-size:90%;">( <span class="param-type"><span title="RoleInterface|string">RoleInterface|string</span></span><strong> $role</strong>, <span class="param-type"><span title="RoleInterface|string">RoleInterface|string</span></span><strong> $inherit</strong>, <span class="param-type">boolean</span><strong> $onlyParents</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if and only if $role inherits from $inherit<pre>Both parameters may be either a Role or a Role identifier. If
$onlyParents is true, then $role must inherit directly from
$inherit in order to return true. By default, this method looks
through the entire inheritance DAG to determine whether $role
inherits from $inherit through its ancestor Roles.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
                <li><code>$inherit</code> - </li>
                <li><code>$onlyParents</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="remove"/>
            <h4><span class="label public">public</span>remove<span style="font-size:90%;">( <span class="param-type"><span title="RoleInterface|string">RoleInterface|string</span></span><strong> $role</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes the Role from the registry<pre>The $role parameter can either be a Role or a Role identifier.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removeAll"/>
            <h4><span class="label public">public</span>removeAll<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes all Roles from the registry</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
