<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Soap\Wsdl\ComplexTypeStrategy\ArrayOfTypeComplex - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#_addArrayOfComplexType">_addArrayOfComplexType</a>
          </li>
          <li>
            <a href="#_getNestedCount">_getNestedCount</a>
          </li>
          <li>
            <a href="#_getSingularPhpType">_getSingularPhpType</a>
          </li>
          <li>
            <a href="#addComplexType">addComplexType</a>
          </li>
          <li>
            <a href="#addComplexType">addComplexType</a>
          </li>
          <li>
            <a href="#getContext">getContext</a>
          </li>
          <li>
            <a href="#scanRegisteredTypes">scanRegisteredTypes</a>
          </li>
          <li>
            <a href="#setContext">setContext</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Soap\Wsdl\ComplexTypeStrategy\</span>ArrayOfTypeComplex</h2>
        <div class="file-notice">
          <p>ArrayOfTypeComplex strategy</p>
        </div>
        <ul class="fileinfos"/>
        <h3>Members</h3>
        <ul class="varlist"/>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="addComplexType"/>
            <h4><span class="label public">public</span>addComplexType<span style="font-size:90%;">( <span class="param-type">string</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Add an ArrayOfType based on the xsd:complexType syntax if type[] is detected in return value doc comment.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>tns:xsd-type</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addComplexType"/>
            <h4><span class="label public">public</span>addComplexType<span style="font-size:90%;">( <span class="param-type">string</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Add a complex type by recursivly using all the class properties fetched via Reflection.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - Name of the class to be specified</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>XSD Type for the given PHP type</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if class does not exist</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getContext"/>
            <h4><span class="label public">public</span>getContext<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Return the current Zend_Soap_Wsdl context object</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="scanRegisteredTypes"/>
            <h4><span class="label public">public</span>scanRegisteredTypes<span style="font-size:90%;">( <span class="param-type">string</span><strong> $phpType</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Look through registered types</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$phpType</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setContext"/>
            <h4><span class="label public">public</span>setContext<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Soap_Wsdl.xhtml">Zend\Soap\Wsdl</a></span><strong> $context</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the Zend_Soap_Wsdl Context object this strategy resides in.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$context</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_addArrayOfComplexType"/>
            <h4><span class="label protected">protected</span>_addArrayOfComplexType<span style="font-size:90%;">( <span class="param-type">string</span><strong> $singularType</strong>, <span class="param-type">string</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Add an ArrayOfType based on the xsd:complexType syntax if type[] is detected in return value doc comment.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$singularType</code> - e.g. '\MyNamespace\MyClassname'</li>
                <li><code>$type</code> - e.g. '\MyNamespace\MyClassname[]'</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>tns:xsd-type   e.g. 'tns:ArrayOfMyNamespace.MyClassname'</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getNestedCount"/>
            <h4><span class="label protected">protected</span>_getNestedCount<span style="font-size:90%;">( <span class="param-type">string</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Return the array nesting level based on the type name</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_getSingularPhpType"/>
            <h4><span class="label protected">protected</span>_getSingularPhpType<span style="font-size:90%;">( <span class="param-type">string</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>From a nested definition with type[], get the singular PHP Type</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
