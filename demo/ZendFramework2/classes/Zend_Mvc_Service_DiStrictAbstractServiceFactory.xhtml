<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Mvc\Service\DiStrictAbstractServiceFactory - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Constants</h3>
        <ul>
          <li>
            <a href="#USE_SL_BEFORE_DI">USE_SL_BEFORE_DI</a>
          </li>
          <li>
            <a href="#USE_SL_AFTER_DI">USE_SL_AFTER_DI</a>
          </li>
          <li>
            <a href="#USE_SL_NONE">USE_SL_NONE</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#di">$di</a>
          </li>
          <li>
            <a href="#useServiceLocator">$useServiceLocator</a>
          </li>
          <li>
            <a href="#serviceLocator">$serviceLocator</a>
          </li>
          <li>
            <a href="#allowedServiceNames">$allowedServiceNames</a>
          </li>
          <li>
            <a href="#definitions">$definitions</a>
          </li>
          <li>
            <a href="#instanceManager">$instanceManager</a>
          </li>
          <li>
            <a href="#instanceContext">$instanceContext</a>
          </li>
          <li>
            <a href="#currentDependencies">$currentDependencies</a>
          </li>
          <li>
            <a href="#references">$references</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#canCreateServiceWithName">canCreateServiceWithName</a>
          </li>
          <li>
            <a href="#configure">configure</a>
          </li>
          <li>
            <a href="#createInstanceViaCallback">createInstanceViaCallback</a>
          </li>
          <li>
            <a href="#createInstanceViaConstructor">createInstanceViaConstructor</a>
          </li>
          <li>
            <a href="#createServiceWithName">createServiceWithName</a>
          </li>
          <li>
            <a href="#definitions">definitions</a>
          </li>
          <li>
            <a href="#get">get</a>
          </li>
          <li>
            <a href="#get">get</a>
          </li>
          <li>
            <a href="#getAllowedServiceNames">getAllowedServiceNames</a>
          </li>
          <li>
            <a href="#getClass">getClass</a>
          </li>
          <li>
            <a href="#handleInjectDependencies">handleInjectDependencies</a>
          </li>
          <li>
            <a href="#injectDependencies">injectDependencies</a>
          </li>
          <li>
            <a href="#instanceManager">instanceManager</a>
          </li>
          <li>
            <a href="#isSubclassOf">isSubclassOf</a>
          </li>
          <li>
            <a href="#newInstance">newInstance</a>
          </li>
          <li>
            <a href="#resolveAndCallInjectionMethodForInstance">resolveAndCallInjectionMethodForInstance</a>
          </li>
          <li>
            <a href="#resolveMethodParameters">resolveMethodParameters</a>
          </li>
          <li>
            <a href="#setAllowedServiceNames">setAllowedServiceNames</a>
          </li>
          <li>
            <a href="#setDefinitionList">setDefinitionList</a>
          </li>
          <li>
            <a href="#setInstanceManager">setInstanceManager</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Mvc\Service\</span>DiStrictAbstractServiceFactory</h2>
        <ul class="fileinfos"/>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Zend_ServiceManager_AbstractFactoryInterface.xhtml">Zend\ServiceManager\AbstractFactoryInterface</a>
          </li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist">
          <li><a name="USE_SL_BEFORE_DI"/>USE_SL_BEFORE_DI = 'before'<hr/></li>
          <li><a name="USE_SL_AFTER_DI"/>USE_SL_AFTER_DI = 'after'<hr/></li>
          <li><a name="USE_SL_NONE"/>USE_SL_NONE = 'none'<hr/></li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="di"/>
            <h4><span class="label protected">protected</span>object 
                
                $di</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="useServiceLocator"/>
            <h4><span class="label protected">protected</span>string 
                
                $useServiceLocator</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="serviceLocator"/>
            <h4><span class="label protected">protected</span>object 
                
                $serviceLocator</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="allowedServiceNames"/>
            <h4><span class="label protected">protected</span>array 
                
                $allowedServiceNames</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Di_Di.xhtml">Zend\Di\Di</a></span><strong> $di</strong>, <span class="param-type">string</span><strong> $useServiceLocator</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$di</code> - </li>
                <li><code>$useServiceLocator</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="canCreateServiceWithName"/>
            <h4><span class="label public">public</span>canCreateServiceWithName<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_ServiceManager_ServiceLocatorInterface.xhtml">Zend\ServiceManager\ServiceLocatorInterface</a></span><strong> $serviceLocator</strong>, <span class="param-type"/><strong> $name</strong>, <span class="param-type"/><strong> $requestedName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritDoc}<pre>Allows creation of services only when in a whitelist</pre></li>
            </p>
          </li>
          <li>
            <a name="configure"/>
            <h4><span class="label public">public</span>configure<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Di_Config.xhtml">Zend\Di\Config</a></span><strong> $config</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Provide a configuration object to configure this instance</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$config</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="createServiceWithName"/>
            <h4><span class="label public">public</span>createServiceWithName<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_ServiceManager_ServiceLocatorInterface.xhtml">Zend\ServiceManager\ServiceLocatorInterface</a></span><strong> $serviceLocator</strong>, <span class="param-type"/><strong> $serviceName</strong>, <span class="param-type"/><strong> $requestedName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>{@inheritDoc}<pre>Allows creation of services only when in a whitelist</pre></li>
            </p>
          </li>
          <li>
            <a name="definitions"/>
            <h4><span class="label public">public</span>definitions<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="get"/>
            <h4><span class="label public">public</span>get<span style="font-size:90%;">( <span class="param-type"/><strong> $name</strong>, <span class="param-type">Array</span><strong> $params</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Overrides Zend\Di to allow the given serviceLocator's services to be reused by Di itself<pre>{@inheritDoc}</pre></li>
            </p>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidServiceNameException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="get"/>
            <h4><span class="label public">public</span>get<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">Array</span><strong> $params</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Lazy-load a class<pre>Attempts to load the class (or service alias) provided. If it has been
loaded before, the previous instance will be returned (unless the service
definition indicates shared instances should not be used).</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - Class name or service alias</li>
                <li><code>$params</code> - Parameters to pass to the constructor</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getAllowedServiceNames"/>
            <h4><span class="label public">public</span>getAllowedServiceNames<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="injectDependencies"/>
            <h4><span class="label public">public</span>injectDependencies<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $instance</strong>, <span class="param-type">Array</span><strong> $params</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Inject dependencies</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$instance</code> - </li>
                <li><code>$params</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="instanceManager"/>
            <h4><span class="label public">public</span>instanceManager<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="newInstance"/>
            <h4><span class="label public">public</span>newInstance<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $name</strong>, <span class="param-type">Array</span><strong> $params</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $isShared</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieve a new instance of a class<pre>Forces retrieval of a discrete instance of the given class, using the
constructor parameters provided.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - Class name or service alias</li>
                <li><code>$params</code> - Parameters to pass to the constructor</li>
                <li><code>$isShared</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\ClassNotFoundException</code>
                </li>
                <li>
                  <code>Exception\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAllowedServiceNames"/>
            <h4><span class="label public">public</span>setAllowedServiceNames<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $allowedServiceNames</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$allowedServiceNames</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setDefinitionList"/>
            <h4><span class="label public">public</span>setDefinitionList<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Di_DefinitionList.xhtml">Zend\Di\DefinitionList</a></span><strong> $definitions</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$definitions</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setInstanceManager"/>
            <h4><span class="label public">public</span>setInstanceManager<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Di_InstanceManager.xhtml">Zend\Di\InstanceManager</a></span><strong> $instanceManager</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the instance manager</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$instanceManager</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="createInstanceViaCallback"/>
            <h4><span class="label protected">protected</span>createInstanceViaCallback<span style="font-size:90%;">( <span class="param-type"><span title="callable">callable</span></span><strong> $callback</strong>, <span class="param-type">array</span><strong> $params</strong>, <span class="param-type">string</span><strong> $alias</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get an object instance from the defined callback</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$callback</code> - </li>
                <li><code>$params</code> - </li>
                <li><code>$alias</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidCallbackException</code>
                </li>
                <li>
                  <code>Exception\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="createInstanceViaConstructor"/>
            <h4><span class="label protected">protected</span>createInstanceViaConstructor<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong>, <span class="param-type">array</span><strong> $params</strong>, <span class="param-type"><span title="string|null">string|null</span></span><strong> $alias</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieve a class instance based on class name<pre>Any parameters provided will be used as constructor arguments. If any
given parameter is a DependencyReference object, it will be fetched
from the container so that the instance may be injected.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - </li>
                <li><code>$params</code> - </li>
                <li><code>$alias</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getClass"/>
            <h4><span class="label protected">protected</span>getClass<span style="font-size:90%;">( <span class="param-type"><span title="Object">Object</span></span><strong> $instance</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Utility method used to retrieve the class of a particular instance. This is here to allow extending classes to override how class names are resolved</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$instance</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="handleInjectDependencies"/>
            <h4><span class="label protected">protected</span>handleInjectDependencies<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $instance</strong>, <span class="param-type">array</span><strong> $injectionMethods</strong>, <span class="param-type">array</span><strong> $params</strong>, <span class="param-type"><span title="string|null">string|null</span></span><strong> $instanceClass</strong>, <span class="param-type"/><strong> $instanceAlias</strong>, <span class="param-type">string</span><strong> $requestedName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$instance</code> - </li>
                <li><code>$injectionMethods</code> - </li>
                <li><code>$params</code> - </li>
                <li><code>$instanceClass</code> - </li>
                <li><code/> - </li>
                <li><code>$requestedName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isSubclassOf"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>isSubclassOf<span style="font-size:90%;">( <span class="param-type">string</span><strong> $className</strong>, <span class="param-type"/><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if the object has this class as one of its parents</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$className</code> - </li>
                <li><code>$type</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="resolveAndCallInjectionMethodForInstance"/>
            <h4><span class="label protected">protected</span>resolveAndCallInjectionMethodForInstance<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $instance</strong>, <span class="param-type">string</span><strong> $method</strong>, <span class="param-type">array</span><strong> $params</strong>, <span class="param-type">string</span><strong> $alias</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $methodIsRequired</strong>, <span class="param-type"><span title="string|null">string|null</span></span><strong> $methodClass</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>This parameter will handle any injection methods and resolution of dependencies for such methods</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$instance</code> - </li>
                <li><code>$method</code> - </li>
                <li><code>$params</code> - </li>
                <li><code>$alias</code> - </li>
                <li><code>$methodIsRequired</code> - </li>
                <li><code>$methodClass</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="resolveMethodParameters"/>
            <h4><span class="label protected">protected</span>resolveMethodParameters<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong>, <span class="param-type">string</span><strong> $method</strong>, <span class="param-type">Array</span><strong> $callTimeUserParams</strong>, <span class="param-type">string</span><strong> $alias</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $methodIsRequired</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $isInstantiator</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Resolve parameters referencing other services</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - </li>
                <li><code>$method</code> - </li>
                <li><code>$callTimeUserParams</code> - </li>
                <li><code>$alias</code> - </li>
                <li><code>$methodIsRequired</code> - </li>
                <li><code>$isInstantiator</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\MissingPropertyException</code>
                </li>
                <li>
                  <code>Exception\CircularDependencyException</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
