<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Zend\Text\Table\DecoratorManager</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Zend_Text_Table">Zend\Text\Table</a>
          </li>
          <li class="separator">DecoratorManager</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/Text/Table/DecoratorManager.php.xhtml#line21">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Zend\Text\Table\</small>DecoratorManager</h1>
        <h4>Plugin manager implementation for text table decorators</h4>
        <p>Enforces that decorators retrieved are instances of<br/>Decorator\DecoratorInterface. Additionally, it registers a number of default<br/>decorators.</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class DecoratorManager
                extends <a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager.xhtml">AbstractPluginManager</a>
            {<br/><ul class="none"><li>// Inherited constants from <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager.xhtml">ServiceManager</a></li><li>const <a href="#SCOPE_PARENT">SCOPE_PARENT</a> = 'parent';</li><li>const <a href="#SCOPE_CHILD">SCOPE_CHILD</a> = 'child';</li></ul><ul class="none"><li>// members</li><li>protected array <a href="#members">$invokableClasses</a>;
                    </li></ul><ul class="none"><li>// Inherited members from <span title="Zend\ServiceManager\AbstractPluginManager">AbstractPluginManager</span></li><li>protected <span title="Zend\ServiceManager\bool">bool</span> <a href="#members">$allowOverride</a>;
                        </li><li>protected <span title="Zend\ServiceManager\bool">bool</span> <a href="#members">$autoAddInvokableClass</a>;
                        </li><li>protected mixed <a href="#members">$creationOptions</a>;
                        </li><li>protected <span title="Zend\ServiceManager\ServiceLocatorInterface">ServiceLocatorInterface</span> <a href="#members">$serviceLocator</a>;
                        </li></ul><ul class="none"><li>// Inherited members from <span title="Zend\ServiceManager\ServiceManager">ServiceManager</span></li><li>protected array <a href="#members">$canonicalNames</a>;
                        </li><li>protected <span title="Zend\ServiceManager\bool">bool</span> <a href="#members">$allowOverride</a>;
                        </li><li>protected array <a href="#members">$invokableClasses</a>;
                        </li><li>protected array <a href="#members">$factories</a>;
                        </li><li>protected array <a href="#members">$abstractFactories</a>;
                        </li><li>protected array <a href="#members">$delegators</a>;
                        </li><li>protected array <a href="#members">$pendingAbstractFactoryRequests</a>;
                        </li><li>protected integer <a href="#members">$nestedContextCounter</a>;
                        </li><li>protected array <a href="#members">$nestedContext</a>;
                        </li><li>protected array <a href="#members">$shared</a>;
                        </li><li>protected array <a href="#members">$instances</a>;
                        </li><li>protected array <a href="#members">$aliases</a>;
                        </li><li>protected array <a href="#members">$initializers</a>;
                        </li><li>protected array <a href="#members">$peeringServiceManagers</a>;
                        </li><li>protected <span title="Zend\ServiceManager\bool">bool</span> <a href="#members">$shareByDefault</a>;
                        </li><li>protected <span title="Zend\ServiceManager\bool">bool</span> <a href="#members">$retrieveFromPeeringManagerFirst</a>;
                        </li><li>protected <span title="Zend\ServiceManager\bool">bool</span> <a href="#members">$throwExceptionInCreate</a>;
                        </li><li>protected array <a href="#members">$canonicalNamesReplacements</a>;
                        </li></ul><ul class="none"><li>// methods</li><li>public void <a title="Zend\Text\Table\DecoratorManager" href="../classes/Zend_Text_Table_DecoratorManager/validatePlugin.xhtml">validatePlugin</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="Zend\ServiceManager\AbstractPluginManager">AbstractPluginManager</span></li><li>public void <a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/__construct.xhtml">__construct</a>()
                        </li><li>public abstract void <a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/validatePlugin.xhtml">validatePlugin</a>()
                        </li><li>public  <a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/get.xhtml">get</a>()
                        </li><li>public AbstractPluginManager <a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/setService.xhtml">setService</a>()
                        </li><li>public AbstractPluginManager <a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/setServiceLocator.xhtml">setServiceLocator</a>()
                        </li><li>public ServiceLocatorInterface <a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/getServiceLocator.xhtml">getServiceLocator</a>()
                        </li><li>protected stdClass <a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/createFromInvokable.xhtml">createFromInvokable</a>()
                        </li><li>protected mixed <a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/createFromFactory.xhtml">createFromFactory</a>()
                        </li><li>protected  <a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/createServiceViaCallback.xhtml">createServiceViaCallback</a>()
                        </li></ul><ul class="none"><li>// Inherited methods from <span title="Zend\ServiceManager\ServiceManager">ServiceManager</span></li><li>public void <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/__construct.xhtml">__construct</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setAllowOverride.xhtml">setAllowOverride</a>()
                        </li><li>public bool <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/getAllowOverride.xhtml">getAllowOverride</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setShareByDefault.xhtml">setShareByDefault</a>()
                        </li><li>public bool <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/shareByDefault.xhtml">shareByDefault</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setThrowExceptionInCreate.xhtml">setThrowExceptionInCreate</a>()
                        </li><li>public bool <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/getThrowExceptionInCreate.xhtml">getThrowExceptionInCreate</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setRetrieveFromPeeringManagerFirst.xhtml">setRetrieveFromPeeringManagerFirst</a>()
                        </li><li>public bool <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/retrieveFromPeeringManagerFirst.xhtml">retrieveFromPeeringManagerFirst</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setInvokableClass.xhtml">setInvokableClass</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setFactory.xhtml">setFactory</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/addAbstractFactory.xhtml">addAbstractFactory</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/addDelegator.xhtml">addDelegator</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/addInitializer.xhtml">addInitializer</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setService.xhtml">setService</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setShared.xhtml">setShared</a>()
                        </li><li>protected string <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/resolveAlias.xhtml">resolveAlias</a>()
                        </li><li>public object|array <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/get.xhtml">get</a>()
                        </li><li>public bool|object <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/create.xhtml">create</a>()
                        </li><li>public bool|mixed|null|object <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/doCreate.xhtml">doCreate</a>()
                        </li><li>public bool <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/canCreate.xhtml">canCreate</a>()
                        </li><li>public bool <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/has.xhtml">has</a>()
                        </li><li>public bool <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/canCreateFromAbstractFactory.xhtml">canCreateFromAbstractFactory</a>()
                        </li><li>protected self <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/checkForCircularAliasReference.xhtml">checkForCircularAliasReference</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setAlias.xhtml">setAlias</a>()
                        </li><li>public bool <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/hasAlias.xhtml">hasAlias</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/createScopedServiceManager.xhtml">createScopedServiceManager</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/addPeeringServiceManager.xhtml">addPeeringServiceManager</a>()
                        </li><li>protected string <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/canonicalizeName.xhtml">canonicalizeName</a>()
                        </li><li>protected  <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/createServiceViaCallback.xhtml">createServiceViaCallback</a>()
                        </li><li>public array <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/getRegisteredServices.xhtml">getRegisteredServices</a>()
                        </li><li>public array <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/getCanonicalNames.xhtml">getCanonicalNames</a>()
                        </li><li>public ServiceManager <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setCanonicalNames.xhtml">setCanonicalNames</a>()
                        </li><li>protected mixed <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/retrieveFromPeeringManager.xhtml">retrieveFromPeeringManager</a>()
                        </li><li>protected stdClass <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/createFromInvokable.xhtml">createFromInvokable</a>()
                        </li><li>protected mixed <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/createFromFactory.xhtml">createFromFactory</a>()
                        </li><li>protected object|null <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/createFromAbstractFactory.xhtml">createFromAbstractFactory</a>()
                        </li><li>protected self <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/checkNestedContextStart.xhtml">checkNestedContextStart</a>()
                        </li><li>protected self <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/checkNestedContextStop.xhtml">checkNestedContextStop</a>()
                        </li><li>protected mixed <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/createDelegatorFromFactory.xhtml">createDelegatorFromFactory</a>()
                        </li><li>protected static bool <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/isSubclassOf.xhtml">isSubclassOf</a>()
                        </li><li>protected void <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/unregisterService.xhtml">unregisterService</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/Zend_ServiceManager_AbstractPluginManager.xhtml">Zend\ServiceManager\AbstractPluginManager</a>
            </li>
          </ul>
        </div>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="SCOPE_PARENT">SCOPE_PARENT</td>
              <td>'parent'</td>
            </tr>
            <tr>
              <td id="SCOPE_CHILD">SCOPE_CHILD</td>
              <td>'child'</td>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="abstractFactories"><strong>$abstractFactories</strong>
                —
                array</li>
            <li id="aliases"><strong>$aliases</strong>
                —
                array</li>
            <li id="allowOverride"><strong>$allowOverride</strong>
                —
                <a href="#">Zend\ServiceManager\bool</a><br/><span class="indent">Allow overriding by default</span></li>
            <li id="allowOverride"><strong>$allowOverride</strong>
                —
                <a href="#">Zend\ServiceManager\bool</a></li>
            <li id="autoAddInvokableClass"><strong>$autoAddInvokableClass</strong>
                —
                <a href="#">Zend\ServiceManager\bool</a><br/><span class="indent">Whether or not to auto-add a class as an invokable class if it exists</span></li>
            <li id="canonicalNames"><strong>$canonicalNames</strong>
                —
                array<br/><span class="indent">Lookup for canonicalized names.</span></li>
            <li id="canonicalNamesReplacements"><strong>$canonicalNamesReplacements</strong>
                —
                array</li>
            <li id="creationOptions"><strong>$creationOptions</strong>
                —
                mixed<br/><span class="indent">Options to use when creating an instance</span></li>
            <li id="delegators"><strong>$delegators</strong>
                —
                array</li>
            <li id="factories"><strong>$factories</strong>
                —
                array</li>
            <li id="initializers"><strong>$initializers</strong>
                —
                array</li>
            <li id="instances"><strong>$instances</strong>
                —
                array<br/><span class="indent">Registered services and cached values</span></li>
            <li id="invokableClasses"><strong>$invokableClasses</strong>
                —
                array<br/><span class="indent">Default set of decorators</span></li>
            <li id="invokableClasses"><strong>$invokableClasses</strong>
                —
                array</li>
            <li id="nestedContext"><strong>$nestedContext</strong>
                —
                array</li>
            <li id="nestedContextCounter"><strong>$nestedContextCounter</strong>
                —
                integer</li>
            <li id="peeringServiceManagers"><strong>$peeringServiceManagers</strong>
                —
                array</li>
            <li id="pendingAbstractFactoryRequests"><strong>$pendingAbstractFactoryRequests</strong>
                —
                array</li>
            <li id="retrieveFromPeeringManagerFirst"><strong>$retrieveFromPeeringManagerFirst</strong>
                —
                <a href="#">Zend\ServiceManager\bool</a></li>
            <li id="serviceLocator"><strong>$serviceLocator</strong>
                —
                <a href="#">Zend\ServiceManager\ServiceLocatorInterface</a><br/><span class="indent">The main service locator</span></li>
            <li id="shareByDefault"><strong>$shareByDefault</strong>
                —
                <a href="#">Zend\ServiceManager\bool</a><br/><span class="indent">Whether or not to share by default</span></li>
            <li id="shared"><strong>$shared</strong>
                —
                array</li>
            <li id="throwExceptionInCreate"><strong>$throwExceptionInCreate</strong>
                —
                <a href="#">Zend\ServiceManager\bool</a></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="validatePlugin"><a title="Zend\Text\Table\DecoratorManager" href="../classes/Zend_Text_Table_DecoratorManager/validatePlugin.xhtml">validatePlugin()</a>
                — Validate the plugin</li>
          </ul>
          <h3>Inherited from <a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager.xhtml">Zend\ServiceManager\AbstractPluginManager</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="createFromFactory"><a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/createFromFactory.xhtml">createFromFactory()</a>
                — Attempt to create an instance via a factory class</li>
            <li id="createFromInvokable"><a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/createFromInvokable.xhtml">createFromInvokable()</a>
                — Attempt to create an instance via an invokable class</li>
            <li id="createServiceViaCallback"><a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/createServiceViaCallback.xhtml">createServiceViaCallback()</a>
                — Create service via callback</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="get"><a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/get.xhtml">get()</a>
                — Retrieve a service from the manager by name</li>
            <li id="getServiceLocator"><a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/getServiceLocator.xhtml">getServiceLocator()</a>
                — Get the main plugin manager. Useful for fetching dependencies from within factories.</li>
            <li id="setService"><a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/setService.xhtml">setService()</a>
                — Register a service with the locator.</li>
            <li id="setServiceLocator"><a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/setServiceLocator.xhtml">setServiceLocator()</a>
                — Set the main service locator so factories can have access to it to pull deps</li>
            <li id="validatePlugin"><a title="Zend\ServiceManager\AbstractPluginManager" href="../classes/Zend_ServiceManager_AbstractPluginManager/validatePlugin.xhtml">validatePlugin()</a>
                — Validate the plugin</li>
          </ul>
          <h3>Inherited from <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager.xhtml">Zend\ServiceManager\ServiceManager</a></h3>
          <h4>protected</h4>
          <ul>
            <li id="canonicalizeName"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/canonicalizeName.xhtml">canonicalizeName()</a>
                — Canonicalize name</li>
            <li id="checkForCircularAliasReference"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/checkForCircularAliasReference.xhtml">checkForCircularAliasReference()</a>
                — Ensure the alias definition will not result in a circular reference</li>
            <li id="checkNestedContextStart">
              <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/checkNestedContextStart.xhtml">checkNestedContextStart()</a>
            </li>
            <li id="checkNestedContextStop">
              <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/checkNestedContextStop.xhtml">checkNestedContextStop()</a>
            </li>
            <li id="createDelegatorFromFactory">
              <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/createDelegatorFromFactory.xhtml">createDelegatorFromFactory()</a>
            </li>
            <li id="createFromAbstractFactory"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/createFromAbstractFactory.xhtml">createFromAbstractFactory()</a>
                — Attempt to create an instance via an abstract factory</li>
            <li id="createFromFactory"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/createFromFactory.xhtml">createFromFactory()</a>
                — Attempt to create an instance via a factory</li>
            <li id="createFromInvokable"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/createFromInvokable.xhtml">createFromInvokable()</a>
                — Attempt to create an instance via an invokable class</li>
            <li id="createServiceViaCallback"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/createServiceViaCallback.xhtml">createServiceViaCallback()</a>
                — Create service via callback</li>
            <li id="isSubclassOf"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/isSubclassOf.xhtml">isSubclassOf()</a>
                — Checks if the object has this class as one of its parents</li>
            <li id="resolveAlias"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/resolveAlias.xhtml">resolveAlias()</a>
                — Resolve the alias for the given canonical name</li>
            <li id="retrieveFromPeeringManager"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/retrieveFromPeeringManager.xhtml">retrieveFromPeeringManager()</a>
                — Attempt to retrieve an instance via a peering manager</li>
            <li id="unregisterService"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/unregisterService.xhtml">unregisterService()</a>
                — Unregister a service</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="addAbstractFactory"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/addAbstractFactory.xhtml">addAbstractFactory()</a>
                — Add abstract factory</li>
            <li id="addDelegator"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/addDelegator.xhtml">addDelegator()</a>
                — Sets the given service name as to be handled by a delegator factory</li>
            <li id="addInitializer"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/addInitializer.xhtml">addInitializer()</a>
                — Add initializer</li>
            <li id="addPeeringServiceManager"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/addPeeringServiceManager.xhtml">addPeeringServiceManager()</a>
                — Add a peering relationship</li>
            <li id="canCreate"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/canCreate.xhtml">canCreate()</a>
                — Determine if we can create an instance.</li>
            <li id="canCreateFromAbstractFactory"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/canCreateFromAbstractFactory.xhtml">canCreateFromAbstractFactory()</a>
                — Determine if we can create an instance from an abstract factory.</li>
            <li id="create"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/create.xhtml">create()</a>
                — Create an instance of the requested service</li>
            <li id="createScopedServiceManager"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/createScopedServiceManager.xhtml">createScopedServiceManager()</a>
                — Create scoped service manager</li>
            <li id="doCreate"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/doCreate.xhtml">doCreate()</a>
                — Actually creates the service</li>
            <li id="get"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/get.xhtml">get()</a>
                — Retrieve a registered instance</li>
            <li id="getAllowOverride"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/getAllowOverride.xhtml">getAllowOverride()</a>
                — Get allow override</li>
            <li id="getCanonicalNames"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/getCanonicalNames.xhtml">getCanonicalNames()</a>
                — Retrieve a keyed list of all canonical names. Handy for debugging!</li>
            <li id="getRegisteredServices"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/getRegisteredServices.xhtml">getRegisteredServices()</a>
                — Retrieve a keyed list of all registered services. Handy for debugging!</li>
            <li id="getThrowExceptionInCreate"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/getThrowExceptionInCreate.xhtml">getThrowExceptionInCreate()</a>
                — Get throw exceptions in create</li>
            <li id="has"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/has.xhtml">has()</a>
                — Determine if an instance exists.</li>
            <li id="hasAlias"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/hasAlias.xhtml">hasAlias()</a>
                — Determine if we have an alias</li>
            <li id="retrieveFromPeeringManagerFirst"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/retrieveFromPeeringManagerFirst.xhtml">retrieveFromPeeringManagerFirst()</a>
                — Should we retrieve from the peering manager prior to attempting to create a service?</li>
            <li id="setAlias">
              <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setAlias.xhtml">setAlias()</a>
            </li>
            <li id="setAllowOverride"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setAllowOverride.xhtml">setAllowOverride()</a>
                — Set allow override</li>
            <li id="setCanonicalNames"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setCanonicalNames.xhtml">setCanonicalNames()</a>
                — Allows to override the canonical names lookup map with predefined values.</li>
            <li id="setFactory"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setFactory.xhtml">setFactory()</a>
                — Set factory</li>
            <li id="setInvokableClass"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setInvokableClass.xhtml">setInvokableClass()</a>
                — Set invokable class</li>
            <li id="setRetrieveFromPeeringManagerFirst"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setRetrieveFromPeeringManagerFirst.xhtml">setRetrieveFromPeeringManagerFirst()</a>
                — Set flag indicating whether to pull from peering manager before attempting creation</li>
            <li id="setService"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setService.xhtml">setService()</a>
                — Register a service with the locator</li>
            <li id="setShareByDefault"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setShareByDefault.xhtml">setShareByDefault()</a>
                — Set flag indicating whether services are shared by default</li>
            <li id="setShared">
              <a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setShared.xhtml">setShared()</a>
            </li>
            <li id="setThrowExceptionInCreate"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/setThrowExceptionInCreate.xhtml">setThrowExceptionInCreate()</a>
                — Set throw exceptions in create</li>
            <li id="shareByDefault"><a title="Zend\ServiceManager\ServiceManager" href="../classes/Zend_ServiceManager_ServiceManager/shareByDefault.xhtml">shareByDefault()</a>
                — Are services shared by default?</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
