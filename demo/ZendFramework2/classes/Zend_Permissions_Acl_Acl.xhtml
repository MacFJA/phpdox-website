<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Permissions\Acl\Acl - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Constants</h3>
        <ul>
          <li>
            <a href="#TYPE_ALLOW">TYPE_ALLOW</a>
          </li>
          <li>
            <a href="#TYPE_DENY">TYPE_DENY</a>
          </li>
          <li>
            <a href="#OP_ADD">OP_ADD</a>
          </li>
          <li>
            <a href="#OP_REMOVE">OP_REMOVE</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#roleRegistry">$roleRegistry</a>
          </li>
          <li>
            <a href="#resources">$resources</a>
          </li>
          <li>
            <a href="#isAllowedRole">$isAllowedRole</a>
          </li>
          <li>
            <a href="#isAllowedResource">$isAllowedResource</a>
          </li>
          <li>
            <a href="#isAllowedPrivilege">$isAllowedPrivilege</a>
          </li>
          <li>
            <a href="#rules">$rules</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#addResource">addResource</a>
          </li>
          <li>
            <a href="#addRole">addRole</a>
          </li>
          <li>
            <a href="#allow">allow</a>
          </li>
          <li>
            <a href="#deny">deny</a>
          </li>
          <li>
            <a href="#getResource">getResource</a>
          </li>
          <li>
            <a href="#getResources">getResources</a>
          </li>
          <li>
            <a href="#getRole">getRole</a>
          </li>
          <li>
            <a href="#getRoleRegistry">getRoleRegistry</a>
          </li>
          <li>
            <a href="#getRoles">getRoles</a>
          </li>
          <li>
            <a href="#getRuleType">getRuleType</a>
          </li>
          <li>
            <a href="#getRules">getRules</a>
          </li>
          <li>
            <a href="#hasResource">hasResource</a>
          </li>
          <li>
            <a href="#hasRole">hasRole</a>
          </li>
          <li>
            <a href="#inheritsResource">inheritsResource</a>
          </li>
          <li>
            <a href="#inheritsRole">inheritsRole</a>
          </li>
          <li>
            <a href="#isAllowed">isAllowed</a>
          </li>
          <li>
            <a href="#removeAllow">removeAllow</a>
          </li>
          <li>
            <a href="#removeDeny">removeDeny</a>
          </li>
          <li>
            <a href="#removeResource">removeResource</a>
          </li>
          <li>
            <a href="#removeResourceAll">removeResourceAll</a>
          </li>
          <li>
            <a href="#removeRole">removeRole</a>
          </li>
          <li>
            <a href="#removeRoleAll">removeRoleAll</a>
          </li>
          <li>
            <a href="#roleDFSAllPrivileges">roleDFSAllPrivileges</a>
          </li>
          <li>
            <a href="#roleDFSOnePrivilege">roleDFSOnePrivilege</a>
          </li>
          <li>
            <a href="#roleDFSVisitAllPrivileges">roleDFSVisitAllPrivileges</a>
          </li>
          <li>
            <a href="#roleDFSVisitOnePrivilege">roleDFSVisitOnePrivilege</a>
          </li>
          <li>
            <a href="#setRule">setRule</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Permissions\Acl\</span>Acl</h2>
        <div class="file-notice">
          <p/>
        </div>
        <ul class="fileinfos"/>
        <h3>Constants</h3>
        <ul class="varlist">
          <li><a name="TYPE_ALLOW"/>TYPE_ALLOW = 'TYPE_ALLOW'<em> </em><p><li>Rule type: allow</li></p><hr/></li>
          <li><a name="TYPE_DENY"/>TYPE_DENY = 'TYPE_DENY'<em> </em><p><li>Rule type: deny</li></p><hr/></li>
          <li><a name="OP_ADD"/>OP_ADD = 'OP_ADD'<em> </em><p><li>Rule operation: add</li></p><hr/></li>
          <li><a name="OP_REMOVE"/>OP_REMOVE = 'OP_REMOVE'<em> </em><p><li>Rule operation: remove</li></p><hr/></li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="roleRegistry"/>
            <h4><span class="label protected">protected</span>object 
                
                $roleRegistry</h4>
            <ul class="varlist">
              <li>Role registry</li>
            </ul>
          </li>
          <li>
            <a name="resources"/>
            <h4><span class="label protected">protected</span>array 
                
                $resources</h4>
            <ul class="varlist">
              <li>Resource tree</li>
            </ul>
          </li>
          <li>
            <a name="isAllowedRole"/>
            <h4><span class="label protected">protected</span>object 
                
                $isAllowedRole</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="isAllowedResource"/>
            <h4><span class="label protected">protected</span>object 
                
                $isAllowedResource</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="isAllowedPrivilege"/>
            <h4><span class="label protected">protected</span>string 
                
                $isAllowedPrivilege</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
          <li>
            <a name="rules"/>
            <h4><span class="label protected">protected</span>array 
                
                $rules</h4>
            <ul class="varlist">
              <li>ACL rules; whitelist (deny everything to all) by default</li>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="addResource"/>
            <h4><span class="label public">public</span>addResource<span style="font-size:90%;">( <span class="param-type"><span title="Resource\ResourceInterface|string">ResourceInterface|string</span></span><strong> $resource</strong>, <span class="param-type"><span title="Resource\ResourceInterface|string">ResourceInterface|string</span></span><strong> $parent</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a Resource having an identifier unique to the ACL<pre>The $parent parameter may be a reference to, or the string identifier for,
the existing Resource from which the newly added Resource will inherit.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$resource</code> - </li>
                <li><code>$parent</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addRole"/>
            <h4><span class="label public">public</span>addRole<span style="font-size:90%;">( <span class="param-type"><span title="Role\RoleInterface">RoleInterface</span></span><strong> $role</strong>, <span class="param-type"><span title="Role\RoleInterface|string|array">RoleInterface|string|array</span></span><strong> $parents</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a Role having an identifier unique to the registry<pre>The $parents parameter may be a reference to, or the string identifier for,
a Role existing in the registry, or $parents may be passed as an array of
these - mixing string identifiers and objects is ok - to indicate the Roles
from which the newly added Role will directly inherit.

In order to resolve potential ambiguities with conflicting rules inherited
from different parents, the most recently added parent takes precedence over
parents that were previously added. In other words, the first parent added
will have the least priority, and the last parent added will have the
highest priority.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
                <li><code>$parents</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="allow"/>
            <h4><span class="label public">public</span>allow<span style="font-size:90%;">( <span class="param-type"><span title="Role\RoleInterface|string|array">RoleInterface|string|array</span></span><strong> $roles</strong>, <span class="param-type"><span title="Resource\ResourceInterface|string|array">ResourceInterface|string|array</span></span><strong> $resources</strong>, <span class="param-type"><span title="string|array">string|array</span></span><strong> $privileges</strong>, <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Assertion_AssertionInterface.xhtml">Zend\Permissions\Acl\Assertion\AssertionInterface</a></span><strong> $assert</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds an "allow" rule to the ACL</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$roles</code> - </li>
                <li><code>$resources</code> - </li>
                <li><code>$privileges</code> - </li>
                <li><code>$assert</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="deny"/>
            <h4><span class="label public">public</span>deny<span style="font-size:90%;">( <span class="param-type"><span title="Role\RoleInterface|string|array">RoleInterface|string|array</span></span><strong> $roles</strong>, <span class="param-type"><span title="Resource\ResourceInterface|string|array">ResourceInterface|string|array</span></span><strong> $resources</strong>, <span class="param-type"><span title="string|array">string|array</span></span><strong> $privileges</strong>, <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Assertion_AssertionInterface.xhtml">Zend\Permissions\Acl\Assertion\AssertionInterface</a></span><strong> $assert</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a "deny" rule to the ACL</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$roles</code> - </li>
                <li><code>$resources</code> - </li>
                <li><code>$privileges</code> - </li>
                <li><code>$assert</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getResource"/>
            <h4><span class="label public">public</span>getResource<span style="font-size:90%;">( <span class="param-type"><span title="Resource\ResourceInterface|string">ResourceInterface|string</span></span><strong> $resource</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the identified Resource<pre>The $resource parameter can either be a Resource or a Resource identifier.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$resource</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getResources"/>
            <h4><span class="label public">public</span>getResources<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>of registered resources</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRole"/>
            <h4><span class="label public">public</span>getRole<span style="font-size:90%;">( <span class="param-type"><span title="Role\RoleInterface|string">RoleInterface|string</span></span><strong> $role</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the identified Role<pre>The $role parameter can either be a Role or Role identifier.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRoles"/>
            <h4><span class="label public">public</span>getRoles<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>of registered roles</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasResource"/>
            <h4><span class="label public">public</span>hasResource<span style="font-size:90%;">( <span class="param-type"><span title="Resource\ResourceInterface|string">ResourceInterface|string</span></span><strong> $resource</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if and only if the Resource exists in the ACL<pre>The $resource parameter can either be a Resource or a Resource identifier.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$resource</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasRole"/>
            <h4><span class="label public">public</span>hasRole<span style="font-size:90%;">( <span class="param-type"><span title="Role\RoleInterface|string">RoleInterface|string</span></span><strong> $role</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if and only if the Role exists in the registry<pre>The $role parameter can either be a Role or a Role identifier.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="inheritsResource"/>
            <h4><span class="label public">public</span>inheritsResource<span style="font-size:90%;">( <span class="param-type"><span title="Resource\ResourceInterface|string">ResourceInterface|string</span></span><strong> $resource</strong>, <span class="param-type"/><strong> $inherit</strong>, <span class="param-type">boolean</span><strong> $onlyParent</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if and only if $resource inherits from $inherit<pre>Both parameters may be either a Resource or a Resource identifier. If
$onlyParent is true, then $resource must inherit directly from
$inherit in order to return true. By default, this method looks
through the entire inheritance tree to determine whether $resource
inherits from $inherit through its ancestor Resources.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$resource</code> - </li>
                <li><code>inherit</code> - </li>
                <li><code>$onlyParent</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="inheritsRole"/>
            <h4><span class="label public">public</span>inheritsRole<span style="font-size:90%;">( <span class="param-type"><span title="Role\RoleInterface|string">RoleInterface|string</span></span><strong> $role</strong>, <span class="param-type"><span title="Role\RoleInterface|string">RoleInterface|string</span></span><strong> $inherit</strong>, <span class="param-type">boolean</span><strong> $onlyParents</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if and only if $role inherits from $inherit<pre>Both parameters may be either a Role or a Role identifier. If
$onlyParents is true, then $role must inherit directly from
$inherit in order to return true. By default, this method looks
through the entire inheritance DAG to determine whether $role
inherits from $inherit through its ancestor Roles.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
                <li><code>$inherit</code> - </li>
                <li><code>$onlyParents</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isAllowed"/>
            <h4><span class="label public">public</span>isAllowed<span style="font-size:90%;">( <span class="param-type"><span title="Role\RoleInterface|string">RoleInterface|string</span></span><strong> $role</strong>, <span class="param-type"><span title="Resource\ResourceInterface|string">ResourceInterface|string</span></span><strong> $resource</strong>, <span class="param-type">string</span><strong> $privilege</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if and only if the Role has access to the Resource<pre>The $role and $resource parameters may be references to, or the string identifiers for,
an existing Resource and Role combination.

If either $role or $resource is null, then the query applies to all Roles or all Resources,
respectively. Both may be null to query whether the ACL has a "blacklist" rule
(allow everything to all). By default, Zend_Acl creates a "whitelist" rule (deny
everything to all), and this method would return false unless this default has
been overridden (i.e., by executing $acl-&gt;allow()).

If a $privilege is not provided, then this method returns false if and only if the
Role is denied access to at least one privilege upon the Resource. In other words, this
method returns true if and only if the Role is allowed all privileges on the Resource.

This method checks Role inheritance using a depth-first traversal of the Role registry.
The highest priority parent (i.e., the parent most recently added) is checked first,
and its respective parents are checked similarly before the lower-priority parents of
the Role are checked.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
                <li><code>$resource</code> - </li>
                <li><code>$privilege</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removeAllow"/>
            <h4><span class="label public">public</span>removeAllow<span style="font-size:90%;">( <span class="param-type"><span title="Role\RoleInterface|string|array">RoleInterface|string|array</span></span><strong> $roles</strong>, <span class="param-type"><span title="Resource\ResourceInterface|string|array">ResourceInterface|string|array</span></span><strong> $resources</strong>, <span class="param-type"><span title="string|array">string|array</span></span><strong> $privileges</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes "allow" permissions from the ACL</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$roles</code> - </li>
                <li><code>$resources</code> - </li>
                <li><code>$privileges</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removeDeny"/>
            <h4><span class="label public">public</span>removeDeny<span style="font-size:90%;">( <span class="param-type"><span title="Role\RoleInterface|string|array">RoleInterface|string|array</span></span><strong> $roles</strong>, <span class="param-type"><span title="Resource\ResourceInterface|string|array">ResourceInterface|string|array</span></span><strong> $resources</strong>, <span class="param-type"><span title="string|array">string|array</span></span><strong> $privileges</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes "deny" restrictions from the ACL</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$roles</code> - </li>
                <li><code>$resources</code> - </li>
                <li><code>$privileges</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removeResource"/>
            <h4><span class="label public">public</span>removeResource<span style="font-size:90%;">( <span class="param-type"><span title="Resource\ResourceInterface|string">ResourceInterface|string</span></span><strong> $resource</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes a Resource and all of its children<pre>The $resource parameter can either be a Resource or a Resource identifier.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$resource</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removeResourceAll"/>
            <h4><span class="label public">public</span>removeResourceAll<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes all Resources</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removeRole"/>
            <h4><span class="label public">public</span>removeRole<span style="font-size:90%;">( <span class="param-type"><span title="Role\RoleInterface|string">RoleInterface|string</span></span><strong> $role</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes the Role from the registry<pre>The $role parameter can either be a Role or a Role identifier.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removeRoleAll"/>
            <h4><span class="label public">public</span>removeRoleAll<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes all Roles from the registry</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setRule"/>
            <h4><span class="label public">public</span>setRule<span style="font-size:90%;">( <span class="param-type">string</span><strong> $operation</strong>, <span class="param-type">string</span><strong> $type</strong>, <span class="param-type"><span title="Role\RoleInterface|string|array">RoleInterface|string|array</span></span><strong> $roles</strong>, <span class="param-type"><span title="Resource\ResourceInterface|string|array">ResourceInterface|string|array</span></span><strong> $resources</strong>, <span class="param-type"><span title="string|array">string|array</span></span><strong> $privileges</strong>, <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Assertion_AssertionInterface.xhtml">Zend\Permissions\Acl\Assertion\AssertionInterface</a></span><strong> $assert</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Performs operations on ACL rules<pre>The $operation parameter may be either OP_ADD or OP_REMOVE, depending on whether the
user wants to add or remove a rule, respectively:

OP_ADD specifics:

     A rule is added that would allow one or more Roles access to [certain $privileges
     upon] the specified Resource(s).

OP_REMOVE specifics:

     The rule is removed only in the context of the given Roles, Resources, and privileges.
     Existing rules to which the remove operation does not apply would remain in the
     ACL.

The $type parameter may be either TYPE_ALLOW or TYPE_DENY, depending on whether the
rule is intended to allow or deny permission, respectively.

The $roles and $resources parameters may be references to, or the string identifiers for,
existing Resources/Roles, or they may be passed as arrays of these - mixing string identifiers
and objects is ok - to indicate the Resources and Roles to which the rule applies. If either
$roles or $resources is null, then the rule applies to all Roles or all Resources, respectively.
Both may be null in order to work with the default rule of the ACL.

The $privileges parameter may be used to further specify that the rule applies only
to certain privileges upon the Resource(s) in question. This may be specified to be a single
privilege with a string, and multiple privileges may be specified as an array of strings.

If $assert is provided, then its assert() method must return true in order for
the rule to apply. If $assert is provided with $roles, $resources, and $privileges all
equal to null, then a rule having a type of:

     TYPE_ALLOW will imply a type of TYPE_DENY, and

     TYPE_DENY will imply a type of TYPE_ALLOW

when the rule's assertion fails. This is because the ACL needs to provide expected
behavior when an assertion upon the default ACL rule fails.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$operation</code> - </li>
                <li><code>$type</code> - </li>
                <li><code>$roles</code> - </li>
                <li><code>$resources</code> - </li>
                <li><code>$privileges</code> - </li>
                <li><code>$assert</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Provides a fluent interface</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRoleRegistry"/>
            <h4><span class="label protected">protected</span>getRoleRegistry<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the Role registry for this ACL<pre>If no Role registry has been created yet, a new default Role registry
is created and returned.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRuleType"/>
            <h4><span class="label protected">protected</span>getRuleType<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Resource_ResourceInterface.xhtml">Zend\Permissions\Acl\Resource\ResourceInterface</a></span><strong> $resource</strong>, <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Role_RoleInterface.xhtml">Zend\Permissions\Acl\Role\RoleInterface</a></span><strong> $role</strong>, <span class="param-type"><span title="null|string">null|string</span></span><strong> $privilege</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the rule type associated with the specified Resource, Role, and privilege combination.<pre>If a rule does not exist or its attached assertion fails, which means that
the rule is not applicable, then this method returns null. Otherwise, the
rule type applies and is returned as either TYPE_ALLOW or TYPE_DENY.

If $resource or $role is null, then this means that the rule must apply to
all Resources or Roles, respectively.

If $privilege is null, then the rule must apply to all privileges.

If all three parameters are null, then the default ACL rule type is returned,
based on whether its assertion method passes.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$resource</code> - </li>
                <li><code>$role</code> - </li>
                <li><code>$privilege</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRules"/>
            <h4><span class="label protected">protected</span>getRules<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Resource_ResourceInterface.xhtml">Zend\Permissions\Acl\Resource\ResourceInterface</a></span><strong> $resource</strong>, <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Role_RoleInterface.xhtml">Zend\Permissions\Acl\Role\RoleInterface</a></span><strong> $role</strong>, <span class="param-type">boolean</span><strong> $create</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the rules associated with a Resource and a Role, or null if no such rules exist<pre>If either $resource or $role is null, this means that the rules returned are for all Resources or all Roles,
respectively. Both can be null to return the default rule set for all Resources and all Roles.

If the $create parameter is true, then a rule set is first created and then returned to the caller.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$resource</code> - </li>
                <li><code>$role</code> - </li>
                <li><code>$create</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="roleDFSAllPrivileges"/>
            <h4><span class="label protected">protected</span>roleDFSAllPrivileges<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Role_RoleInterface.xhtml">Zend\Permissions\Acl\Role\RoleInterface</a></span><strong> $role</strong>, <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Resource_ResourceInterface.xhtml">Zend\Permissions\Acl\Resource\ResourceInterface</a></span><strong> $resource</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Performs a depth-first search of the Role DAG, starting at $role, in order to find a rule allowing/denying $role access to all privileges upon $resource<pre>This method returns true if a rule is found and allows access. If a rule exists and denies access,
then this method returns false. If no applicable rule is found, then this method returns null.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
                <li><code>$resource</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="roleDFSOnePrivilege"/>
            <h4><span class="label protected">protected</span>roleDFSOnePrivilege<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Role_RoleInterface.xhtml">Zend\Permissions\Acl\Role\RoleInterface</a></span><strong> $role</strong>, <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Resource_ResourceInterface.xhtml">Zend\Permissions\Acl\Resource\ResourceInterface</a></span><strong> $resource</strong>, <span class="param-type">string</span><strong> $privilege</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Performs a depth-first search of the Role DAG, starting at $role, in order to find a rule allowing/denying $role access to a $privilege upon $resource<pre>This method returns true if a rule is found and allows access. If a rule exists and denies access,
then this method returns false. If no applicable rule is found, then this method returns null.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
                <li><code>$resource</code> - </li>
                <li><code>$privilege</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="roleDFSVisitAllPrivileges"/>
            <h4><span class="label protected">protected</span>roleDFSVisitAllPrivileges<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Role_RoleInterface.xhtml">Zend\Permissions\Acl\Role\RoleInterface</a></span><strong> $role</strong>, <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Resource_ResourceInterface.xhtml">Zend\Permissions\Acl\Resource\ResourceInterface</a></span><strong> $resource</strong>, <span class="param-type">array</span><strong> &amp;$dfs</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Visits an $role in order to look for a rule allowing/denying $role access to all privileges upon $resource<pre>This method returns true if a rule is found and allows access. If a rule exists and denies access,
then this method returns false. If no applicable rule is found, then this method returns null.

This method is used by the internal depth-first search algorithm and may modify the DFS data structure.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
                <li><code>$resource</code> - </li>
                <li><code>$dfs</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="roleDFSVisitOnePrivilege"/>
            <h4><span class="label protected">protected</span>roleDFSVisitOnePrivilege<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Role_RoleInterface.xhtml">Zend\Permissions\Acl\Role\RoleInterface</a></span><strong> $role</strong>, <span class="param-type"><a href="../interfaces/Zend_Permissions_Acl_Resource_ResourceInterface.xhtml">Zend\Permissions\Acl\Resource\ResourceInterface</a></span><strong> $resource</strong>, <span class="param-type">string</span><strong> $privilege</strong>, <span class="param-type">array</span><strong> &amp;$dfs</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Visits an $role in order to look for a rule allowing/denying $role access to a $privilege upon $resource<pre>This method returns true if a rule is found and allows access. If a rule exists and denies access,
then this method returns false. If no applicable rule is found, then this method returns null.

This method is used by the internal depth-first search algorithm and may modify the DFS data structure.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - </li>
                <li><code>$resource</code> - </li>
                <li><code>$privilege</code> - </li>
                <li><code>$dfs</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
