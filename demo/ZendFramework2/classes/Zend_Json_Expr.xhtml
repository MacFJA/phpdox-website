<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Json\Expr - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#expression">$expression</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#__toString">__toString</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Json\</span>Expr</h2>
        <div class="file-notice">
          <p>Class for Zend_Json encode method.</p>
          <p>
            <pre>This class simply holds a string with a native Javascript Expression,
so objects | arrays to be encoded with Zend_Json can contain native
Javascript Expressions.

Example:
&lt;code&gt;
$foo = array(
    'integer'  =&gt;9,
    'string'   =&gt;'test string',
    'function' =&gt; Zend_Json_Expr(
        'function() { window.alert("javascript function encoded by Zend_Json") }'
    ),
);

Zend_Json::encode($foo, false, array('enableJsonExprFinder' =&gt; true));
// it will returns json encoded string:
// {"integer":9,"string":"test string","function":function() {window.alert("javascript function encoded by Zend_Json")}}
&lt;/code&gt;</pre>
          </p>
        </div>
        <ul class="fileinfos"/>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="expression"/>
            <h4><span class="label protected">protected</span>string 
                
                $expression</h4>
            <ul class="varlist">
              <li>Storage for javascript expression.</li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expression</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expression</code> - the expression to hold.</li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="__toString"/>
            <h4><span class="label public">public</span>__toString<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Cast to string</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>holded javascript expression.</li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
