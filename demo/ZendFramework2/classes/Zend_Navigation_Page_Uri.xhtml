<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Navigation\Page\Uri - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#uri">$uri</a>
          </li>
          <li>
            <a href="#label">$label</a>
          </li>
          <li>
            <a href="#fragment">$fragment</a>
          </li>
          <li>
            <a href="#id">$id</a>
          </li>
          <li>
            <a href="#class">$class</a>
          </li>
          <li>
            <a href="#title">$title</a>
          </li>
          <li>
            <a href="#target">$target</a>
          </li>
          <li>
            <a href="#rel">$rel</a>
          </li>
          <li>
            <a href="#rev">$rev</a>
          </li>
          <li>
            <a href="#order">$order</a>
          </li>
          <li>
            <a href="#resource">$resource</a>
          </li>
          <li>
            <a href="#privilege">$privilege</a>
          </li>
          <li>
            <a href="#active">$active</a>
          </li>
          <li>
            <a href="#visible">$visible</a>
          </li>
          <li>
            <a href="#parent">$parent</a>
          </li>
          <li>
            <a href="#properties">$properties</a>
          </li>
          <li>
            <a href="#pages">$pages</a>
          </li>
          <li>
            <a href="#index">$index</a>
          </li>
          <li>
            <a href="#dirtyIndex">$dirtyIndex</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__call">__call</a>
          </li>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#__get">__get</a>
          </li>
          <li>
            <a href="#__isset">__isset</a>
          </li>
          <li>
            <a href="#__set">__set</a>
          </li>
          <li>
            <a href="#__toString">__toString</a>
          </li>
          <li>
            <a href="#__unset">__unset</a>
          </li>
          <li>
            <a href="#addPage">addPage</a>
          </li>
          <li>
            <a href="#addPages">addPages</a>
          </li>
          <li>
            <a href="#addRel">addRel</a>
          </li>
          <li>
            <a href="#addRev">addRev</a>
          </li>
          <li>
            <a href="#count">count</a>
          </li>
          <li>
            <a href="#current">current</a>
          </li>
          <li>
            <a href="#factory">factory</a>
          </li>
          <li>
            <a href="#findAllBy">findAllBy</a>
          </li>
          <li>
            <a href="#findBy">findBy</a>
          </li>
          <li>
            <a href="#findOneBy">findOneBy</a>
          </li>
          <li>
            <a href="#get">get</a>
          </li>
          <li>
            <a href="#getActive">getActive</a>
          </li>
          <li>
            <a href="#getChildren">getChildren</a>
          </li>
          <li>
            <a href="#getClass">getClass</a>
          </li>
          <li>
            <a href="#getCustomProperties">getCustomProperties</a>
          </li>
          <li>
            <a href="#getDefinedRel">getDefinedRel</a>
          </li>
          <li>
            <a href="#getDefinedRev">getDefinedRev</a>
          </li>
          <li>
            <a href="#getFragment">getFragment</a>
          </li>
          <li>
            <a href="#getHref">getHref</a>
          </li>
          <li>
            <a href="#getHref">getHref</a>
          </li>
          <li>
            <a href="#getId">getId</a>
          </li>
          <li>
            <a href="#getLabel">getLabel</a>
          </li>
          <li>
            <a href="#getOrder">getOrder</a>
          </li>
          <li>
            <a href="#getPages">getPages</a>
          </li>
          <li>
            <a href="#getParent">getParent</a>
          </li>
          <li>
            <a href="#getPrivilege">getPrivilege</a>
          </li>
          <li>
            <a href="#getRel">getRel</a>
          </li>
          <li>
            <a href="#getResource">getResource</a>
          </li>
          <li>
            <a href="#getRev">getRev</a>
          </li>
          <li>
            <a href="#getTarget">getTarget</a>
          </li>
          <li>
            <a href="#getTitle">getTitle</a>
          </li>
          <li>
            <a href="#getUri">getUri</a>
          </li>
          <li>
            <a href="#getVisible">getVisible</a>
          </li>
          <li>
            <a href="#hasChildren">hasChildren</a>
          </li>
          <li>
            <a href="#hasPage">hasPage</a>
          </li>
          <li>
            <a href="#hasPages">hasPages</a>
          </li>
          <li>
            <a href="#hashCode">hashCode</a>
          </li>
          <li>
            <a href="#init">init</a>
          </li>
          <li>
            <a href="#isActive">isActive</a>
          </li>
          <li>
            <a href="#isVisible">isVisible</a>
          </li>
          <li>
            <a href="#key">key</a>
          </li>
          <li>
            <a href="#next">next</a>
          </li>
          <li>
            <a href="#normalizePropertyName">normalizePropertyName</a>
          </li>
          <li>
            <a href="#notifyOrderUpdated">notifyOrderUpdated</a>
          </li>
          <li>
            <a href="#removePage">removePage</a>
          </li>
          <li>
            <a href="#removePages">removePages</a>
          </li>
          <li>
            <a href="#removeRel">removeRel</a>
          </li>
          <li>
            <a href="#removeRev">removeRev</a>
          </li>
          <li>
            <a href="#rewind">rewind</a>
          </li>
          <li>
            <a href="#set">set</a>
          </li>
          <li>
            <a href="#setActive">setActive</a>
          </li>
          <li>
            <a href="#setClass">setClass</a>
          </li>
          <li>
            <a href="#setFragment">setFragment</a>
          </li>
          <li>
            <a href="#setId">setId</a>
          </li>
          <li>
            <a href="#setLabel">setLabel</a>
          </li>
          <li>
            <a href="#setOptions">setOptions</a>
          </li>
          <li>
            <a href="#setOrder">setOrder</a>
          </li>
          <li>
            <a href="#setPages">setPages</a>
          </li>
          <li>
            <a href="#setParent">setParent</a>
          </li>
          <li>
            <a href="#setPrivilege">setPrivilege</a>
          </li>
          <li>
            <a href="#setRel">setRel</a>
          </li>
          <li>
            <a href="#setResource">setResource</a>
          </li>
          <li>
            <a href="#setRev">setRev</a>
          </li>
          <li>
            <a href="#setTarget">setTarget</a>
          </li>
          <li>
            <a href="#setTitle">setTitle</a>
          </li>
          <li>
            <a href="#setUri">setUri</a>
          </li>
          <li>
            <a href="#setVisible">setVisible</a>
          </li>
          <li>
            <a href="#sort">sort</a>
          </li>
          <li>
            <a href="#toArray">toArray</a>
          </li>
          <li>
            <a href="#toArray">toArray</a>
          </li>
          <li>
            <a href="#toArray">toArray</a>
          </li>
          <li>
            <a href="#valid">valid</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Navigation\Page\</span>Uri</h2>
        <div class="file-notice">
          <p>Represents a page that is defined by specifying a URI</p>
        </div>
        <ul class="fileinfos"/>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="uri"/>
            <h4><span class="label protected">protected</span>object 
                
                $uri</h4>
            <ul class="varlist">
              <li>Page URI</li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><span title="array|Traversable">array|Traversable</span></span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Page constructor</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$options</code> - [optional] page options. Default is</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if invalid options are given</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="__call"/>
            <h4><span class="label public">public</span>__call<span style="font-size:90%;">( <span class="param-type">string</span><strong> $method</strong>, <span class="param-type">array</span><strong> $arguments</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Magic overload: Proxy calls to finder methods<pre>Examples of finder calls:
&lt;code&gt;
// METHOD                    // SAME AS
$nav-&gt;findByLabel('foo');    // $nav-&gt;findOneBy('label', 'foo');
$nav-&gt;findOneByLabel('foo'); // $nav-&gt;findOneBy('label', 'foo');
$nav-&gt;findAllByClass('foo'); // $nav-&gt;findAllBy('class', 'foo');
&lt;/code&gt;</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$method</code> - method name</li>
                <li><code>$arguments</code> - method arguments</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\BadMethodCallException  if method does not exist</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="__get"/>
            <h4><span class="label public">public</span>__get<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a property, or null if it doesn't exist<pre>Magic overload for enabling &lt;code&gt;$page-&gt;propname&lt;/code&gt;.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - property name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>property value or null</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if property name is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="__isset"/>
            <h4><span class="label public">public</span>__isset<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if a property is set<pre>Magic overload for enabling &lt;code&gt;isset($page-&gt;propname)&lt;/code&gt;.

Returns true if the property is native (id, class, title, etc), and
true or false if it's a custom property (depending on whether the
property actually is set).</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - property name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether the given property exists</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="__set"/>
            <h4><span class="label public">public</span>__set<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a custom property<pre>Magic overload for enabling &lt;code&gt;$page-&gt;propname = $value&lt;/code&gt;.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - property name</li>
                <li><code>$value</code> - value to set</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if property name is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="__toString"/>
            <h4><span class="label public">public</span>__toString<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns page label<pre>Magic overload for enabling &lt;code&gt;echo $page&lt;/code&gt;.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page label</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="__unset"/>
            <h4><span class="label public">public</span>__unset<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Unsets the given custom property<pre>Magic overload for enabling &lt;code&gt;unset($page-&gt;propname)&lt;/code&gt;.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - property name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException  if the property is native</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addPage"/>
            <h4><span class="label public">public</span>addPage<span style="font-size:90%;">( <span class="param-type"><span title="Page\AbstractPage|array|Traversable">AbstractPage|array|Traversable</span></span><strong> $page</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a page to the container<pre>This method will inject the container as the given page's parent by
calling .
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to add</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if page is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addPages"/>
            <h4><span class="label public">public</span>addPages<span style="font-size:90%;">( <span class="param-type"><span title="array|Traversable|AbstractContainer">array|Traversable|AbstractContainer</span></span><strong> $pages</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds several pages at once</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$pages</code> - pages to add</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if $pages is not array,</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addRel"/>
            <h4><span class="label public">public</span>addRel<span style="font-size:90%;">( <span class="param-type">string</span><strong> $relation</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a forward relation to the page</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$relation</code> - relation name (e.g. alternate, glossary,</li>
                <li><code>$value</code> - value to set for relation</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addRev"/>
            <h4><span class="label public">public</span>addRev<span style="font-size:90%;">( <span class="param-type">string</span><strong> $relation</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Adds a reverse relation to the page</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$relation</code> - relation name (e.g. alternate, glossary,</li>
                <li><code>$value</code> - value to set for relation</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="count"/>
            <h4><span class="label public">public</span>count<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns number of pages in container<pre>Implements Countable interface.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>number of pages in the container</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="current"/>
            <h4><span class="label public">public</span>current<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns current page<pre>Implements RecursiveIterator interface.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>current page or null</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\OutOfBoundsException  if the index is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="factory"/>
            <h4><span class="label true">true</span><span class="label public">public</span>factory<span style="font-size:90%;">( <span class="param-type"><span title="array|Traversable">array|Traversable</span></span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Factory for Zend_Navigation_Page classes<pre>A specific type to construct can be specified by specifying the key
'type' in $options. If type is 'uri' or 'mvc', the type will be resolved
to Zend_Navigation_Page_Uri or Zend_Navigation_Page_Mvc. Any other value
for 'type' will be considered the full name of the class to construct.
A valid custom page class must extend Zend_Navigation_Page.

If 'type' is not given, the type of page to construct will be determined
by the following rules:
- If $options contains either of the keys 'action', 'controller',
  or 'route', a Zend_Navigation_Page_Mvc page will be created.
- If $options contains the key 'uri', a Zend_Navigation_Page_Uri page
  will be created.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$options</code> - options used for creating page</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>a page instance</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if $options is not</code>
                </li>
                <li>
                  <code>Exception\InvalidArgumentException if 'type' is specified</code>
                </li>
                <li>
                  <code>Exception\InvalidArgumentException if something goes wrong</code>
                </li>
                <li>
                  <code>Exception\InvalidArgumentException if 'type' is given, and</code>
                </li>
                <li>
                  <code>Exception\InvalidArgumentException if unable to determine</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="findAllBy"/>
            <h4><span class="label public">public</span>findAllBy<span style="font-size:90%;">( <span class="param-type">string</span><strong> $property</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns all child pages matching $property == $value, or an empty array if no pages are found</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$property</code> - name of property to match against</li>
                <li><code>$value</code> - value to match property against</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>array containing only Page\AbstractPage instances</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="findBy"/>
            <h4><span class="label public">public</span>findBy<span style="font-size:90%;">( <span class="param-type">string</span><strong> $property</strong>, <span class="param-type">mixed</span><strong> $value</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $all</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns page(s) matching $property == $value</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$property</code> - name of property to match against</li>
                <li><code>$value</code> - value to match property against</li>
                <li><code>$all</code> - [optional] whether an array of all matching</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>matching page or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="findOneBy"/>
            <h4><span class="label public">public</span>findOneBy<span style="font-size:90%;">( <span class="param-type">string</span><strong> $property</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a child page matching $property == $value, or null if not found</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$property</code> - name of property to match against</li>
                <li><code>$value</code> - value to match property against</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>matching page or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="get"/>
            <h4><span class="label public">public</span>get<span style="font-size:90%;">( <span class="param-type">string</span><strong> $property</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the value of the given property<pre>If the given property is native (id, class, title, etc), the matching
get method will be used. Otherwise, it will return the matching custom
property, or null if not found.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$property</code> - property name</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>the property's value or null</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if property name is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getActive"/>
            <h4><span class="label public">public</span>getActive<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $recursive</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Proxy to isActive()</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$recursive</code> - [optional] whether page should be considered</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether page should be considered active</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getChildren"/>
            <h4><span class="label public">public</span>getChildren<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the child container.<pre>Implements RecursiveIterator interface.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getClass"/>
            <h4><span class="label public">public</span>getClass<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns page class (CSS)</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page's CSS class or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getCustomProperties"/>
            <h4><span class="label public">public</span>getCustomProperties<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns custom properties as an array</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>an array containing custom properties</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDefinedRel"/>
            <h4><span class="label public">public</span>getDefinedRel<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns an array containing the defined forward relations</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>defined forward relations</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDefinedRev"/>
            <h4><span class="label public">public</span>getDefinedRev<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns an array containing the defined reverse relations</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>defined reverse relations</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getFragment"/>
            <h4><span class="label public">public</span>getFragment<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns fragment identifier</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fragment identifier</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getHref"/>
            <h4><span class="label public">public</span>getHref<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns href for this page<pre>Includes the fragment identifier if it is set.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getHref"/>
            <h4><span class="label true">true</span><span class="label public">public</span>getHref<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns href for this page</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>the page's href</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getId"/>
            <h4><span class="label public">public</span>getId<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns page id</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page id or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getLabel"/>
            <h4><span class="label public">public</span>getLabel<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns page label</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page label or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getOrder"/>
            <h4><span class="label public">public</span>getOrder<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns page order used in parent container</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page order or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPages"/>
            <h4><span class="label public">public</span>getPages<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns pages in the container</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>array of Page\AbstractPage instances</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getParent"/>
            <h4><span class="label public">public</span>getParent<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns parent container</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>parent container or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPrivilege"/>
            <h4><span class="label public">public</span>getPrivilege<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns ACL privilege associated with this page</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>ACL privilege or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRel"/>
            <h4><span class="label public">public</span>getRel<span style="font-size:90%;">( <span class="param-type">string</span><strong> $relation</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the page's forward links to other pages<pre>This method returns an associative array of forward links to other pages,
where each element's key is the name of the relation (e.g. alternate,
prev, next, help, etc), and the value is a mixed value that could somehow
be considered a page.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$relation</code> - [optional] name of relation to return. If not</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>an array of relations. If $relation is not</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getResource"/>
            <h4><span class="label public">public</span>getResource<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns ACL resource associated with this page</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>ACL resource or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRev"/>
            <h4><span class="label public">public</span>getRev<span style="font-size:90%;">( <span class="param-type">string</span><strong> $relation</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the page's reverse links to other pages<pre>This method returns an associative array of forward links to other pages,
where each element's key is the name of the relation (e.g. alternate,
prev, next, help, etc), and the value is a mixed value that could somehow
be considered a page.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$relation</code> - [optional] name of relation to return. If not</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>an array of relations. If $relation is not</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTarget"/>
            <h4><span class="label public">public</span>getTarget<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns page target</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page target or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTitle"/>
            <h4><span class="label public">public</span>getTitle<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns page title</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page title or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getUri"/>
            <h4><span class="label public">public</span>getUri<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns URI</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getVisible"/>
            <h4><span class="label public">public</span>getVisible<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $recursive</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Proxy to isVisible()<pre>Returns a boolean value indicating whether the page is visible</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$recursive</code> - [optional] whether page should be considered</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether page should be considered visible</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasChildren"/>
            <h4><span class="label public">public</span>hasChildren<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Proxy to hasPages()<pre>Implements RecursiveIterator interface.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether container has any pages</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasPage"/>
            <h4><span class="label public">public</span>hasPage<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $recursive</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if the container has the given page</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to look for</li>
                <li><code>$recursive</code> - [optional] whether to search recursively.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether page is in container</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasPages"/>
            <h4><span class="label public">public</span>hasPages<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns true if container contains any pages</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether container has any pages</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hashCode"/>
            <h4><span class="label true">true</span><span class="label public">public</span>hashCode<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a hash code value for the page</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>a hash code value for this page</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isActive"/>
            <h4><span class="label public">public</span>isActive<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $recursive</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether page should be considered active or not</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$recursive</code> - [optional] whether page should be considered</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether page should be considered active</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isVisible"/>
            <h4><span class="label public">public</span>isVisible<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $recursive</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a boolean value indicating whether the page is visible</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$recursive</code> - [optional] whether page should be considered</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether page should be considered visible</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="key"/>
            <h4><span class="label public">public</span>key<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns hash code of current page<pre>Implements RecursiveIterator interface.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>hash code of current page</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="next"/>
            <h4><span class="label public">public</span>next<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Moves index pointer to next page in the container<pre>Implements RecursiveIterator interface.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="notifyOrderUpdated"/>
            <h4><span class="label public">public</span>notifyOrderUpdated<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Notifies container that the order of pages are updated</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removePage"/>
            <h4><span class="label public">public</span>removePage<span style="font-size:90%;">( <span class="param-type"><span title="Page\AbstractPage|int">AbstractPage|int</span></span><strong> $page</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes the given page from the container</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to remove, either a page</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether the removal was successful</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removePages"/>
            <h4><span class="label public">public</span>removePages<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes all pages in container</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removeRel"/>
            <h4><span class="label public">public</span>removeRel<span style="font-size:90%;">( <span class="param-type">string</span><strong> $relation</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes a forward relation from the page</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$relation</code> - name of relation to remove</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removeRev"/>
            <h4><span class="label public">public</span>removeRev<span style="font-size:90%;">( <span class="param-type">string</span><strong> $relation</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Removes a reverse relation from the page</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$relation</code> - name of relation to remove</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="rewind"/>
            <h4><span class="label public">public</span>rewind<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets index pointer to first page in the container<pre>Implements RecursiveIterator interface.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="set"/>
            <h4><span class="label public">public</span>set<span style="font-size:90%;">( <span class="param-type">string</span><strong> $property</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the given property<pre>If the given property is native (id, class, title, etc), the matching
set method will be used. Otherwise, it will be set as a custom property.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$property</code> - property name</li>
                <li><code>$value</code> - value to set</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if property name is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setActive"/>
            <h4><span class="label public">public</span>setActive<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $active</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether page should be considered active or not</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$active</code> - [optional] whether page should be</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setClass"/>
            <h4><span class="label public">public</span>setClass<span style="font-size:90%;">( <span class="param-type"><span title="string|null">string|null</span></span><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets page CSS class</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - [optional] CSS class to set. Default</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException  if not given string or null</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFragment"/>
            <h4><span class="label public">public</span>setFragment<span style="font-size:90%;">( <span class="param-type">string</span><strong> $fragment</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets a fragment identifier</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$fragment</code> - new fragment identifier</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if empty/no string is given</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setId"/>
            <h4><span class="label public">public</span>setId<span style="font-size:90%;">( <span class="param-type"><span title="string|null">string|null</span></span><strong> $id</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets page id</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$id</code> - [optional] id to set. Default is null,</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException  if not given string or null</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setLabel"/>
            <h4><span class="label public">public</span>setLabel<span style="font-size:90%;">( <span class="param-type">string</span><strong> $label</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets page label</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$label</code> - new page label</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if empty/no string is given</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setOptions"/>
            <h4><span class="label public">public</span>setOptions<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $options</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets page properties using options from an associative array<pre>Each key in the array corresponds to the according set*() method, and
each word is separated by underscores, e.g. the option 'target'
corresponds to setTarget(), and the option 'reset_params' corresponds to
the method setResetParams().</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$options</code> - associative array of options to set</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException  if invalid options are given</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setOrder"/>
            <h4><span class="label public">public</span>setOrder<span style="font-size:90%;">( <span class="param-type">int</span><strong> $order</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets page order to use in parent container</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$order</code> - [optional] page order in container.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if order is not integer or null</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setPages"/>
            <h4><span class="label public">public</span>setPages<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $pages</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets pages this container should have, removing existing pages</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$pages</code> - pages to set</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setParent"/>
            <h4><span class="label public">public</span>setParent<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_AbstractContainer.xhtml">Zend\Navigation\AbstractContainer</a></span><strong> $parent</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets parent container</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$parent</code> - [optional] new parent to set.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setPrivilege"/>
            <h4><span class="label public">public</span>setPrivilege<span style="font-size:90%;">( <span class="param-type"><span title="string|null">string|null</span></span><strong> $privilege</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets ACL privilege associated with this page</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$privilege</code> - [optional] ACL privilege to associate</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setRel"/>
            <h4><span class="label public">public</span>setRel<span style="font-size:90%;">( <span class="param-type"><span title="array|Traversable">array|Traversable</span></span><strong> $relations</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the page's forward links to other pages<pre>This method expects an associative array of forward links to other pages,
where each element's key is the name of the relation (e.g. alternate,
prev, next, help, etc), and the value is a mixed value that could somehow
be considered a page.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$relations</code> - [optional] an associative array of</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if $relations is not an array</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setResource"/>
            <h4><span class="label public">public</span>setResource<span style="font-size:90%;">( <span class="param-type"><span title="string|AclResource">string|AclResource</span></span><strong> $resource</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets ACL resource associated with this page</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$resource</code> - [optional] resource to associate</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if $resource is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setRev"/>
            <h4><span class="label public">public</span>setRev<span style="font-size:90%;">( <span class="param-type"><span title="array|Traversable">array|Traversable</span></span><strong> $relations</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the page's reverse links to other pages<pre>This method expects an associative array of reverse links to other pages,
where each element's key is the name of the relation (e.g. alternate,
prev, next, help, etc), and the value is a mixed value that could somehow
be considered a page.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$relations</code> - [optional] an associative array of</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if $relations it not an array</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTarget"/>
            <h4><span class="label public">public</span>setTarget<span style="font-size:90%;">( <span class="param-type"><span title="string|null">string|null</span></span><strong> $target</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets page target</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$target</code> - [optional] target to set. Default is</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if target is not string or null</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTitle"/>
            <h4><span class="label public">public</span>setTitle<span style="font-size:90%;">( <span class="param-type">string</span><strong> $title</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets page title</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$title</code> - [optional] page title. Default is</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if not given string or null</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setUri"/>
            <h4><span class="label public">public</span>setUri<span style="font-size:90%;">( <span class="param-type">string</span><strong> $uri</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets page URI</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$uri</code> - page URI, must a string or null</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException  if $uri is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setVisible"/>
            <h4><span class="label public">public</span>setVisible<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $visible</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether the page should be visible or not</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$visible</code> - [optional] whether page should be</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="toArray"/>
            <h4><span class="label public">public</span>toArray<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns an array representation of the page</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="toArray"/>
            <h4><span class="label public">public</span>toArray<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns an array representation of the page</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>associative array containing all page properties</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="toArray"/>
            <h4><span class="label public">public</span>toArray<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns an array representation of all pages in container</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="valid"/>
            <h4><span class="label public">public</span>valid<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if container index is valid<pre>Implements RecursiveIterator interface.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="init"/>
            <h4><span class="label protected">protected</span>init<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Initializes page (used by subclasses)</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="normalizePropertyName"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>normalizePropertyName<span style="font-size:90%;">( <span class="param-type">string</span><strong> $property</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Normalizes a property name</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$property</code> - property name to normalize</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>normalized property name</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="sort"/>
            <h4><span class="label protected">protected</span>sort<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sorts the page index according to page order</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
