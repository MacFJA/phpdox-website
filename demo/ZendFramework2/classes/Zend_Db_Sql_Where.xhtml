<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Db\Sql\Where - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#__get">__get</a>
          </li>
          <li>
            <a href="#addPredicate">addPredicate</a>
          </li>
          <li>
            <a href="#andPredicate">andPredicate</a>
          </li>
          <li>
            <a href="#between">between</a>
          </li>
          <li>
            <a href="#count">count</a>
          </li>
          <li>
            <a href="#equalTo">equalTo</a>
          </li>
          <li>
            <a href="#getExpressionData">getExpressionData</a>
          </li>
          <li>
            <a href="#getPredicates">getPredicates</a>
          </li>
          <li>
            <a href="#greaterThan">greaterThan</a>
          </li>
          <li>
            <a href="#greaterThanOrEqualTo">greaterThanOrEqualTo</a>
          </li>
          <li>
            <a href="#in">in</a>
          </li>
          <li>
            <a href="#isNotNull">isNotNull</a>
          </li>
          <li>
            <a href="#isNull">isNull</a>
          </li>
          <li>
            <a href="#lessThan">lessThan</a>
          </li>
          <li>
            <a href="#lessThanOrEqualTo">lessThanOrEqualTo</a>
          </li>
          <li>
            <a href="#like">like</a>
          </li>
          <li>
            <a href="#literal">literal</a>
          </li>
          <li>
            <a href="#nest">nest</a>
          </li>
          <li>
            <a href="#notEqualTo">notEqualTo</a>
          </li>
          <li>
            <a href="#orPredicate">orPredicate</a>
          </li>
          <li>
            <a href="#setUnnest">setUnnest</a>
          </li>
          <li>
            <a href="#unnest">unnest</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Db\Sql\</span>Where</h2>
        <div class="file-notice">
          <p/>
        </div>
        <ul class="fileinfos"/>
        <h3>Constants</h3>
        <ul class="varlist"/>
        <h3>Members</h3>
        <ul class="varlist"/>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $predicates</strong>, <span class="param-type">string</span><strong> $defaultCombination</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$predicates</code> - </li>
                <li><code>$defaultCombination</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="__get"/>
            <h4><span class="label public">public</span>__get<span style="font-size:90%;">( <span class="param-type">string</span><strong> $name</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Overloading<pre>Overloads "or", "and", "nest", and "unnest"</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$name</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addPredicate"/>
            <h4><span class="label public">public</span>addPredicate<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Db_Sql_Predicate_PredicateInterface.xhtml">Zend\Db\Sql\Predicate\PredicateInterface</a></span><strong> $predicate</strong>, <span class="param-type">string</span><strong> $combination</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Add predicate to set</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$predicate</code> - </li>
                <li><code>$combination</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="andPredicate"/>
            <h4><span class="label public">public</span>andPredicate<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Db_Sql_Predicate_PredicateInterface.xhtml">Zend\Db\Sql\Predicate\PredicateInterface</a></span><strong> $predicate</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Add predicate using AND operator</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$predicate</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="between"/>
            <h4><span class="label public">public</span>between<span style="font-size:90%;">( <span class="param-type">string</span><strong> $identifier</strong>, <span class="param-type"><span title="int|float|string">int|float|string</span></span><strong> $minValue</strong>, <span class="param-type"><span title="int|float|string">int|float|string</span></span><strong> $maxValue</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create "between" predicate<pre>Utilizes Between predicate</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$identifier</code> - </li>
                <li><code>$minValue</code> - </li>
                <li><code>$maxValue</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="count"/>
            <h4><span class="label public">public</span>count<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get count of attached predicates</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="equalTo"/>
            <h4><span class="label public">public</span>equalTo<span style="font-size:90%;">( <span class="param-type"><span title="int|float|bool|string">int|float|bool|string</span></span><strong> $left</strong>, <span class="param-type"><span title="int|float|bool|string">int|float|bool|string</span></span><strong> $right</strong>, <span class="param-type">string</span><strong> $leftType</strong>, <span class="param-type">string</span><strong> $rightType</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create "Equal To" predicate<pre>Utilizes Operator predicate</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$left</code> - </li>
                <li><code>$right</code> - </li>
                <li><code>$leftType</code> - TYPE_IDENTIFIER or TYPE_VALUE by default TYPE_IDENTIFIER {@see allowedTypes}</li>
                <li><code>$rightType</code> - TYPE_IDENTIFIER or TYPE_VALUE by default TYPE_VALUE {@see allowedTypes}</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getExpressionData"/>
            <h4><span class="label public">public</span>getExpressionData<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get predicate parts for where statement</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPredicates"/>
            <h4><span class="label public">public</span>getPredicates<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Return the predicates</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="greaterThan"/>
            <h4><span class="label public">public</span>greaterThan<span style="font-size:90%;">( <span class="param-type"><span title="int|float|bool|string">int|float|bool|string</span></span><strong> $left</strong>, <span class="param-type"><span title="int|float|bool|string">int|float|bool|string</span></span><strong> $right</strong>, <span class="param-type">string</span><strong> $leftType</strong>, <span class="param-type">string</span><strong> $rightType</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create "Greater Than" predicate<pre>Utilizes Operator predicate</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$left</code> - </li>
                <li><code>$right</code> - </li>
                <li><code>$leftType</code> - TYPE_IDENTIFIER or TYPE_VALUE by default TYPE_IDENTIFIER {@see allowedTypes}</li>
                <li><code>$rightType</code> - TYPE_IDENTIFIER or TYPE_VALUE by default TYPE_VALUE {@see allowedTypes}</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="greaterThanOrEqualTo"/>
            <h4><span class="label public">public</span>greaterThanOrEqualTo<span style="font-size:90%;">( <span class="param-type"><span title="int|float|bool|string">int|float|bool|string</span></span><strong> $left</strong>, <span class="param-type"><span title="int|float|bool|string">int|float|bool|string</span></span><strong> $right</strong>, <span class="param-type">string</span><strong> $leftType</strong>, <span class="param-type">string</span><strong> $rightType</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create "Greater Than Or Equal To" predicate<pre>Utilizes Operator predicate</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$left</code> - </li>
                <li><code>$right</code> - </li>
                <li><code>$leftType</code> - TYPE_IDENTIFIER or TYPE_VALUE by default TYPE_IDENTIFIER {@see allowedTypes}</li>
                <li><code>$rightType</code> - TYPE_IDENTIFIER or TYPE_VALUE by default TYPE_VALUE {@see allowedTypes}</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="in"/>
            <h4><span class="label public">public</span>in<span style="font-size:90%;">( <span class="param-type">string</span><strong> $identifier</strong>, <span class="param-type"><span title="array|Select">array|Select</span></span><strong> $valueSet</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create "in" predicate<pre>Utilizes In predicate</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$identifier</code> - </li>
                <li><code>$valueSet</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isNotNull"/>
            <h4><span class="label public">public</span>isNotNull<span style="font-size:90%;">( <span class="param-type">string</span><strong> $identifier</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create "IS NOT NULL" predicate<pre>Utilizes IsNotNull predicate</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$identifier</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isNull"/>
            <h4><span class="label public">public</span>isNull<span style="font-size:90%;">( <span class="param-type">string</span><strong> $identifier</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create "IS NULL" predicate<pre>Utilizes IsNull predicate</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$identifier</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="lessThan"/>
            <h4><span class="label public">public</span>lessThan<span style="font-size:90%;">( <span class="param-type"><span title="int|float|bool|string">int|float|bool|string</span></span><strong> $left</strong>, <span class="param-type"><span title="int|float|bool|string">int|float|bool|string</span></span><strong> $right</strong>, <span class="param-type">string</span><strong> $leftType</strong>, <span class="param-type">string</span><strong> $rightType</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create "Less Than" predicate<pre>Utilizes Operator predicate</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$left</code> - </li>
                <li><code>$right</code> - </li>
                <li><code>$leftType</code> - TYPE_IDENTIFIER or TYPE_VALUE by default TYPE_IDENTIFIER {@see allowedTypes}</li>
                <li><code>$rightType</code> - TYPE_IDENTIFIER or TYPE_VALUE by default TYPE_VALUE {@see allowedTypes}</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="lessThanOrEqualTo"/>
            <h4><span class="label public">public</span>lessThanOrEqualTo<span style="font-size:90%;">( <span class="param-type"><span title="int|float|bool|string">int|float|bool|string</span></span><strong> $left</strong>, <span class="param-type"><span title="int|float|bool|string">int|float|bool|string</span></span><strong> $right</strong>, <span class="param-type">string</span><strong> $leftType</strong>, <span class="param-type">string</span><strong> $rightType</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create "Less Than Or Equal To" predicate<pre>Utilizes Operator predicate</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$left</code> - </li>
                <li><code>$right</code> - </li>
                <li><code>$leftType</code> - TYPE_IDENTIFIER or TYPE_VALUE by default TYPE_IDENTIFIER {@see allowedTypes}</li>
                <li><code>$rightType</code> - TYPE_IDENTIFIER or TYPE_VALUE by default TYPE_VALUE {@see allowedTypes}</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="like"/>
            <h4><span class="label public">public</span>like<span style="font-size:90%;">( <span class="param-type">string</span><strong> $identifier</strong>, <span class="param-type">string</span><strong> $like</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create "Like" predicate<pre>Utilizes Like predicate</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$identifier</code> - </li>
                <li><code>$like</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="literal"/>
            <h4><span class="label public">public</span>literal<span style="font-size:90%;">( <span class="param-type">string</span><strong> $literal</strong>, <span class="param-type"><span title="int|float|bool|string|array">int|float|bool|string|array</span></span><strong> $parameter</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create "Literal" predicate<pre>Utilizes Like predicate</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$literal</code> - </li>
                <li><code>$parameter</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="nest"/>
            <h4><span class="label public">public</span>nest<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Begin nesting predicates</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="notEqualTo"/>
            <h4><span class="label public">public</span>notEqualTo<span style="font-size:90%;">( <span class="param-type"><span title="int|float|bool|string">int|float|bool|string</span></span><strong> $left</strong>, <span class="param-type"><span title="int|float|bool|string">int|float|bool|string</span></span><strong> $right</strong>, <span class="param-type">string</span><strong> $leftType</strong>, <span class="param-type">string</span><strong> $rightType</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create "Not Equal To" predicate<pre>Utilizes Operator predicate</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$left</code> - </li>
                <li><code>$right</code> - </li>
                <li><code>$leftType</code> - TYPE_IDENTIFIER or TYPE_VALUE by default TYPE_IDENTIFIER {@see allowedTypes}</li>
                <li><code>$rightType</code> - TYPE_IDENTIFIER or TYPE_VALUE by default TYPE_VALUE {@see allowedTypes}</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="orPredicate"/>
            <h4><span class="label public">public</span>orPredicate<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Db_Sql_Predicate_PredicateInterface.xhtml">Zend\Db\Sql\Predicate\PredicateInterface</a></span><strong> $predicate</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Add predicate using OR operator</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$predicate</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setUnnest"/>
            <h4><span class="label public">public</span>setUnnest<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Db_Sql_Predicate_Predicate.xhtml">Zend\Db\Sql\Predicate\Predicate</a></span><strong> $predicate</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Indicate what predicate will be unnested</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$predicate</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="unnest"/>
            <h4><span class="label public">public</span>unnest<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Indicate end of nested predicate</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
