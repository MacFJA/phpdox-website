<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Config\Processor\Constant - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#userOnly">$userOnly</a>
          </li>
          <li>
            <a href="#prefix">$prefix</a>
          </li>
          <li>
            <a href="#suffix">$suffix</a>
          </li>
          <li>
            <a href="#tokens">$tokens</a>
          </li>
          <li>
            <a href="#map">$map</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#addToken">addToken</a>
          </li>
          <li>
            <a href="#buildMap">buildMap</a>
          </li>
          <li>
            <a href="#getPrefix">getPrefix</a>
          </li>
          <li>
            <a href="#getSuffix">getSuffix</a>
          </li>
          <li>
            <a href="#getTokens">getTokens</a>
          </li>
          <li>
            <a href="#getTokens">getTokens</a>
          </li>
          <li>
            <a href="#getUserOnly">getUserOnly</a>
          </li>
          <li>
            <a href="#loadConstants">loadConstants</a>
          </li>
          <li>
            <a href="#process">process</a>
          </li>
          <li>
            <a href="#processValue">processValue</a>
          </li>
          <li>
            <a href="#setPrefix">setPrefix</a>
          </li>
          <li>
            <a href="#setSuffix">setSuffix</a>
          </li>
          <li>
            <a href="#setToken">setToken</a>
          </li>
          <li>
            <a href="#setTokens">setTokens</a>
          </li>
          <li>
            <a href="#setUserOnly">setUserOnly</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Config\Processor\</span>Constant</h2>
        <div class="file-notice">
          <p/>
        </div>
        <ul class="fileinfos"/>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Zend_Config_Processor_ProcessorInterface.xhtml">Zend\Config\Processor\ProcessorInterface</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="userOnly"/>
            <h4><span class="label protected">protected</span>object 
                
                $userOnly</h4>
            <ul class="varlist">
              <li>Replace only user-defined tokens</li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $userOnly</strong>, <span class="param-type">string</span><strong> $prefix</strong>, <span class="param-type">string</span><strong> $suffix</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constant Processor walks through a Config structure and replaces all PHP constants with their respective values</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$userOnly</code> - True to process only user-defined constants, false to process all PHP constants</li>
                <li><code>$prefix</code> - Optional prefix</li>
                <li><code>$suffix</code> - Optional suffix</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="addToken"/>
            <h4><span class="label public">public</span>addToken<span style="font-size:90%;">( <span class="param-type">string</span><strong> $token</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Add new token.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$token</code> - </li>
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getPrefix"/>
            <h4><span class="label public">public</span>getPrefix<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getSuffix"/>
            <h4><span class="label public">public</span>getSuffix<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTokens"/>
            <h4><span class="label public">public</span>getTokens<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get current token registry.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTokens"/>
            <h4><span class="label public">public</span>getTokens<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get current token registry.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getUserOnly"/>
            <h4><span class="label public">public</span>getUserOnly<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="loadConstants"/>
            <h4><span class="label public">public</span>loadConstants<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Load all currently defined constants into parser.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="process"/>
            <h4><span class="label public">public</span>process<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Config_Config.xhtml">Zend\Config\Config</a></span><strong> $config</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Process</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$config</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="processValue"/>
            <h4><span class="label public">public</span>processValue<span style="font-size:90%;">( <span class="param-type"/><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Process a single value</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setPrefix"/>
            <h4><span class="label public">public</span>setPrefix<span style="font-size:90%;">( <span class="param-type">string</span><strong> $prefix</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$prefix</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setSuffix"/>
            <h4><span class="label public">public</span>setSuffix<span style="font-size:90%;">( <span class="param-type">string</span><strong> $suffix</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$suffix</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setToken"/>
            <h4><span class="label public">public</span>setToken<span style="font-size:90%;">( <span class="param-type">string</span><strong> $token</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Add new token.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$token</code> - </li>
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTokens"/>
            <h4><span class="label public">public</span>setTokens<span style="font-size:90%;">( <span class="param-type"><span title="array|Config|Traversable">array|Config|Traversable</span></span><strong> $tokens</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set token registry.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$tokens</code> - Associative array of TOKEN =&gt; value</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setUserOnly"/>
            <h4><span class="label public">public</span>setUserOnly<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $userOnly</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Should we use only user-defined constants?</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$userOnly</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="buildMap"/>
            <h4><span class="label protected">protected</span>buildMap<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Build replacement map</li>
            </p>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
