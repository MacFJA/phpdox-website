<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\View\Helper\Navigation\Links - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Constants</h3>
        <ul>
          <li>
            <a href="#RENDER_ALTERNATE">RENDER_ALTERNATE</a>
          </li>
          <li>
            <a href="#RENDER_STYLESHEET">RENDER_STYLESHEET</a>
          </li>
          <li>
            <a href="#RENDER_START">RENDER_START</a>
          </li>
          <li>
            <a href="#RENDER_NEXT">RENDER_NEXT</a>
          </li>
          <li>
            <a href="#RENDER_PREV">RENDER_PREV</a>
          </li>
          <li>
            <a href="#RENDER_CONTENTS">RENDER_CONTENTS</a>
          </li>
          <li>
            <a href="#RENDER_INDEX">RENDER_INDEX</a>
          </li>
          <li>
            <a href="#RENDER_GLOSSARY">RENDER_GLOSSARY</a>
          </li>
          <li>
            <a href="#RENDER_COPYRIGHT">RENDER_COPYRIGHT</a>
          </li>
          <li>
            <a href="#RENDER_CHAPTER">RENDER_CHAPTER</a>
          </li>
          <li>
            <a href="#RENDER_SECTION">RENDER_SECTION</a>
          </li>
          <li>
            <a href="#RENDER_SUBSECTION">RENDER_SUBSECTION</a>
          </li>
          <li>
            <a href="#RENDER_APPENDIX">RENDER_APPENDIX</a>
          </li>
          <li>
            <a href="#RENDER_HELP">RENDER_HELP</a>
          </li>
          <li>
            <a href="#RENDER_BOOKMARK">RENDER_BOOKMARK</a>
          </li>
          <li>
            <a href="#RENDER_CUSTOM">RENDER_CUSTOM</a>
          </li>
          <li>
            <a href="#RENDER_ALL">RENDER_ALL</a>
          </li>
          <li>
            <a href="#EOL">EOL</a>
          </li>
        </ul>
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#RELATIONS">$RELATIONS</a>
          </li>
          <li>
            <a href="#renderFlag">$renderFlag</a>
          </li>
          <li>
            <a href="#root">$root</a>
          </li>
          <li>
            <a href="#serviceLocator">$serviceLocator</a>
          </li>
          <li>
            <a href="#container">$container</a>
          </li>
          <li>
            <a href="#minDepth">$minDepth</a>
          </li>
          <li>
            <a href="#maxDepth">$maxDepth</a>
          </li>
          <li>
            <a href="#indent">$indent</a>
          </li>
          <li>
            <a href="#acl">$acl</a>
          </li>
          <li>
            <a href="#renderInvisible">$renderInvisible</a>
          </li>
          <li>
            <a href="#role">$role</a>
          </li>
          <li>
            <a href="#useAcl">$useAcl</a>
          </li>
          <li>
            <a href="#translator">$translator</a>
          </li>
          <li>
            <a href="#translatorTextDomain">$translatorTextDomain</a>
          </li>
          <li>
            <a href="#translatorEnabled">$translatorEnabled</a>
          </li>
          <li>
            <a href="#defaultAcl">$defaultAcl</a>
          </li>
          <li>
            <a href="#defaultRole">$defaultRole</a>
          </li>
          <li>
            <a href="#closingBracket">$closingBracket</a>
          </li>
          <li>
            <a href="#view">$view</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__call">__call</a>
          </li>
          <li>
            <a href="#__call">__call</a>
          </li>
          <li>
            <a href="#__invoke">__invoke</a>
          </li>
          <li>
            <a href="#__toString">__toString</a>
          </li>
          <li>
            <a href="#accept">accept</a>
          </li>
          <li>
            <a href="#acceptAcl">acceptAcl</a>
          </li>
          <li>
            <a href="#convertToPages">convertToPages</a>
          </li>
          <li>
            <a href="#findActive">findActive</a>
          </li>
          <li>
            <a href="#findAllRelations">findAllRelations</a>
          </li>
          <li>
            <a href="#findFromProperty">findFromProperty</a>
          </li>
          <li>
            <a href="#findFromSearch">findFromSearch</a>
          </li>
          <li>
            <a href="#findRelation">findRelation</a>
          </li>
          <li>
            <a href="#findRoot">findRoot</a>
          </li>
          <li>
            <a href="#getAcl">getAcl</a>
          </li>
          <li>
            <a href="#getClosingBracket">getClosingBracket</a>
          </li>
          <li>
            <a href="#getContainer">getContainer</a>
          </li>
          <li>
            <a href="#getIndent">getIndent</a>
          </li>
          <li>
            <a href="#getMaxDepth">getMaxDepth</a>
          </li>
          <li>
            <a href="#getMinDepth">getMinDepth</a>
          </li>
          <li>
            <a href="#getRenderFlag">getRenderFlag</a>
          </li>
          <li>
            <a href="#getRenderInvisible">getRenderInvisible</a>
          </li>
          <li>
            <a href="#getRole">getRole</a>
          </li>
          <li>
            <a href="#getServiceLocator">getServiceLocator</a>
          </li>
          <li>
            <a href="#getTranslator">getTranslator</a>
          </li>
          <li>
            <a href="#getTranslatorTextDomain">getTranslatorTextDomain</a>
          </li>
          <li>
            <a href="#getUseAcl">getUseAcl</a>
          </li>
          <li>
            <a href="#getView">getView</a>
          </li>
          <li>
            <a href="#getWhitespace">getWhitespace</a>
          </li>
          <li>
            <a href="#hasAcl">hasAcl</a>
          </li>
          <li>
            <a href="#hasContainer">hasContainer</a>
          </li>
          <li>
            <a href="#hasRole">hasRole</a>
          </li>
          <li>
            <a href="#hasTranslator">hasTranslator</a>
          </li>
          <li>
            <a href="#htmlAttribs">htmlAttribs</a>
          </li>
          <li>
            <a href="#htmlAttribs">htmlAttribs</a>
          </li>
          <li>
            <a href="#htmlify">htmlify</a>
          </li>
          <li>
            <a href="#isTranslatorEnabled">isTranslatorEnabled</a>
          </li>
          <li>
            <a href="#isXhtml">isXhtml</a>
          </li>
          <li>
            <a href="#normalizeId">normalizeId</a>
          </li>
          <li>
            <a href="#normalizeId">normalizeId</a>
          </li>
          <li>
            <a href="#parseContainer">parseContainer</a>
          </li>
          <li>
            <a href="#render">render</a>
          </li>
          <li>
            <a href="#renderLink">renderLink</a>
          </li>
          <li>
            <a href="#searchRelChapter">searchRelChapter</a>
          </li>
          <li>
            <a href="#searchRelNext">searchRelNext</a>
          </li>
          <li>
            <a href="#searchRelPrev">searchRelPrev</a>
          </li>
          <li>
            <a href="#searchRelSection">searchRelSection</a>
          </li>
          <li>
            <a href="#searchRelStart">searchRelStart</a>
          </li>
          <li>
            <a href="#searchRelSubsection">searchRelSubsection</a>
          </li>
          <li>
            <a href="#searchRevSection">searchRevSection</a>
          </li>
          <li>
            <a href="#searchRevSubsection">searchRevSubsection</a>
          </li>
          <li>
            <a href="#setAcl">setAcl</a>
          </li>
          <li>
            <a href="#setContainer">setContainer</a>
          </li>
          <li>
            <a href="#setDefaultAcl">setDefaultAcl</a>
          </li>
          <li>
            <a href="#setDefaultRole">setDefaultRole</a>
          </li>
          <li>
            <a href="#setIndent">setIndent</a>
          </li>
          <li>
            <a href="#setMaxDepth">setMaxDepth</a>
          </li>
          <li>
            <a href="#setMinDepth">setMinDepth</a>
          </li>
          <li>
            <a href="#setRenderFlag">setRenderFlag</a>
          </li>
          <li>
            <a href="#setRenderInvisible">setRenderInvisible</a>
          </li>
          <li>
            <a href="#setRole">setRole</a>
          </li>
          <li>
            <a href="#setServiceLocator">setServiceLocator</a>
          </li>
          <li>
            <a href="#setTranslator">setTranslator</a>
          </li>
          <li>
            <a href="#setTranslatorEnabled">setTranslatorEnabled</a>
          </li>
          <li>
            <a href="#setTranslatorTextDomain">setTranslatorTextDomain</a>
          </li>
          <li>
            <a href="#setUseAcl">setUseAcl</a>
          </li>
          <li>
            <a href="#setView">setView</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\View\Helper\Navigation\</span>Links</h2>
        <div class="file-notice">
          <p>Helper for printing &lt;link&gt; elements</p>
        </div>
        <ul class="fileinfos"/>
        <h3>Constants</h3>
        <ul class="varlist">
          <li><a name="RENDER_ALTERNATE"/>RENDER_ALTERNATE = 0x0001<hr/></li>
          <li><a name="RENDER_STYLESHEET"/>RENDER_STYLESHEET = 0x0002<hr/></li>
          <li><a name="RENDER_START"/>RENDER_START = 0x0004<hr/></li>
          <li><a name="RENDER_NEXT"/>RENDER_NEXT = 0x0008<hr/></li>
          <li><a name="RENDER_PREV"/>RENDER_PREV = 0x0010<hr/></li>
          <li><a name="RENDER_CONTENTS"/>RENDER_CONTENTS = 0x0020<hr/></li>
          <li><a name="RENDER_INDEX"/>RENDER_INDEX = 0x0040<hr/></li>
          <li><a name="RENDER_GLOSSARY"/>RENDER_GLOSSARY = 0x0080<hr/></li>
          <li><a name="RENDER_COPYRIGHT"/>RENDER_COPYRIGHT = 0x0100<hr/></li>
          <li><a name="RENDER_CHAPTER"/>RENDER_CHAPTER = 0x0200<hr/></li>
          <li><a name="RENDER_SECTION"/>RENDER_SECTION = 0x0400<hr/></li>
          <li><a name="RENDER_SUBSECTION"/>RENDER_SUBSECTION = 0x0800<hr/></li>
          <li><a name="RENDER_APPENDIX"/>RENDER_APPENDIX = 0x1000<hr/></li>
          <li><a name="RENDER_HELP"/>RENDER_HELP = 0x2000<hr/></li>
          <li><a name="RENDER_BOOKMARK"/>RENDER_BOOKMARK = 0x4000<hr/></li>
          <li><a name="RENDER_CUSTOM"/>RENDER_CUSTOM = 0x8000<hr/></li>
          <li><a name="RENDER_ALL"/>RENDER_ALL = 0xffff<hr/></li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="RELATIONS"/>
            <h4><span class="label protected">protected</span>array 
                
                $RELATIONS</h4>
            <ul class="varlist">
              <li>Maps render constants to W3C link types</li>
            </ul>
          </li>
          <li>
            <a name="renderFlag"/>
            <h4><span class="label protected">protected</span>int 
                
                $renderFlag</h4>
            <ul class="varlist">
              <li>The helper's render flag</li>
            </ul>
          </li>
          <li>
            <a name="root"/>
            <h4><span class="label protected">protected</span>object 
                
                $root</h4>
            <ul class="varlist">
              <li>Root container<pre>Used for preventing methods to traverse above the container given to
the  method.
</pre></li>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="__call"/>
            <h4><span class="label public">public</span>__call<span style="font-size:90%;">( <span class="param-type">string</span><strong> $method</strong>, <span class="param-type">Array</span><strong> $arguments</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Magic overload: Proxy calls to {@link findRelation()} or container<pre>Examples of finder calls:
&lt;code&gt;
// METHOD                  // SAME AS
$h-&gt;findRelNext($page);    // $h-&gt;findRelation($page, 'rel', 'next')
$h-&gt;findRevSection($page); // $h-&gt;findRelation($page, 'rev', 'section');
$h-&gt;findRelFoo($page);     // $h-&gt;findRelation($page, 'rel', 'foo');
&lt;/code&gt;</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$method</code> - method name</li>
                <li><code>$arguments</code> - method arguments</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\ExceptionInterface  if method does not exist in container</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="__call"/>
            <h4><span class="label public">public</span>__call<span style="font-size:90%;">( <span class="param-type">string</span><strong> $method</strong>, <span class="param-type">Array</span><strong> $arguments</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Magic overload: Proxy calls to the navigation container</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$method</code> - method name in container</li>
                <li><code>$arguments</code> - [optional] arguments to pass</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>returns what the container returns</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Navigation\Exception\ExceptionInterface  if method does not exist in container</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="__invoke"/>
            <h4><span class="label public">public</span>__invoke<span style="font-size:90%;">( <span class="param-type"><span title="string|AbstractContainer">string|AbstractContainer</span></span><strong> $container</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Helper entry point</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$container</code> - container to operate on</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="__toString"/>
            <h4><span class="label public">public</span>__toString<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Magic overload: Proxy to {@link render()}.<pre>This method will trigger an E_USER_ERROR if rendering the helper causes
an exception to be thrown.
Implements .
</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="accept"/>
            <h4><span class="label public">public</span>accept<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $recursive</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Determines whether a page should be accepted when iterating<pre>Rules:
- If a page is not visible it is not accepted, unless RenderInvisible has
  been set to true.
- If helper has no ACL, page is accepted
- If helper has ACL, but no role, page is not accepted
- If helper has ACL and role:
 - Page is accepted if it has no resource or privilege
 - Page is accepted if ACL allows page's resource or privilege
- If page is accepted by the rules above and $recursive is true, the page
  will not be accepted if it is the descendant of a non-accepted page.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to check</li>
                <li><code>$recursive</code> - [optional] if true, page will not be</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether page should be accepted</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="findActive"/>
            <h4><span class="label public">public</span>findActive<span style="font-size:90%;">( <span class="param-type"><span title="Navigation\AbstractContainer">AbstractContainer</span></span><strong> $container</strong>, <span class="param-type"><span title="int|null">int|null</span></span><strong> $minDepth</strong>, <span class="param-type">integer</span><strong> $maxDepth</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finds the deepest active page in the given container</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$container</code> - container to search</li>
                <li><code>$minDepth</code> - [optional] minimum depth</li>
                <li><code>$maxDepth</code> - [optional] maximum depth</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>an associative array with</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="findAllRelations"/>
            <h4><span class="label public">public</span>findAllRelations<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong>, <span class="param-type"><span title="null|int">null|int</span></span><strong> $flag</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finds all relations (forward and reverse) for the given $page<pre>The form of the returned array:
&lt;code&gt;
// $page denotes an instance of Zend_Navigation_Page
$returned = array(
    'rel' =&gt; array(
        'alternate' =&gt; array($page, $page, $page),
        'start'     =&gt; array($page),
        'next'      =&gt; array($page),
        'prev'      =&gt; array($page),
        'canonical' =&gt; array($page)
    ),
    'rev' =&gt; array(
        'section'   =&gt; array($page)
    )
);
&lt;/code&gt;</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to find links for</li>
                <li><code>$flag</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>related pages</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="findRelation"/>
            <h4><span class="label public">public</span>findRelation<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong>, <span class="param-type">string</span><strong> $rel</strong>, <span class="param-type">string</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finds relations of the given $rel=$type from $page<pre>This method will first look for relations in the page instance, then
by searching the root container if nothing was found in the page.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to find relations for</li>
                <li><code>$rel</code> - relation, "rel" or "rev"</li>
                <li><code>$type</code> - link type, e.g. 'start', 'next'</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page(s), or null if not found</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\DomainException if $rel is not "rel" or "rev"</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getAcl"/>
            <h4><span class="label public">public</span>getAcl<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns ACL or null if it isn't set using {@link setAcl()} or {@link setDefaultAcl()}<pre>Implements .
</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>ACL object or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getClosingBracket"/>
            <h4><span class="label public">public</span>getClosingBracket<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the tag closing bracket</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getContainer"/>
            <h4><span class="label public">public</span>getContainer<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the navigation container helper operates on by default<pre>Implements .
If no container is set, a new container will be instantiated and
stored in the helper.
</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>navigation container</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getIndent"/>
            <h4><span class="label public">public</span>getIndent<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns indentation</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMaxDepth"/>
            <h4><span class="label public">public</span>getMaxDepth<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns maximum depth a page can have to be included when rendering</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>maximum depth or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMinDepth"/>
            <h4><span class="label public">public</span>getMinDepth<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns minimum depth a page must have to be included when rendering</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>minimum depth or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRenderFlag"/>
            <h4><span class="label public">public</span>getRenderFlag<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the helper's render flag</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>render flag</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRenderInvisible"/>
            <h4><span class="label public">public</span>getRenderInvisible<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Return renderInvisible flag</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getRole"/>
            <h4><span class="label public">public</span>getRole<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns ACL role to use when iterating pages, or null if it isn't set using {@link setRole()} or {@link setDefaultRole()}<pre>Implements .
</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>role or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getServiceLocator"/>
            <h4><span class="label public">public</span>getServiceLocator<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the service locator.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTranslator"/>
            <h4><span class="label public">public</span>getTranslator<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns translator used in helper</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTranslatorTextDomain"/>
            <h4><span class="label public">public</span>getTranslatorTextDomain<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Return the translation text domain</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getUseAcl"/>
            <h4><span class="label public">public</span>getUseAcl<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether ACL should be used<pre>Implements .
</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether ACL should be used</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getView"/>
            <h4><span class="label public">public</span>getView<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the view object</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasAcl"/>
            <h4><span class="label public">public</span>hasAcl<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if the helper has an ACL instance<pre>Implements .
</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether the helper has a an ACL instance or not</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasContainer"/>
            <h4><span class="label public">public</span>hasContainer<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if the helper has a container<pre>Implements .
</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether the helper has a container or not</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasRole"/>
            <h4><span class="label public">public</span>hasRole<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if the helper has an ACL role<pre>Implements .
</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether the helper has a an ACL role or not</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasTranslator"/>
            <h4><span class="label public">public</span>hasTranslator<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Checks if the helper has a translator</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="htmlify"/>
            <h4><span class="label public">public</span>htmlify<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns an HTML string containing an 'a' element for the given page</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to generate HTML for</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>HTML string for the given page</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isTranslatorEnabled"/>
            <h4><span class="label public">public</span>isTranslatorEnabled<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether translator is enabled and should be used</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="render"/>
            <h4><span class="label public">public</span>render<span style="font-size:90%;">( <span class="param-type"><span title="AbstractContainer|string|null">AbstractContainer|string|null</span></span><strong> $container</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Renders helper<pre>Implements .
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$container</code> - [optional] container to render.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>helper output</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="renderLink"/>
            <h4><span class="label public">public</span>renderLink<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong>, <span class="param-type">string</span><strong> $attrib</strong>, <span class="param-type">string</span><strong> $relation</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Renders the given $page as a link element, with $attrib = $relation</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - the page to render the link for</li>
                <li><code>$attrib</code> - the attribute to use for $type,</li>
                <li><code>$relation</code> - relation type, muse be one of;</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>rendered link element</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\DomainException if $attrib is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="searchRelChapter"/>
            <h4><span class="label public">public</span>searchRelChapter<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Searches the root container for forward 'chapter' relations of the given $page<pre>From :
Refers to a document serving as a chapter in a collection of documents.
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to find relation for</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page(s) or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="searchRelNext"/>
            <h4><span class="label public">public</span>searchRelNext<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Searches the root container for the forward 'next' relation of the given $page<pre>From :
Refers to the next document in a linear sequence of documents. User
agents may choose to preload the "next" document, to reduce the perceived
load time.
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to find relation for</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page(s) or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="searchRelPrev"/>
            <h4><span class="label public">public</span>searchRelPrev<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Searches the root container for the forward 'prev' relation of the given $page<pre>From :
Refers to the previous document in an ordered series of documents. Some
user agents also support the synonym "Previous".
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to find relation for</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="searchRelSection"/>
            <h4><span class="label public">public</span>searchRelSection<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Searches the root container for forward 'section' relations of the given $page<pre>From :
Refers to a document serving as a section in a collection of documents.
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to find relation for</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page(s) or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="searchRelStart"/>
            <h4><span class="label public">public</span>searchRelStart<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Searches the root container for the forward 'start' relation of the given $page<pre>From :
Refers to the first document in a collection of documents. This link type
tells search engines which document is considered by the author to be the
starting point of the collection.
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to find relation for</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="searchRelSubsection"/>
            <h4><span class="label public">public</span>searchRelSubsection<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Searches the root container for forward 'subsection' relations of the given $page<pre>From :
Refers to a document serving as a subsection in a collection of
documents.
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to find relation for</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page(s) or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="searchRevSection"/>
            <h4><span class="label public">public</span>searchRevSection<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Searches the root container for the reverse 'section' relation of the given $page<pre>From :
Refers to a document serving as a section in a collection of documents.
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to find relation for</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page(s) or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="searchRevSubsection"/>
            <h4><span class="label public">public</span>searchRevSubsection<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Searches the root container for the reverse 'section' relation of the given $page<pre>From :
Refers to a document serving as a subsection in a collection of
documents.
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to find relation for</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page(s) or null</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setAcl"/>
            <h4><span class="label public">public</span>setAcl<span style="font-size:90%;">( <span class="param-type"><span title="Zend\View\Helper\Navigation\Acl\Acl">Acl</span></span><strong> $acl</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets ACL to use when iterating pages<pre>Implements .
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$acl</code> - [optional] ACL object.  Default is null.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setContainer"/>
            <h4><span class="label public">public</span>setContainer<span style="font-size:90%;">( <span class="param-type"><span title="string|Navigation\AbstractContainer">AbstractContainer</span></span><strong> $container</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets navigation container the helper operates on by default<pre>Implements .
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$container</code> - [optional] container to operate on.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setDefaultAcl"/>
            <h4><span class="label true">true</span><span class="label public">public</span>setDefaultAcl<span style="font-size:90%;">( <span class="param-type"><span title="Zend\View\Helper\Navigation\Acl\Acl">Acl</span></span><strong> $acl</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets default ACL to use if another ACL is not explicitly set</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$acl</code> - [optional] ACL object. Default is null, which</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setDefaultRole"/>
            <h4><span class="label true">true</span><span class="label public">public</span>setDefaultRole<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $role</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets default ACL role(s) to use when iterating pages if not explicitly set later with {@link setRole()}</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - [optional] role to set. Expects null, string, or an</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if role is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setIndent"/>
            <h4><span class="label public">public</span>setIndent<span style="font-size:90%;">( <span class="param-type"><span title="string|int">string|int</span></span><strong> $indent</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the indentation string for using in {@link render()}, optionally a number of spaces to indent with</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$indent</code> - indentation string or number of spaces</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setMaxDepth"/>
            <h4><span class="label public">public</span>setMaxDepth<span style="font-size:90%;">( <span class="param-type">int</span><strong> $maxDepth</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the maximum depth a page can have to be included when rendering</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$maxDepth</code> - [optional] maximum depth. Default is null, which</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setMinDepth"/>
            <h4><span class="label public">public</span>setMinDepth<span style="font-size:90%;">( <span class="param-type">int</span><strong> $minDepth</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the minimum depth a page must have to be included when rendering</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$minDepth</code> - [optional] minimum depth. Default is null, which</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setRenderFlag"/>
            <h4><span class="label public">public</span>setRenderFlag<span style="font-size:90%;">( <span class="param-type">int</span><strong> $renderFlag</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets the helper's render flag<pre>The helper uses the bitwise '&amp;' operator against the hex values of the
render constants. This means that the flag can is "bitwised" value of
the render constants. Examples:
&lt;code&gt;
// render all links except glossary
$flag = Links:RENDER_ALL ^ Links:RENDER_GLOSSARY;
$helper-&gt;setRenderFlag($flag);

// render only chapters and sections
$flag = Links:RENDER_CHAPTER | Links:RENDER_SECTION;
$helper-&gt;setRenderFlag($flag);

// render only relations that are not native W3C relations
$helper-&gt;setRenderFlag(Links:RENDER_CUSTOM);

// render all relations (default)
$helper-&gt;setRenderFlag(Links:RENDER_ALL);
&lt;/code&gt;

Note that custom relations can also be rendered directly using the
{@link renderLink()} method.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$renderFlag</code> - render flag</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setRenderInvisible"/>
            <h4><span class="label public">public</span>setRenderInvisible<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $renderInvisible</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Render invisible items?</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$renderInvisible</code> - [optional] boolean flag</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setRole"/>
            <h4><span class="label public">public</span>setRole<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $role</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets ACL role(s) to use when iterating pages<pre>Implements .
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$role</code> - [optional] role to set. Expects a string, an</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException if $role is invalid</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setServiceLocator"/>
            <h4><span class="label public">public</span>setServiceLocator<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_ServiceManager_ServiceLocatorInterface.xhtml">Zend\ServiceManager\ServiceLocatorInterface</a></span><strong> $serviceLocator</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the service locator.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$serviceLocator</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTranslator"/>
            <h4><span class="label public">public</span>setTranslator<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_I18n_Translator_Translator.xhtml">Zend\I18n\Translator\Translator</a></span><strong> $translator</strong>, <span class="param-type">string</span><strong> $textDomain</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets translator to use in helper</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$translator</code> - [optional] translator.</li>
                <li><code>$textDomain</code> - [optional] text domain</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTranslatorEnabled"/>
            <h4><span class="label public">public</span>setTranslatorEnabled<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $enabled</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether translator is enabled and should be used</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$enabled</code> - [optional] whether translator should be used.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTranslatorTextDomain"/>
            <h4><span class="label public">public</span>setTranslatorTextDomain<span style="font-size:90%;">( <span class="param-type">string</span><strong> $textDomain</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set translation text domain</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$textDomain</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setUseAcl"/>
            <h4><span class="label public">public</span>setUseAcl<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $useAcl</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Sets whether ACL should be used<pre>Implements .
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$useAcl</code> - [optional] whether ACL should be used.  Default is true.</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>fluent interface, returns self</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setView"/>
            <h4><span class="label public">public</span>setView<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_View_Renderer_RendererInterface.xhtml">Zend\View\Renderer\RendererInterface</a></span><strong> $view</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the View object</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$view</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="acceptAcl"/>
            <h4><span class="label protected">protected</span>acceptAcl<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Determines whether a page should be accepted by ACL when iterating<pre>Rules:
- If helper has no ACL, page is accepted
- If page has a resource or privilege defined, page is accepted
  if the ACL allows access to it using the helper's role
- If page has no resource or privilege, page is accepted</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to check</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>whether page is accepted by ACL</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="convertToPages"/>
            <h4><span class="label protected">protected</span>convertToPages<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $mixed</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $recursive</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Converts a $mixed value to an array of pages</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$mixed</code> - mixed value to get page(s) from</li>
                <li><code>$recursive</code> - whether $value should be looped</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>empty if unable to convert</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="findFromProperty"/>
            <h4><span class="label protected">protected</span>findFromProperty<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong>, <span class="param-type">string</span><strong> $rel</strong>, <span class="param-type">string</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finds relations of given $type for $page by checking if the relation is specified as a property of $page</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to find relations for</li>
                <li><code>$rel</code> - relation, 'rel' or 'rev'</li>
                <li><code>$type</code> - link type, e.g. 'start', 'next'</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>page(s), or null if not found</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="findFromSearch"/>
            <h4><span class="label protected">protected</span>findFromSearch<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong>, <span class="param-type">string</span><strong> $rel</strong>, <span class="param-type">string</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Finds relations of given $rel=$type for $page by using the helper to search for the relation in the root container</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to find relations for</li>
                <li><code>$rel</code> - relation, 'rel' or 'rev'</li>
                <li><code>$type</code> - link type, e.g. 'start', 'next', etc</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>array of pages, or null if not found</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="findRoot"/>
            <h4><span class="label protected">protected</span>findRoot<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Navigation_Page_AbstractPage.xhtml">Zend\Navigation\Page\AbstractPage</a></span><strong> $page</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the root container of the given page<pre>When rendering a container, the render method still store the given
container as the root container, and unset it when done rendering. This
makes sure finder methods will not traverse above the container given
to the render method.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$page</code> - page to find root for</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>the root container of the given page</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getWhitespace"/>
            <h4><span class="label protected">protected</span>getWhitespace<span style="font-size:90%;">( <span class="param-type"><span title="int|string">int|string</span></span><strong> $indent</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieve whitespace representation of $indent</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$indent</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="htmlAttribs"/>
            <h4><span class="label protected">protected</span>htmlAttribs<span style="font-size:90%;">( <span class="param-type">array</span><strong> $attribs</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Converts an associative array to a string of tag attributes.<pre>Overloads .
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attribs</code> - an array where each key-value pair is converted</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>an attribute string</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="htmlAttribs"/>
            <h4><span class="label protected">protected</span>htmlAttribs<span style="font-size:90%;">( <span class="param-type">array</span><strong> $attribs</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Converts an associative array to a string of tag attributes.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attribs</code> - From this array, each key-value pair is</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>The XHTML for the attributes.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isXhtml"/>
            <h4><span class="label protected">protected</span>isXhtml<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Is doctype XHTML?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="normalizeId"/>
            <h4><span class="label protected">protected</span>normalizeId<span style="font-size:90%;">( <span class="param-type">string</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Normalize an ID<pre>Overrides .
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="normalizeId"/>
            <h4><span class="label protected">protected</span>normalizeId<span style="font-size:90%;">( <span class="param-type">string</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Normalize an ID</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="parseContainer"/>
            <h4><span class="label protected">protected</span>parseContainer<span style="font-size:90%;">( <span class="param-type"><span title="\Zend\Navigation\AbstractContainer|string|null">AbstractContainer|string|null</span></span><strong> &amp;$container</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Verifies container and eventually fetches it from service locator if it is a string</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$container</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\Zend\View\Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
