<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Zend\Console\Getopt</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Zend_Console">Zend\Console</a>
          </li>
          <li class="separator">Getopt</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#constants">Constants</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/Console/Getopt.php.xhtml#line70">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Zend\Console\</small>Getopt</h1>
        <h4>Getopt is a class to parse options for command-line applications.</h4>
        <p>Terminology:<br/>Argument: an element of the argv array. This may be part of an option,<br/>or it may be a non-option command-line argument.<br/>Flag: the letter or word set off by a '-' or '--'. Example: in '--output filename',<br/>'--output' is the flag.<br/>Parameter: the additional argument that is associated with the option.<br/>Example: in '--output filename', the 'filename' is the parameter.<br/>Option: the combination of a flag and its parameter, if any.<br/>Example: in '--output filename', the whole thing is the option.<br/><br/>The following features are supported:<br/><br/>- Short flags like '-a'. Short flags are preceded by a single<br/>dash. Short flags may be clustered e.g. '-abc', which is the<br/>same as '-a' '-b' '-c'.<br/>- Long flags like '--verbose'. Long flags are preceded by a<br/>double dash. Long flags may not be clustered.<br/>- Options may have a parameter, e.g. '--output filename'.<br/>- Parameters for long flags may also be set off with an equals sign,<br/>e.g. '--output=filename'.<br/>- Parameters for long flags may be checked as string, word, or integer.<br/>- Automatic generation of a helpful usage message.<br/>- Signal end of options with '--'; subsequent arguments are treated<br/>as non-option arguments, even if they begin with '-'.<br/>- Raise exception Zend\Console\Exception\* in several cases<br/>when invalid flags or parameters are given. Usage message is<br/>returned in the exception object.<br/><br/>The format for specifying options uses a PHP associative array.<br/>The key is has the format of a list of pipe-separated flag names,<br/>followed by an optional '=' to indicate a required parameter or<br/>'-' to indicate an optional parameter. Following that, the type<br/>of parameter may be specified as 's' for string, 'w' for word,<br/>or 'i' for integer.<br/><br/>Examples:<br/>- 'user|username|u=s' this means '--user' or '--username' or '-u'<br/>are synonyms, and the option requires a string parameter.<br/>- 'p=i' this means '-p' requires an integer parameter. No synonyms.<br/>- 'verbose|v-i' this means '--verbose' or '-v' are synonyms, and<br/>they take an optional integer parameter.<br/>- 'help|h' this means '--help' or '-h' are synonyms, and<br/>they take no parameter.<br/><br/>The values in the associative array are strings that are used as<br/>brief descriptions of the options when printing a usage message.<br/><br/>The simpler format for specifying options used by PHP's getopt()<br/>function is also supported. This is similar to GNU getopt and shell<br/>getopt format.<br/><br/>Example: 'abc:' means options '-a', '-b', and '-c'<br/>are legal, and the latter requires a string parameter.</p>
        <ul/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class Getopt
            {<br/><ul class="none"><li>// constants</li><li>const MODE_ZEND = 'zend';</li><li>const MODE_GNU = 'gnu';</li><li>const PARAM_REQUIRED = '=';</li><li>const PARAM_OPTIONAL = '-';</li><li>const TYPE_STRING = 's';</li><li>const TYPE_WORD = 'w';</li><li>const TYPE_INTEGER = 'i';</li><li>const TYPE_NUMERIC_FLAG = '#';</li><li>const CONFIG_RULEMODE = 'ruleMode';</li><li>const CONFIG_DASHDASH = 'dashDash';</li><li>const CONFIG_IGNORECASE = 'ignoreCase';</li><li>const CONFIG_PARSEALL = 'parseAll';</li><li>const CONFIG_CUMULATIVE_PARAMETERS = 'cumulativeParameters';</li><li>const CONFIG_CUMULATIVE_FLAGS = 'cumulativeFlags';</li><li>const CONFIG_PARAMETER_SEPARATOR = 'parameterSeparator';</li><li>const CONFIG_FREEFORM_FLAGS = 'freeformFlags';</li><li>const CONFIG_NUMERIC_FLAGS = 'numericFlags';</li></ul><ul class="none"><li>// members</li><li>protected array <a href="#members">$getoptConfig</a>;
                    </li><li>protected array <a href="#members">$argv</a>;
                    </li><li>protected string <a href="#members">$progname</a>;
                    </li><li>protected array <a href="#members">$rules</a>;
                    </li><li>protected array <a href="#members">$ruleMap</a>;
                    </li><li>protected array <a href="#members">$options</a>;
                    </li><li>protected array <a href="#members">$remainingArgs</a>;
                    </li><li>protected <span title="Zend\Console\bool">bool</span> <a href="#members">$parsed</a>;
                    </li><li>protected array <a href="#members">$optionCallbacks</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/__construct.xhtml">__construct</a>()
                    </li><li>public string <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/__get.xhtml">__get</a>()
                    </li><li>public bool <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/__isset.xhtml">__isset</a>()
                    </li><li>public void <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/__set.xhtml">__set</a>()
                    </li><li>public string <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/__toString.xhtml">__toString</a>()
                    </li><li>public void <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/__unset.xhtml">__unset</a>()
                    </li><li>public self <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/addArguments.xhtml">addArguments</a>()
                    </li><li>public self <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/setArguments.xhtml">setArguments</a>()
                    </li><li>public self <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/setOptions.xhtml">setOptions</a>()
                    </li><li>public self <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/setOption.xhtml">setOption</a>()
                    </li><li>public self <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/addRules.xhtml">addRules</a>()
                    </li><li>public string <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/toString.xhtml">toString</a>()
                    </li><li>public array <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/toArray.xhtml">toArray</a>()
                    </li><li>public string <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/toJson.xhtml">toJson</a>()
                    </li><li>public string <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/toXml.xhtml">toXml</a>()
                    </li><li>public array <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/getOptions.xhtml">getOptions</a>()
                    </li><li>public mixed <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/getOption.xhtml">getOption</a>()
                    </li><li>public array <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/getRemainingArgs.xhtml">getRemainingArgs</a>()
                    </li><li>public void <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/getArguments.xhtml">getArguments</a>()
                    </li><li>public string <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/getUsageMessage.xhtml">getUsageMessage</a>()
                    </li><li>public self <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/setAliases.xhtml">setAliases</a>()
                    </li><li>public self <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/setHelp.xhtml">setHelp</a>()
                    </li><li>public self <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/parse.xhtml">parse</a>()
                    </li><li>public self <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/setOptionCallback.xhtml">setOptionCallback</a>()
                    </li><li>protected void <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/triggerCallbacks.xhtml">triggerCallbacks</a>()
                    </li><li>protected void <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_parseLongOption.xhtml">_parseLongOption</a>()
                    </li><li>protected void <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_parseShortOptionCluster.xhtml">_parseShortOptionCluster</a>()
                    </li><li>protected void <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_parseSingleOption.xhtml">_parseSingleOption</a>()
                    </li><li>protected void <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_setNumericOptionValue.xhtml">_setNumericOptionValue</a>()
                    </li><li>protected void <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_setSingleOptionValue.xhtml">_setSingleOptionValue</a>()
                    </li><li>protected void <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_setBooleanFlagValue.xhtml">_setBooleanFlagValue</a>()
                    </li><li>protected bool <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_checkParameterType.xhtml">_checkParameterType</a>()
                    </li><li>protected void <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_addRulesModeGnu.xhtml">_addRulesModeGnu</a>()
                    </li><li>protected void <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_addRulesModeZend.xhtml">_addRulesModeZend</a>()
                    </li></ul>

            }<br/></div>
        <h2 id="constants">Constants</h2>
        <table class="styled">
          <thead>
            <tr>
              <th>Name</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="MODE_ZEND">MODE_ZEND</td>
              <td>'zend'</td>
            </tr>
            <tr>
              <td id="MODE_GNU">MODE_GNU</td>
              <td>'gnu'</td>
            </tr>
            <tr>
              <td id="PARAM_REQUIRED">PARAM_REQUIRED</td>
              <td>'='</td>
            </tr>
            <tr>
              <td id="PARAM_OPTIONAL">PARAM_OPTIONAL</td>
              <td>'-'</td>
            </tr>
            <tr>
              <td id="TYPE_STRING">TYPE_STRING</td>
              <td>'s'</td>
            </tr>
            <tr>
              <td id="TYPE_WORD">TYPE_WORD</td>
              <td>'w'</td>
            </tr>
            <tr>
              <td id="TYPE_INTEGER">TYPE_INTEGER</td>
              <td>'i'</td>
            </tr>
            <tr>
              <td id="TYPE_NUMERIC_FLAG">TYPE_NUMERIC_FLAG</td>
              <td>'#'</td>
            </tr>
            <tr>
              <td id="CONFIG_RULEMODE">CONFIG_RULEMODE</td>
              <td>'ruleMode'</td>
            </tr>
            <tr>
              <td id="CONFIG_DASHDASH">CONFIG_DASHDASH</td>
              <td>'dashDash'</td>
            </tr>
            <tr>
              <td id="CONFIG_IGNORECASE">CONFIG_IGNORECASE</td>
              <td>'ignoreCase'</td>
            </tr>
            <tr>
              <td id="CONFIG_PARSEALL">CONFIG_PARSEALL</td>
              <td>'parseAll'</td>
            </tr>
            <tr>
              <td id="CONFIG_CUMULATIVE_PARAMETERS">CONFIG_CUMULATIVE_PARAMETERS</td>
              <td>'cumulativeParameters'</td>
            </tr>
            <tr>
              <td id="CONFIG_CUMULATIVE_FLAGS">CONFIG_CUMULATIVE_FLAGS</td>
              <td>'cumulativeFlags'</td>
            </tr>
            <tr>
              <td id="CONFIG_PARAMETER_SEPARATOR">CONFIG_PARAMETER_SEPARATOR</td>
              <td>'parameterSeparator'</td>
            </tr>
            <tr>
              <td id="CONFIG_FREEFORM_FLAGS">CONFIG_FREEFORM_FLAGS</td>
              <td>'freeformFlags'</td>
            </tr>
            <tr>
              <td id="CONFIG_NUMERIC_FLAGS">CONFIG_NUMERIC_FLAGS</td>
              <td>'numericFlags'</td>
            </tr>
          </tbody>
        </table>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="argv"><strong>$argv</strong>
                —
                array<br/><span class="indent">Stores the command-line arguments for the calling application.</span></li>
            <li id="getoptConfig">
              <strong>$getoptConfig</strong>
              <br/>
              <span class="indent">Defaults for getopt configuration are: ruleMode is 'zend' format, dashDash (--) token is enabled, ignoreCase is not enabled, parseAll is enabled, cumulative parameters are disabled, this means that subsequent options overwrite the parameter value, cumulative flags are disable, freeform flags are disable.</span>
            </li>
            <li id="optionCallbacks"><strong>$optionCallbacks</strong>
                —
                array<br/><span class="indent">A list of callbacks to call when a particular option is present.</span></li>
            <li id="options"><strong>$options</strong>
                —
                array<br/><span class="indent">Stores options given by the user in the current invocation of the application, as well as parameters given in options.</span></li>
            <li id="parsed"><strong>$parsed</strong>
                —
                <a href="#">Zend\Console\bool</a><br/><span class="indent">State of the options: parsed or not yet parsed?</span></li>
            <li id="progname"><strong>$progname</strong>
                —
                string<br/><span class="indent">Stores the name of the calling application.</span></li>
            <li id="remainingArgs"><strong>$remainingArgs</strong>
                —
                array<br/><span class="indent">Stores the command-line arguments other than options.</span></li>
            <li id="ruleMap"><strong>$ruleMap</strong>
                —
                array<br/><span class="indent">Stores alternate spellings of legal options.</span></li>
            <li id="rules"><strong>$rules</strong>
                —
                array<br/><span class="indent">Stores the list of legal options for this application.</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>protected</h4>
          <ul>
            <li id="_addRulesModeGnu"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_addRulesModeGnu.xhtml">_addRulesModeGnu()</a>
                — Define legal options using the gnu-style format.</li>
            <li id="_addRulesModeZend"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_addRulesModeZend.xhtml">_addRulesModeZend()</a>
                — Define legal options using the Zend-style format.</li>
            <li id="_checkParameterType"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_checkParameterType.xhtml">_checkParameterType()</a>
                — Return true if the parameter is in a valid format for the option $flag.</li>
            <li id="_parseLongOption"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_parseLongOption.xhtml">_parseLongOption()</a>
                — Parse command-line arguments for a single long option.</li>
            <li id="_parseShortOptionCluster"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_parseShortOptionCluster.xhtml">_parseShortOptionCluster()</a>
                — Parse command-line arguments for short options.</li>
            <li id="_parseSingleOption"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_parseSingleOption.xhtml">_parseSingleOption()</a>
                — Parse command-line arguments for a single option.</li>
            <li id="_setBooleanFlagValue"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_setBooleanFlagValue.xhtml">_setBooleanFlagValue()</a>
                — Set TRUE value to given flag, if this option does not exist yet In other case increase value to show count of flags' usage</li>
            <li id="_setNumericOptionValue"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_setNumericOptionValue.xhtml">_setNumericOptionValue()</a>
                — Set given value as value of numeric option</li>
            <li id="_setSingleOptionValue"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/_setSingleOptionValue.xhtml">_setSingleOptionValue()</a>
                — Add relative to options' flag value</li>
            <li id="triggerCallbacks"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/triggerCallbacks.xhtml">triggerCallbacks()</a>
                — Triggers all the registered callbacks.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/__construct.xhtml">__construct()</a>
                — The constructor takes one to three parameters.</li>
            <li id="__get"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/__get.xhtml">__get()</a>
                — Return the state of the option seen on the command line of the current application invocation.  This function returns true, or the parameter to the option, if any.  If the option was not given, this function returns null.</li>
            <li id="__isset"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/__isset.xhtml">__isset()</a>
                — Test whether a given option has been seen.</li>
            <li id="__set"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/__set.xhtml">__set()</a>
                — Set the value for a given option.</li>
            <li id="__toString"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/__toString.xhtml">__toString()</a>
                — Return the current set of options and parameters seen as a string.</li>
            <li id="__unset"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/__unset.xhtml">__unset()</a>
                — Unset an option.</li>
            <li id="addArguments"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/addArguments.xhtml">addArguments()</a>
                — Define additional command-line arguments.</li>
            <li id="addRules"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/addRules.xhtml">addRules()</a>
                — Define additional option rules.</li>
            <li id="getArguments">
              <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/getArguments.xhtml">getArguments()</a>
            </li>
            <li id="getOption"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/getOption.xhtml">getOption()</a>
                — Return the state of the option seen on the command line of the current application invocation.</li>
            <li id="getOptions"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/getOptions.xhtml">getOptions()</a>
                — Return a list of options that have been seen in the current argv.</li>
            <li id="getRemainingArgs"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/getRemainingArgs.xhtml">getRemainingArgs()</a>
                — Return the arguments from the command-line following all options found.</li>
            <li id="getUsageMessage"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/getUsageMessage.xhtml">getUsageMessage()</a>
                — Return a useful option reference, formatted for display in an error message.</li>
            <li id="parse"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/parse.xhtml">parse()</a>
                — Parse command-line arguments and find both long and short options.</li>
            <li id="setAliases"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/setAliases.xhtml">setAliases()</a>
                — Define aliases for options.</li>
            <li id="setArguments"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/setArguments.xhtml">setArguments()</a>
                — Define full set of command-line arguments.</li>
            <li id="setHelp"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/setHelp.xhtml">setHelp()</a>
                — Define help messages for options.</li>
            <li id="setOption"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/setOption.xhtml">setOption()</a>
                — Define one configuration option as a key/value pair.</li>
            <li id="setOptionCallback">
              <a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/setOptionCallback.xhtml">setOptionCallback()</a>
            </li>
            <li id="setOptions"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/setOptions.xhtml">setOptions()</a>
                — Define multiple configuration options from an associative array.</li>
            <li id="toArray"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/toArray.xhtml">toArray()</a>
                — Return the current set of options and parameters seen as an array of canonical options and parameters.</li>
            <li id="toJson"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/toJson.xhtml">toJson()</a>
                — Return the current set of options and parameters seen in Json format.</li>
            <li id="toString"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/toString.xhtml">toString()</a>
                — Return the current set of options and parameters seen as a string.</li>
            <li id="toXml"><a title="Zend\Console\Getopt" href="../classes/Zend_Console_Getopt/toXml.xhtml">toXml()</a>
                — Return the current set of options and parameters seen in XML format.</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
