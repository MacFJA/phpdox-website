<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - Zend\Code\Reflection\ParameterReflection</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml#Zend_Code_Reflection">Zend\Code\Reflection</a>
          </li>
          <li class="separator">ParameterReflection</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="../source/Code/Reflection/ParameterReflection.php.xhtml#line14">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>Zend\Code\Reflection\</small>ParameterReflection</h1>
        <h4/>
        <p/>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class ParameterReflection
                extends <a title="ReflectionParameter" href="../classes/ReflectionParameter.xhtml">ReflectionParameter</a>
                implements
                <a title="Zend\Code\Reflection\ReflectionInterface" href="../interfaces/Zend_Code_Reflection_ReflectionInterface.xhtml">ReflectionInterface</a>
            {<br/><ul class="none"><li>// members</li><li>protected <span title="Zend\Code\Reflection\bool">bool</span> <a href="#members">$isFromMethod</a>;
                    </li></ul><ul class="none"><li>// Inherited members from <span title="ReflectionParameter">ReflectionParameter</span></li><li>public  <a href="#members">$name</a>;
                        </li></ul><ul class="none"><li>// methods</li><li>public ClassReflection <a title="Zend\Code\Reflection\ParameterReflection" href="../classes/Zend_Code_Reflection_ParameterReflection/getDeclaringClass.xhtml">getDeclaringClass</a>()
                    </li><li>public ClassReflection <a title="Zend\Code\Reflection\ParameterReflection" href="../classes/Zend_Code_Reflection_ParameterReflection/getClass.xhtml">getClass</a>()
                    </li><li>public FunctionReflection|MethodReflection <a title="Zend\Code\Reflection\ParameterReflection" href="../classes/Zend_Code_Reflection_ParameterReflection/getDeclaringFunction.xhtml">getDeclaringFunction</a>()
                    </li><li>public string <a title="Zend\Code\Reflection\ParameterReflection" href="../classes/Zend_Code_Reflection_ParameterReflection/getType.xhtml">getType</a>()
                    </li><li>public void <a title="Zend\Code\Reflection\ParameterReflection" href="../classes/Zend_Code_Reflection_ParameterReflection/toString.xhtml">toString</a>()
                    </li><li>public void <a title="Zend\Code\Reflection\ParameterReflection" href="../classes/Zend_Code_Reflection_ParameterReflection/__toString.xhtml">__toString</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="ReflectionParameter">ReflectionParameter</span></li><li>public bool <a title="ReflectionParameter" href="../classes/ReflectionParameter/allowsNull.xhtml">allowsNull</a>()
                        </li><li>public bool <a title="ReflectionParameter" href="../classes/ReflectionParameter/canBePassedByValue.xhtml">canBePassedByValue</a>()
                        </li><li>public void <a title="ReflectionParameter" href="../classes/ReflectionParameter/__construct.xhtml">__construct</a>()
                        </li><li>public string <a title="ReflectionParameter" href="../classes/ReflectionParameter/export.xhtml">export</a>()
                        </li><li>public ReflectionClass <a title="ReflectionParameter" href="../classes/ReflectionParameter/getClass.xhtml">getClass</a>()
                        </li><li>public ReflectionClass <a title="ReflectionParameter" href="../classes/ReflectionParameter/getDeclaringClass.xhtml">getDeclaringClass</a>()
                        </li><li>public ReflectionFunction <a title="ReflectionParameter" href="../classes/ReflectionParameter/getDeclaringFunction.xhtml">getDeclaringFunction</a>()
                        </li><li>public mixed <a title="ReflectionParameter" href="../classes/ReflectionParameter/getDefaultValue.xhtml">getDefaultValue</a>()
                        </li><li>public string <a title="ReflectionParameter" href="../classes/ReflectionParameter/getDefaultValueConstantName.xhtml">getDefaultValueConstantName</a>()
                        </li><li>public string <a title="ReflectionParameter" href="../classes/ReflectionParameter/getName.xhtml">getName</a>()
                        </li><li>public int <a title="ReflectionParameter" href="../classes/ReflectionParameter/getPosition.xhtml">getPosition</a>()
                        </li><li>public bool <a title="ReflectionParameter" href="../classes/ReflectionParameter/isArray.xhtml">isArray</a>()
                        </li><li>public bool <a title="ReflectionParameter" href="../classes/ReflectionParameter/isCallable.xhtml">isCallable</a>()
                        </li><li>public bool <a title="ReflectionParameter" href="../classes/ReflectionParameter/isDefaultValueAvailable.xhtml">isDefaultValueAvailable</a>()
                        </li><li>public bool <a title="ReflectionParameter" href="../classes/ReflectionParameter/isDefaultValueConstant.xhtml">isDefaultValueConstant</a>()
                        </li><li>public bool <a title="ReflectionParameter" href="../classes/ReflectionParameter/isOptional.xhtml">isOptional</a>()
                        </li><li>public bool <a title="ReflectionParameter" href="../classes/ReflectionParameter/isPassedByReference.xhtml">isPassedByReference</a>()
                        </li><li>public string <a title="ReflectionParameter" href="../classes/ReflectionParameter/__toString.xhtml">__toString</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/ReflectionParameter.xhtml">ReflectionParameter</a>
            </li>
          </ul>
          <h4>Implements</h4>
          <ul>
            <li>
              <a href="../interfaces/Zend_Code_Reflection_ReflectionInterface.xhtml">Zend\Code\Reflection\ReflectionInterface</a>
            </li>
          </ul>
        </div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>protected</h4>
          <ul class="members">
            <li id="isFromMethod"><strong>$isFromMethod</strong>
                —
                <a href="#">Zend\Code\Reflection\bool</a></li>
          </ul>
          <h4>public</h4>
          <ul class="members">
            <li id="name">
              <strong>$name</strong>
              <br/>
              <span class="indent">
       Name of the parameter. Read-only, throws
       ReflectionException in attempt to write.
      </span>
            </li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>public</h4>
          <ul>
            <li id="__toString">
              <a title="Zend\Code\Reflection\ParameterReflection" href="../classes/Zend_Code_Reflection_ParameterReflection/__toString.xhtml">__toString()</a>
            </li>
            <li id="getClass"><a title="Zend\Code\Reflection\ParameterReflection" href="../classes/Zend_Code_Reflection_ParameterReflection/getClass.xhtml">getClass()</a>
                — Get class reflection object</li>
            <li id="getDeclaringClass"><a title="Zend\Code\Reflection\ParameterReflection" href="../classes/Zend_Code_Reflection_ParameterReflection/getDeclaringClass.xhtml">getDeclaringClass()</a>
                — Get declaring class reflection object</li>
            <li id="getDeclaringFunction"><a title="Zend\Code\Reflection\ParameterReflection" href="../classes/Zend_Code_Reflection_ParameterReflection/getDeclaringFunction.xhtml">getDeclaringFunction()</a>
                — Get declaring function reflection object</li>
            <li id="getType"><a title="Zend\Code\Reflection\ParameterReflection" href="../classes/Zend_Code_Reflection_ParameterReflection/getType.xhtml">getType()</a>
                — Get parameter type</li>
            <li id="toString">
              <a title="Zend\Code\Reflection\ParameterReflection" href="../classes/Zend_Code_Reflection_ParameterReflection/toString.xhtml">toString()</a>
            </li>
          </ul>
          <h3>Inherited from <a title="ReflectionParameter" href="../classes/ReflectionParameter.xhtml">ReflectionParameter</a></h3>
          <h4>public</h4>
          <ul>
            <li id="__toString"><a title="ReflectionParameter" href="../classes/ReflectionParameter/__toString.xhtml">__toString()</a>
                — To string</li>
            <li id="allowsNull"><a title="ReflectionParameter" href="../classes/ReflectionParameter/allowsNull.xhtml">allowsNull()</a>
                — Checks if null is allowed</li>
            <li id="canBePassedByValue"><a title="ReflectionParameter" href="../classes/ReflectionParameter/canBePassedByValue.xhtml">canBePassedByValue()</a>
                — Returns whether this parameter can be passed by value</li>
            <li id="export"><a title="ReflectionParameter" href="../classes/ReflectionParameter/export.xhtml">export()</a>
                — Exports</li>
            <li id="getClass"><a title="ReflectionParameter" href="../classes/ReflectionParameter/getClass.xhtml">getClass()</a>
                — Get class</li>
            <li id="getDeclaringClass"><a title="ReflectionParameter" href="../classes/ReflectionParameter/getDeclaringClass.xhtml">getDeclaringClass()</a>
                — Gets declaring class</li>
            <li id="getDeclaringFunction"><a title="ReflectionParameter" href="../classes/ReflectionParameter/getDeclaringFunction.xhtml">getDeclaringFunction()</a>
                — Gets declaring function</li>
            <li id="getDefaultValue"><a title="ReflectionParameter" href="../classes/ReflectionParameter/getDefaultValue.xhtml">getDefaultValue()</a>
                — Gets default parameter value</li>
            <li id="getDefaultValueConstantName"><a title="ReflectionParameter" href="../classes/ReflectionParameter/getDefaultValueConstantName.xhtml">getDefaultValueConstantName()</a>
                — Returns the default value's constant name if default value is constant or null</li>
            <li id="getName"><a title="ReflectionParameter" href="../classes/ReflectionParameter/getName.xhtml">getName()</a>
                — Gets parameter name</li>
            <li id="getPosition"><a title="ReflectionParameter" href="../classes/ReflectionParameter/getPosition.xhtml">getPosition()</a>
                — Gets parameter position</li>
            <li id="isArray"><a title="ReflectionParameter" href="../classes/ReflectionParameter/isArray.xhtml">isArray()</a>
                — Checks if parameter expects an array</li>
            <li id="isCallable"><a title="ReflectionParameter" href="../classes/ReflectionParameter/isCallable.xhtml">isCallable()</a>
                — Returns whether parameter MUST be callable</li>
            <li id="isDefaultValueAvailable"><a title="ReflectionParameter" href="../classes/ReflectionParameter/isDefaultValueAvailable.xhtml">isDefaultValueAvailable()</a>
                — Checks if a default value is available</li>
            <li id="isDefaultValueConstant"><a title="ReflectionParameter" href="../classes/ReflectionParameter/isDefaultValueConstant.xhtml">isDefaultValueConstant()</a>
                — Returns whether the default value of this parameter is constant</li>
            <li id="isOptional"><a title="ReflectionParameter" href="../classes/ReflectionParameter/isOptional.xhtml">isOptional()</a>
                — Checks if optional</li>
            <li id="isPassedByReference"><a title="ReflectionParameter" href="../classes/ReflectionParameter/isPassedByReference.xhtml">isPassedByReference()</a>
                — Checks if passed by reference</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span/>
    </footer>
  </body>
</html>
