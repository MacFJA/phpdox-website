<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Cache\Storage\Capabilities - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#storage">$storage</a>
          </li>
          <li>
            <a href="#marker">$marker</a>
          </li>
          <li>
            <a href="#baseCapabilities">$baseCapabilities</a>
          </li>
          <li>
            <a href="#expiredRead">$expiredRead</a>
          </li>
          <li>
            <a href="#maxKeyLength">$maxKeyLength</a>
          </li>
          <li>
            <a href="#minTtl">$minTtl</a>
          </li>
          <li>
            <a href="#maxTtl">$maxTtl</a>
          </li>
          <li>
            <a href="#namespaceIsPrefix">$namespaceIsPrefix</a>
          </li>
          <li>
            <a href="#namespaceSeparator">$namespaceSeparator</a>
          </li>
          <li>
            <a href="#staticTtl">$staticTtl</a>
          </li>
          <li>
            <a href="#supportedDatatypes">$supportedDatatypes</a>
          </li>
          <li>
            <a href="#supportedMetadata">$supportedMetadata</a>
          </li>
          <li>
            <a href="#ttlPrecision">$ttlPrecision</a>
          </li>
          <li>
            <a href="#useRequestTime">$useRequestTime</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#getAdapter">getAdapter</a>
          </li>
          <li>
            <a href="#getCapability">getCapability</a>
          </li>
          <li>
            <a href="#getExpiredRead">getExpiredRead</a>
          </li>
          <li>
            <a href="#getMaxKeyLength">getMaxKeyLength</a>
          </li>
          <li>
            <a href="#getMaxTtl">getMaxTtl</a>
          </li>
          <li>
            <a href="#getMinTtl">getMinTtl</a>
          </li>
          <li>
            <a href="#getNamespaceIsPrefix">getNamespaceIsPrefix</a>
          </li>
          <li>
            <a href="#getNamespaceSeparator">getNamespaceSeparator</a>
          </li>
          <li>
            <a href="#getStaticTtl">getStaticTtl</a>
          </li>
          <li>
            <a href="#getSupportedDatatypes">getSupportedDatatypes</a>
          </li>
          <li>
            <a href="#getSupportedMetadata">getSupportedMetadata</a>
          </li>
          <li>
            <a href="#getTtlPrecision">getTtlPrecision</a>
          </li>
          <li>
            <a href="#getUseRequestTime">getUseRequestTime</a>
          </li>
          <li>
            <a href="#setCapability">setCapability</a>
          </li>
          <li>
            <a href="#setExpiredRead">setExpiredRead</a>
          </li>
          <li>
            <a href="#setMaxKeyLength">setMaxKeyLength</a>
          </li>
          <li>
            <a href="#setMaxTtl">setMaxTtl</a>
          </li>
          <li>
            <a href="#setMinTtl">setMinTtl</a>
          </li>
          <li>
            <a href="#setNamespaceIsPrefix">setNamespaceIsPrefix</a>
          </li>
          <li>
            <a href="#setNamespaceSeparator">setNamespaceSeparator</a>
          </li>
          <li>
            <a href="#setStaticTtl">setStaticTtl</a>
          </li>
          <li>
            <a href="#setSupportedDatatypes">setSupportedDatatypes</a>
          </li>
          <li>
            <a href="#setSupportedMetadata">setSupportedMetadata</a>
          </li>
          <li>
            <a href="#setTtlPrecision">setTtlPrecision</a>
          </li>
          <li>
            <a href="#setUseRequestTime">setUseRequestTime</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Cache\Storage\</span>Capabilities</h2>
        <div class="file-notice">
          <p/>
        </div>
        <ul class="fileinfos"/>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="storage"/>
            <h4><span class="label protected">protected</span>object 
                
                $storage</h4>
            <ul class="varlist">
              <li>The storage instance</li>
            </ul>
          </li>
          <li>
            <a name="marker"/>
            <h4><span class="label protected">protected</span>object 
                
                $marker</h4>
            <ul class="varlist">
              <li>A marker to set/change capabilities</li>
            </ul>
          </li>
          <li>
            <a name="baseCapabilities"/>
            <h4><span class="label protected">protected</span>object 
                
                $baseCapabilities</h4>
            <ul class="varlist">
              <li>Base capabilities</li>
            </ul>
          </li>
          <li>
            <a name="expiredRead"/>
            <h4><span class="label protected">protected</span>object 
                
                $expiredRead</h4>
            <ul class="varlist">
              <li>Expire read<pre>If it's NULL the capability isn't set and the getter
returns the base capability or the default value.</pre></li>
            </ul>
          </li>
          <li>
            <a name="maxKeyLength"/>
            <h4><span class="label protected">protected</span>object 
                
                $maxKeyLength</h4>
            <ul class="varlist">
              <li>Max. key length<pre>If it's NULL the capability isn't set and the getter
returns the base capability or the default value.</pre></li>
            </ul>
          </li>
          <li>
            <a name="minTtl"/>
            <h4><span class="label protected">protected</span>object 
                
                $minTtl</h4>
            <ul class="varlist">
              <li>Min. TTL (0 means items never expire)<pre>If it's NULL the capability isn't set and the getter
returns the base capability or the default value.</pre></li>
            </ul>
          </li>
          <li>
            <a name="maxTtl"/>
            <h4><span class="label protected">protected</span>object 
                
                $maxTtl</h4>
            <ul class="varlist">
              <li>Max. TTL (0 means infinite)<pre>If it's NULL the capability isn't set and the getter
returns the base capability or the default value.</pre></li>
            </ul>
          </li>
          <li>
            <a name="namespaceIsPrefix"/>
            <h4><span class="label protected">protected</span>object 
                
                $namespaceIsPrefix</h4>
            <ul class="varlist">
              <li>Namespace is prefix<pre>If it's NULL the capability isn't set and the getter
returns the base capability or the default value.</pre></li>
            </ul>
          </li>
          <li>
            <a name="namespaceSeparator"/>
            <h4><span class="label protected">protected</span>object 
                
                $namespaceSeparator</h4>
            <ul class="varlist">
              <li>Namespace separator<pre>If it's NULL the capability isn't set and the getter
returns the base capability or the default value.</pre></li>
            </ul>
          </li>
          <li>
            <a name="staticTtl"/>
            <h4><span class="label protected">protected</span>object 
                
                $staticTtl</h4>
            <ul class="varlist">
              <li>Static ttl<pre>If it's NULL the capability isn't set and the getter
returns the base capability or the default value.</pre></li>
            </ul>
          </li>
          <li>
            <a name="supportedDatatypes"/>
            <h4><span class="label protected">protected</span>object 
                
                $supportedDatatypes</h4>
            <ul class="varlist">
              <li>Supported datatypes<pre>If it's NULL the capability isn't set and the getter
returns the base capability or the default value.</pre></li>
            </ul>
          </li>
          <li>
            <a name="supportedMetadata"/>
            <h4><span class="label protected">protected</span>object 
                
                $supportedMetadata</h4>
            <ul class="varlist">
              <li>Supported metdata<pre>If it's NULL the capability isn't set and the getter
returns the base capability or the default value.</pre></li>
            </ul>
          </li>
          <li>
            <a name="ttlPrecision"/>
            <h4><span class="label protected">protected</span>object 
                
                $ttlPrecision</h4>
            <ul class="varlist">
              <li>TTL precision<pre>If it's NULL the capability isn't set and the getter
returns the base capability or the default value.</pre></li>
            </ul>
          </li>
          <li>
            <a name="useRequestTime"/>
            <h4><span class="label protected">protected</span>object 
                
                $useRequestTime</h4>
            <ul class="varlist">
              <li>Use request time<pre>If it's NULL the capability isn't set and the getter
returns the base capability or the default value.</pre></li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Cache_Storage_StorageInterface.xhtml">Zend\Cache\Storage\StorageInterface</a></span><strong> $storage</strong>, <span class="param-type"><span title="stdClass">stdClass</span></span><strong> $marker</strong>, <span class="param-type">Array</span><strong> $capabilities</strong>, <span class="param-type"><a href="../classes/Zend_Cache_Storage_Capabilities.xhtml">Zend\Cache\Storage\Capabilities</a></span><strong> $baseCapabilities</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Constructor</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$storage</code> - </li>
                <li><code>$marker</code> - </li>
                <li><code>$capabilities</code> - </li>
                <li><code>$baseCapabilities</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="getAdapter"/>
            <h4><span class="label public">public</span>getAdapter<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the storage adapter</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getExpiredRead"/>
            <h4><span class="label public">public</span>getExpiredRead<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get if expired items are readable</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMaxKeyLength"/>
            <h4><span class="label public">public</span>getMaxKeyLength<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get maximum key lenth</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>-1 means unknown, 0 means infinite</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMaxTtl"/>
            <h4><span class="label public">public</span>getMaxTtl<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get maximum supported time-to-live</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>0 means infinite</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMinTtl"/>
            <h4><span class="label public">public</span>getMinTtl<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get minimum supported time-to-live</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>0 means items never expire</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNamespaceIsPrefix"/>
            <h4><span class="label public">public</span>getNamespaceIsPrefix<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get if namespace support is implemented as prefix</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNamespaceSeparator"/>
            <h4><span class="label public">public</span>getNamespaceSeparator<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get namespace separator if namespace is implemented as prefix</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getStaticTtl"/>
            <h4><span class="label public">public</span>getStaticTtl<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Is the time-to-live handled static (on write) or dynamic (on read)</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getSupportedDatatypes"/>
            <h4><span class="label public">public</span>getSupportedDatatypes<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get supported datatypes</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getSupportedMetadata"/>
            <h4><span class="label public">public</span>getSupportedMetadata<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get supported metadata</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getTtlPrecision"/>
            <h4><span class="label public">public</span>getTtlPrecision<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get time-to-live precision</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getUseRequestTime"/>
            <h4><span class="label public">public</span>getUseRequestTime<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get use request time</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setExpiredRead"/>
            <h4><span class="label public">public</span>setExpiredRead<span style="font-size:90%;">( <span class="param-type"><span title="stdClass">stdClass</span></span><strong> $marker</strong>, <span class="param-type">boolean</span><strong> $flag</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set if expired items are readable</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$marker</code> - </li>
                <li><code>$flag</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setMaxKeyLength"/>
            <h4><span class="label public">public</span>setMaxKeyLength<span style="font-size:90%;">( <span class="param-type"><span title="stdClass">stdClass</span></span><strong> $marker</strong>, <span class="param-type">int</span><strong> $maxKeyLength</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set maximum key length</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$marker</code> - </li>
                <li><code>$maxKeyLength</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Fluent interface</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setMaxTtl"/>
            <h4><span class="label public">public</span>setMaxTtl<span style="font-size:90%;">( <span class="param-type"><span title="stdClass">stdClass</span></span><strong> $marker</strong>, <span class="param-type">int</span><strong> $maxTtl</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set maximum supported time-to-live</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$marker</code> - </li>
                <li><code>$maxTtl</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Fluent interface</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setMinTtl"/>
            <h4><span class="label public">public</span>setMinTtl<span style="font-size:90%;">( <span class="param-type"><span title="stdClass">stdClass</span></span><strong> $marker</strong>, <span class="param-type">int</span><strong> $minTtl</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set minimum supported time-to-live</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$marker</code> - </li>
                <li><code>$minTtl</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Fluent interface</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setNamespaceIsPrefix"/>
            <h4><span class="label public">public</span>setNamespaceIsPrefix<span style="font-size:90%;">( <span class="param-type"><span title="stdClass">stdClass</span></span><strong> $marker</strong>, <span class="param-type">boolean</span><strong> $flag</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set if namespace support is implemented as prefix</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$marker</code> - </li>
                <li><code>$flag</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setNamespaceSeparator"/>
            <h4><span class="label public">public</span>setNamespaceSeparator<span style="font-size:90%;">( <span class="param-type"><span title="stdClass">stdClass</span></span><strong> $marker</strong>, <span class="param-type">string</span><strong> $separator</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set the namespace separator if namespace is implemented as prefix</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$marker</code> - </li>
                <li><code>$separator</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setStaticTtl"/>
            <h4><span class="label public">public</span>setStaticTtl<span style="font-size:90%;">( <span class="param-type"><span title="stdClass">stdClass</span></span><strong> $marker</strong>, <span class="param-type">boolean</span><strong> $flag</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set if the time-to-live handled static (on write) or dynamic (on read)</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$marker</code> - </li>
                <li><code>$flag</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setSupportedDatatypes"/>
            <h4><span class="label public">public</span>setSupportedDatatypes<span style="font-size:90%;">( <span class="param-type"><span title="stdClass">stdClass</span></span><strong> $marker</strong>, <span class="param-type">Array</span><strong> $datatypes</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set supported datatypes</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$marker</code> - </li>
                <li><code>$datatypes</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Fluent interface</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setSupportedMetadata"/>
            <h4><span class="label public">public</span>setSupportedMetadata<span style="font-size:90%;">( <span class="param-type"><span title="stdClass">stdClass</span></span><strong> $marker</strong>, <span class="param-type">Array</span><strong> $metadata</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set supported metadata</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$marker</code> - </li>
                <li><code>$metadata</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Fluent interface</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setTtlPrecision"/>
            <h4><span class="label public">public</span>setTtlPrecision<span style="font-size:90%;">( <span class="param-type"><span title="stdClass">stdClass</span></span><strong> $marker</strong>, <span class="param-type">float</span><strong> $ttlPrecision</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set time-to-live precision</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$marker</code> - </li>
                <li><code>$ttlPrecision</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Fluent interface</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setUseRequestTime"/>
            <h4><span class="label public">public</span>setUseRequestTime<span style="font-size:90%;">( <span class="param-type"><span title="stdClass">stdClass</span></span><strong> $marker</strong>, <span class="param-type">boolean</span><strong> $flag</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set use request time</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$marker</code> - </li>
                <li><code>$flag</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Fluent interface</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getCapability"/>
            <h4><span class="label protected">protected</span>getCapability<span style="font-size:90%;">( <span class="param-type">string</span><strong> $property</strong>, <span class="param-type">mixed</span><strong> $default</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get a capability</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$property</code> - </li>
                <li><code>$default</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setCapability"/>
            <h4><span class="label protected">protected</span>setCapability<span style="font-size:90%;">( <span class="param-type"><span title="stdClass">stdClass</span></span><strong> $marker</strong>, <span class="param-type">string</span><strong> $property</strong>, <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Change a capability</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$marker</code> - </li>
                <li><code>$property</code> - </li>
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>Fluent interface</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
