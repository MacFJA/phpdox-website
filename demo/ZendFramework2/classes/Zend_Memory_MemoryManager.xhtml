<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Memory\MemoryManager - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#cache">$cache</a>
          </li>
          <li>
            <a href="#memoryLimit">$memoryLimit</a>
          </li>
          <li>
            <a href="#minSize">$minSize</a>
          </li>
          <li>
            <a href="#memorySize">$memorySize</a>
          </li>
          <li>
            <a href="#nextId">$nextId</a>
          </li>
          <li>
            <a href="#unloadCandidates">$unloadCandidates</a>
          </li>
          <li>
            <a href="#sizes">$sizes</a>
          </li>
          <li>
            <a href="#lastModified">$lastModified</a>
          </li>
          <li>
            <a href="#managerId">$managerId</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#__destruct">__destruct</a>
          </li>
          <li>
            <a href="#_commit">_commit</a>
          </li>
          <li>
            <a href="#_create">_create</a>
          </li>
          <li>
            <a href="#_generateMemManagerId">_generateMemManagerId</a>
          </li>
          <li>
            <a href="#_swap">_swap</a>
          </li>
          <li>
            <a href="#_swapCheck">_swapCheck</a>
          </li>
          <li>
            <a href="#create">create</a>
          </li>
          <li>
            <a href="#createLocked">createLocked</a>
          </li>
          <li>
            <a href="#getMemoryLimit">getMemoryLimit</a>
          </li>
          <li>
            <a href="#getMinSize">getMinSize</a>
          </li>
          <li>
            <a href="#load">load</a>
          </li>
          <li>
            <a href="#processUpdate">processUpdate</a>
          </li>
          <li>
            <a href="#setMemoryLimit">setMemoryLimit</a>
          </li>
          <li>
            <a href="#setMinSize">setMinSize</a>
          </li>
          <li>
            <a href="#unlink">unlink</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Memory\</span>MemoryManager</h2>
        <div class="file-notice">
          <p>Memory manager</p>
          <p>
            <pre>This class encapsulates memory menagement operations, when PHP works
in limited memory mode.</pre>
          </p>
        </div>
        <ul class="fileinfos"/>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="cache"/>
            <h4><span class="label private">private</span>object 
                
                $cache</h4>
            <ul class="varlist">
              <li>Storage cache object</li>
            </ul>
          </li>
          <li>
            <a name="memoryLimit"/>
            <h4><span class="label private">private</span>integer 
                
                $memoryLimit</h4>
            <ul class="varlist">
              <li>Memory grow limit.<pre>Default value is 2/3 of memory_limit php.ini variable
Negative value means no limit</pre></li>
            </ul>
          </li>
          <li>
            <a name="minSize"/>
            <h4><span class="label private">private</span>integer 
                
                $minSize</h4>
            <ul class="varlist">
              <li>Minimum value size to be swapped.<pre>Default value is 16K
Negative value means that memory objects are never swapped</pre></li>
            </ul>
          </li>
          <li>
            <a name="memorySize"/>
            <h4><span class="label private">private</span>integer 
                
                $memorySize</h4>
            <ul class="varlist">
              <li>Overall size of memory, used by values</li>
            </ul>
          </li>
          <li>
            <a name="nextId"/>
            <h4><span class="label private">private</span>integer 
                
                $nextId</h4>
            <ul class="varlist">
              <li>Id for next Zend_Memory object</li>
            </ul>
          </li>
          <li>
            <a name="unloadCandidates"/>
            <h4><span class="label private">private</span>array 
                
                $unloadCandidates</h4>
            <ul class="varlist">
              <li>List of candidates to unload<pre>It also represents objects access history. Last accessed objects are moved to the end of array

array(
    &lt;id&gt; =&gt; &lt;memory container object&gt;,
    ...
     )</pre></li>
            </ul>
          </li>
          <li>
            <a name="sizes"/>
            <h4><span class="label private">private</span>array 
                
                $sizes</h4>
            <ul class="varlist">
              <li>List of object sizes.<pre>This list is used to calculate modification of object sizes

array( &lt;id&gt; =&gt; &lt;size&gt;, ...)</pre></li>
            </ul>
          </li>
          <li>
            <a name="lastModified"/>
            <h4><span class="label private">private</span>object 
                
                $lastModified</h4>
            <ul class="varlist">
              <li>Last modified object<pre>It's used to reduce number of calls necessary to trace objects' modifications
Modification is not processed by memory manager until we do not switch to another
object.
So we have to trace only _first_ object modification and do nothing for others</pre></li>
            </ul>
          </li>
          <li>
            <a name="managerId"/>
            <h4><span class="label private">private</span>integer 
                
                $managerId</h4>
            <ul class="varlist">
              <li>Unique memory manager id</li>
            </ul>
          </li>
        </ul>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">( <span class="param-type"><a href="../interfaces/Zend_Cache_Storage_StorageInterface.xhtml">Zend\Cache\Storage\StorageInterface</a></span><strong> $cache</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Memory manager constructor<pre>If cache is not specified, then memory objects are never swapped</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$cache</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <h3>Destructor</h3>
        <ul class="varlist">
          <li>
            <a name="__destruct"/>
            <h4><span class="label public">public</span>__destruct<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Object destructor<pre>Clean up cache storage</pre></li>
            </p>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="create"/>
            <h4><span class="label public">public</span>create<span style="font-size:90%;">( <span class="param-type">string</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create new Zend_Memory value container</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\ExceptionInterface</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="createLocked"/>
            <h4><span class="label public">public</span>createLocked<span style="font-size:90%;">( <span class="param-type">string</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create new Zend_Memory value container, which has value always locked in memory</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\ExceptionInterface</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMemoryLimit"/>
            <h4><span class="label public">public</span>getMemoryLimit<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get memory grow limit</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getMinSize"/>
            <h4><span class="label public">public</span>getMinSize<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get minimum size of values, which may be swapped</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="load"/>
            <h4><span class="label public">public</span>load<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Memory_Container_Movable.xhtml">Zend\Memory\Container\Movable</a></span><strong> $container</strong>, <span class="param-type">integer</span><strong> $id</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Load value from swap file.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$container</code> - </li>
                <li><code>$id</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="processUpdate"/>
            <h4><span class="label public">public</span>processUpdate<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Memory_Container_Movable.xhtml">Zend\Memory\Container\Movable</a></span><strong> $container</strong>, <span class="param-type">integer</span><strong> $id</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Process value update</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$container</code> - </li>
                <li><code>$id</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setMemoryLimit"/>
            <h4><span class="label public">public</span>setMemoryLimit<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $newLimit</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set memory grow limit</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$newLimit</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setMinSize"/>
            <h4><span class="label public">public</span>setMinSize<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $newSize</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set minimum size of values, which may be swapped</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$newSize</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="unlink"/>
            <h4><span class="label public">public</span>unlink<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Memory_Container_Movable.xhtml">Zend\Memory\Container\Movable</a></span><strong> $container</strong>, <span class="param-type">integer</span><strong> $id</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Unlink value container from memory manager<pre>Used by Memory container destroy() method</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$container</code> - </li>
                <li><code>$id</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_commit"/>
            <h4><span class="label private">private</span>_commit<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Commit modified object and put it back to the loaded objects list</li>
            </p>
          </li>
          <li>
            <a name="_create"/>
            <h4><span class="label private">private</span>_create<span style="font-size:90%;">( <span class="param-type">string</span><strong> $value</strong>, <span class="param-type">boolean</span><strong> $locked</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Create new Zend_Memory object</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
                <li><code>$locked</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\Zend\Memory\Exception\ExceptionInterface</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_generateMemManagerId"/>
            <h4><span class="label private">private</span>_generateMemManagerId<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>This function is intended to generate unique id, used by memory manager</li>
            </p>
          </li>
          <li>
            <a name="_swap"/>
            <h4><span class="label private">private</span>_swap<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Memory_Container_Movable.xhtml">Zend\Memory\Container\Movable</a></span><strong> $container</strong>, <span class="param-type">integer</span><strong> $id</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Swap object data to disk Actually swaps data or only unloads it from memory, if object is not changed since last swap</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$container</code> - </li>
                <li><code>$id</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="_swapCheck"/>
            <h4><span class="label private">private</span>_swapCheck<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Check and swap objects if necessary</li>
            </p>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
