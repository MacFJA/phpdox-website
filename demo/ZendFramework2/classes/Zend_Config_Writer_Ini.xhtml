<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Config\Writer\Ini - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#nestSeparator">$nestSeparator</a>
          </li>
          <li>
            <a href="#renderWithoutSections">$renderWithoutSections</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#addBranch">addBranch</a>
          </li>
          <li>
            <a href="#getNestSeparator">getNestSeparator</a>
          </li>
          <li>
            <a href="#prepareValue">prepareValue</a>
          </li>
          <li>
            <a href="#processConfig">processConfig</a>
          </li>
          <li>
            <a href="#processConfig">processConfig</a>
          </li>
          <li>
            <a href="#setNestSeparator">setNestSeparator</a>
          </li>
          <li>
            <a href="#setRenderWithoutSectionsFlags">setRenderWithoutSectionsFlags</a>
          </li>
          <li>
            <a href="#shouldRenderWithoutSections">shouldRenderWithoutSections</a>
          </li>
          <li>
            <a href="#sortRootElements">sortRootElements</a>
          </li>
          <li>
            <a href="#toFile">toFile</a>
          </li>
          <li>
            <a href="#toString">toString</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Config\Writer\</span>Ini</h2>
        <div class="file-notice">
          <p/>
        </div>
        <ul class="fileinfos"/>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="nestSeparator"/>
            <h4><span class="label protected">protected</span>string 
                
                $nestSeparator</h4>
            <ul class="varlist">
              <li>Separator for nesting levels of configuration data identifiers.</li>
            </ul>
          </li>
          <li>
            <a name="renderWithoutSections"/>
            <h4><span class="label protected">protected</span>object 
                
                $renderWithoutSections</h4>
            <ul class="varlist">
              <li>If true the INI string is rendered in the global namespace without sections.</li>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="getNestSeparator"/>
            <h4><span class="label public">public</span>getNestSeparator<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get nest separator.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="processConfig"/>
            <h4><span class="label public">public</span>processConfig<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $config</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>processConfig(): defined by AbstractWriter.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$config</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setNestSeparator"/>
            <h4><span class="label public">public</span>setNestSeparator<span style="font-size:90%;">( <span class="param-type">string</span><strong> $separator</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set nest separator.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$separator</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setRenderWithoutSectionsFlags"/>
            <h4><span class="label public">public</span>setRenderWithoutSectionsFlags<span style="font-size:90%;">( <span class="param-type"><span title="bool">bool</span></span><strong> $withoutSections</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Set if rendering should occur without sections or not.<pre>If set to true, the INI file is rendered without sections completely
into the global namespace of the INI file.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$withoutSections</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="shouldRenderWithoutSections"/>
            <h4><span class="label public">public</span>shouldRenderWithoutSections<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Return whether the writer should render without sections.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="toFile"/>
            <h4><span class="label public">public</span>toFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $filename</strong>, <span class="param-type">mixed</span><strong> $config</strong>, <span class="param-type">boolean</span><strong> $exclusiveLock</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>toFile(): defined by Writer interface.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$filename</code> - </li>
                <li><code>$config</code> - </li>
                <li><code>$exclusiveLock</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
                <li>
                  <code>Exception\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="toString"/>
            <h4><span class="label public">public</span>toString<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $config</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>toString(): defined by Writer interface.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$config</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="addBranch"/>
            <h4><span class="label protected">protected</span>addBranch<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $config</strong>, <span class="param-type">Array</span><strong> $parents</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Add a branch to an INI string recursively.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$config</code> - </li>
                <li><code>$parents</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="prepareValue"/>
            <h4><span class="label protected">protected</span>prepareValue<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Prepare a value for INI.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\RuntimeException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="processConfig"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>processConfig<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $config</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$config</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="sortRootElements"/>
            <h4><span class="label protected">protected</span>sortRootElements<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $config</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Root elements that are not assigned to any section needs to be on the top of config.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$config</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
