<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>zf - Zend\Config\Processor\Queue - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">zf - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__clone">__clone</a>
          </li>
          <li>
            <a href="#contains">contains</a>
          </li>
          <li>
            <a href="#count">count</a>
          </li>
          <li>
            <a href="#extract">extract</a>
          </li>
          <li>
            <a href="#getIterator">getIterator</a>
          </li>
          <li>
            <a href="#getQueue">getQueue</a>
          </li>
          <li>
            <a href="#hasPriority">hasPriority</a>
          </li>
          <li>
            <a href="#insert">insert</a>
          </li>
          <li>
            <a href="#isEmpty">isEmpty</a>
          </li>
          <li>
            <a href="#process">process</a>
          </li>
          <li>
            <a href="#processValue">processValue</a>
          </li>
          <li>
            <a href="#remove">remove</a>
          </li>
          <li>
            <a href="#serialize">serialize</a>
          </li>
          <li>
            <a href="#setInternalQueueClass">setInternalQueueClass</a>
          </li>
          <li>
            <a href="#toArray">toArray</a>
          </li>
          <li>
            <a href="#top">top</a>
          </li>
          <li>
            <a href="#unserialize">unserialize</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">Zend\Config\Processor\</span>Queue</h2>
        <div class="file-notice">
          <p/>
        </div>
        <ul class="fileinfos"/>
        <h3>Implements</h3>
        <ul class="varlist">
          <li>
            <a href="../interfaces/Zend_Config_Processor_ProcessorInterface.xhtml">Zend\Config\Processor\ProcessorInterface</a>
          </li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist"/>
        <h3>Members</h3>
        <ul class="varlist"/>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="__clone"/>
            <h4><span class="label public">public</span>__clone<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Add support for deep cloning</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="contains"/>
            <h4><span class="label public">public</span>contains<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $datum</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Does the queue contain the given datum?</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$datum</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="count"/>
            <h4><span class="label public">public</span>count<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>How many items are in the queue?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="extract"/>
            <h4><span class="label public">public</span>extract<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Extract a node from the inner queue and sift up</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getIterator"/>
            <h4><span class="label public">public</span>getIterator<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Retrieve the inner iterator<pre>SplPriorityQueue acts as a heap, which typically implies that as items
are iterated, they are also removed. This does not work for situations
where the queue may be iterated multiple times. As such, this class
aggregates the values, and also injects an SplPriorityQueue. This method
retrieves the inner queue object, and clones it for purposes of
iteration.</pre></li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="hasPriority"/>
            <h4><span class="label public">public</span>hasPriority<span style="font-size:90%;">( <span class="param-type">int</span><strong> $priority</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Does the queue have an item with the given priority?</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$priority</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="insert"/>
            <h4><span class="label public">public</span>insert<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $data</strong>, <span class="param-type">integer</span><strong> $priority</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Insert an item into the queue<pre>Priority defaults to 1 (low priority) if none provided.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$data</code> - </li>
                <li><code>$priority</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isEmpty"/>
            <h4><span class="label public">public</span>isEmpty<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Is the queue empty?</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="process"/>
            <h4><span class="label public">public</span>process<span style="font-size:90%;">( <span class="param-type"><a href="../classes/Zend_Config_Config.xhtml">Zend\Config\Config</a></span><strong> $config</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Process the whole config structure with each parser in the queue.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$config</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>Exception\InvalidArgumentException</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="processValue"/>
            <h4><span class="label public">public</span>processValue<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Process a single value</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="remove"/>
            <h4><span class="label public">public</span>remove<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $datum</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Remove an item from the queue<pre>This is different than ; its purpose is to dequeue an
item.
This operation is potentially expensive, as it requires
re-initialization and re-population of the inner queue.
Note: this removes the first item matching the provided item found. If
the same item has been added multiple times, it will not remove other
instances.
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$datum</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li>False if the item was not found, true otherwise.</li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="serialize"/>
            <h4><span class="label public">public</span>serialize<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Serialize the data structure</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setInternalQueueClass"/>
            <h4><span class="label public">public</span>setInternalQueueClass<span style="font-size:90%;">( <span class="param-type">string</span><strong> $class</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Specify the internal queue class<pre>Please see  for details on the necessity of an
internal queue class. The class provided should extend SplPriorityQueue.
</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$class</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="toArray"/>
            <h4><span class="label public">public</span>toArray<span style="font-size:90%;">( <span class="param-type">int</span><strong> $flag</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Serialize to an array<pre>By default, returns only the item data, and in the order registered (not
sorted). You may provide one of the EXTR_* flags as an argument, allowing
the ability to return priorities or both data and priority.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$flag</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="top"/>
            <h4><span class="label public">public</span>top<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Peek at the top node in the queue, based on priority.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="unserialize"/>
            <h4><span class="label public">public</span>unserialize<span style="font-size:90%;">( <span class="param-type">string</span><strong> $data</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Unserialize a string into a PriorityQueue object<pre>Serialization format is compatible with </pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$data</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getQueue"/>
            <h4><span class="label protected">protected</span>getQueue<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the inner priority queue instance</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>\DomainException</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
