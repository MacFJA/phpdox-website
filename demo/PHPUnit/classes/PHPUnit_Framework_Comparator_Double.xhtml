<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>PHPUnit - PHPUnit_Framework_Comparator_Double - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">PHPUnit - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Constants</h3>
        <ul>
          <li>
            <a href="#EPSILON">EPSILON</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#__construct">__construct</a>
          </li>
          <li>
            <a href="#accepts">accepts</a>
          </li>
          <li>
            <a href="#accepts">accepts</a>
          </li>
          <li>
            <a href="#accepts">accepts</a>
          </li>
          <li>
            <a href="#accepts">accepts</a>
          </li>
          <li>
            <a href="#assertEquals">assertEquals</a>
          </li>
          <li>
            <a href="#assertEquals">assertEquals</a>
          </li>
          <li>
            <a href="#assertEquals">assertEquals</a>
          </li>
          <li>
            <a href="#assertEquals">assertEquals</a>
          </li>
          <li>
            <a href="#setFactory">setFactory</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">\</span>PHPUnit_Framework_Comparator_Double</h2>
        <div class="file-notice">
          <p>Compares doubles for equality.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Bernhard Schussek &lt;bschussek@2bepublished.at&gt;</li>
          <li><b>Copyright: </b>2001-2013 Sebastian Bergmann &lt;sebastian@phpunit.de&gt;</li>
          <li><b>License: </b>http://www.opensource.org/licenses/BSD-3-Clause  The BSD 3-Clause License</li>
        </ul>
        <h3>Constants</h3>
        <ul class="varlist">
          <li><a name="EPSILON"/>EPSILON = 0.0000000001<em> float</em><p><li>Smallest value available in PHP.</li></p><hr/></li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist"/>
        <h3>Constructor</h3>
        <ul class="varlist">
          <li>
            <a name="__construct"/>
            <h4><span class="label public">public</span>__construct<span style="font-size:90%;">(  )</span></h4>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="accepts"/>
            <h4><span class="label public">public</span>accepts<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the comparator can compare two values.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - The first value to compare</li>
                <li><code>$actual</code> - The second value to compare</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="accepts"/>
            <h4><span class="label public">public</span>accepts<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the comparator can compare two values.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - The first value to compare</li>
                <li><code>$actual</code> - The second value to compare</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="accepts"/>
            <h4><span class="label public">public</span>accepts<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the comparator can compare two values.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - The first value to compare</li>
                <li><code>$actual</code> - The second value to compare</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="accepts"/>
            <h4><span class="label true">true</span><span class="label public">public</span>accepts<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns whether the comparator can compare two values.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - The first value to compare</li>
                <li><code>$actual</code> - The second value to compare</li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertEquals"/>
            <h4><span class="label public">public</span>assertEquals<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">integer</span><strong> $delta</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $canonicalize</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $ignoreCase</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two values are equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - The first value to compare</li>
                <li><code>$actual</code> - The second value to compare</li>
                <li><code>$delta</code> - The allowed numerical distance between two values to</li>
                <li><code>$canonicalize</code> - If set to TRUE, arrays are sorted before</li>
                <li><code>$ignoreCase</code> - If set to TRUE, upper- and lowercasing is</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_ComparisonFailure Thrown when the comparison</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertEquals"/>
            <h4><span class="label public">public</span>assertEquals<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">integer</span><strong> $delta</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $canonicalize</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $ignoreCase</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two values are equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - The first value to compare</li>
                <li><code>$actual</code> - The second value to compare</li>
                <li><code>$delta</code> - The allowed numerical distance between two values to</li>
                <li><code>$canonicalize</code> - If set to TRUE, arrays are sorted before</li>
                <li><code>$ignoreCase</code> - If set to TRUE, upper- and lowercasing is</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_ComparisonFailure Thrown when the comparison</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertEquals"/>
            <h4><span class="label public">public</span>assertEquals<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">integer</span><strong> $delta</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $canonicalize</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $ignoreCase</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two values are equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - The first value to compare</li>
                <li><code>$actual</code> - The second value to compare</li>
                <li><code>$delta</code> - The allowed numerical distance between two values to</li>
                <li><code>$canonicalize</code> - If set to TRUE, arrays are sorted before</li>
                <li><code>$ignoreCase</code> - If set to TRUE, upper- and lowercasing is</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_ComparisonFailure Thrown when the comparison</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertEquals"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertEquals<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">integer</span><strong> $delta</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $canonicalize</strong>, <span class="param-type"><span title="bool">bool</span></span><strong> $ignoreCase</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two values are equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - The first value to compare</li>
                <li><code>$actual</code> - The second value to compare</li>
                <li><code>$delta</code> - The allowed numerical distance between two values to</li>
                <li><code>$canonicalize</code> - If set to TRUE, arrays are sorted before</li>
                <li><code>$ignoreCase</code> - If set to TRUE, upper- and lowercasing is</li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_ComparisonFailure Thrown when the comparison</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="setFactory"/>
            <h4><span class="label public">public</span>setFactory<span style="font-size:90%;">( <span class="param-type"><span title="\\PHPUnit_Framework_ComparatorFactory">PHPUnit_Framework_ComparatorFactory</span></span><strong> $factory</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$factory</code> - </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
