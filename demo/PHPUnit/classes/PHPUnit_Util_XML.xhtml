<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>PHPUnit - PHPUnit_Util_XML - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">PHPUnit - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#assertValidKeys">assertValidKeys</a>
          </li>
          <li>
            <a href="#convertSelectToTag">convertSelectToTag</a>
          </li>
          <li>
            <a href="#cssSelect">cssSelect</a>
          </li>
          <li>
            <a href="#findNodes">findNodes</a>
          </li>
          <li>
            <a href="#getDescendants">getDescendants</a>
          </li>
          <li>
            <a href="#getElementsByCaseInsensitiveTagName">getElementsByCaseInsensitiveTagName</a>
          </li>
          <li>
            <a href="#getNodeText">getNodeText</a>
          </li>
          <li>
            <a href="#load">load</a>
          </li>
          <li>
            <a href="#loadFile">loadFile</a>
          </li>
          <li>
            <a href="#nodeToText">nodeToText</a>
          </li>
          <li>
            <a href="#prepareString">prepareString</a>
          </li>
          <li>
            <a href="#removeCharacterDataNodes">removeCharacterDataNodes</a>
          </li>
          <li>
            <a href="#xmlToVariable">xmlToVariable</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">\</span>PHPUnit_Util_XML</h2>
        <div class="file-notice">
          <p>XML helpers.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Sebastian Bergmann &lt;sebastian@phpunit.de&gt;</li>
          <li><b>Copyright: </b>2001-2013 Sebastian Bergmann &lt;sebastian@phpunit.de&gt;</li>
          <li><b>License: </b>http://www.opensource.org/licenses/BSD-3-Clause  The BSD 3-Clause License</li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="assertValidKeys"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertValidKeys<span style="font-size:90%;">( <span class="param-type">Array</span><strong> $hash</strong>, <span class="param-type">Array</span><strong> $validKeys</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Validate list of keys in the associative array.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$hash</code> - </li>
                <li><code>$validKeys</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_Exception</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="convertSelectToTag"/>
            <h4><span class="label true">true</span><span class="label public">public</span>convertSelectToTag<span style="font-size:90%;">( <span class="param-type">string</span><strong> $selector</strong>, <span class="param-type">mixed</span><strong> $content</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Parse a CSS selector into an associative array suitable for use with findNodes().</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$selector</code> - </li>
                <li><code>$content</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="cssSelect"/>
            <h4><span class="label true">true</span><span class="label public">public</span>cssSelect<span style="font-size:90%;">( <span class="param-type">array</span><strong> $selector</strong>, <span class="param-type">string</span><strong> $content</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">boolean</span><strong> $isHtml</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Parse an $actual document and return an array of DOMNodes matching the CSS $selector.  If an error occurs, it will return FALSE.<pre>To only return nodes containing a certain content, give
the $content to match as a string.  Otherwise, setting
$content to TRUE will return all nodes matching $selector.

The $actual document may be a DOMDocument or a string
containing XML or HTML, identified by $isHtml.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$selector</code> - </li>
                <li><code>$content</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$isHtml</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="findNodes"/>
            <h4><span class="label true">true</span><span class="label public">public</span>findNodes<span style="font-size:90%;">( <span class="param-type"><span title="\\DOMDocument">DOMDocument</span></span><strong> $dom</strong>, <span class="param-type">Array</span><strong> $options</strong>, <span class="param-type">boolean</span><strong> $isHtml</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Parse out the options from the tag using DOM object tree.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$dom</code> - </li>
                <li><code>$options</code> - </li>
                <li><code>$isHtml</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="load"/>
            <h4><span class="label true">true</span><span class="label public">public</span>load<span style="font-size:90%;">( <span class="param-type"><span title="string|DOMDocument">string|DOMDocument</span></span><strong> $actual</strong>, <span class="param-type">boolean</span><strong> $isHtml</strong>, <span class="param-type">string</span><strong> $filename</strong>, <span class="param-type">boolean</span><strong> $xinclude</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Load an $actual document into a DOMDocument.  This is called from the selector assertions.<pre>If $actual is already a DOMDocument, it is returned with
no changes.  Otherwise, $actual is loaded into a new DOMDocument
as either HTML or XML, depending on the value of $isHtml. If $isHtml is
false and $xinclude is true, xinclude is performed on the loaded
DOMDocument.

Note: prior to PHPUnit 3.3.0, this method loaded a file and
not a string as it currently does.  To load a file into a
DOMDocument, use loadFile() instead.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$actual</code> - </li>
                <li><code>$isHtml</code> - </li>
                <li><code>$filename</code> - </li>
                <li><code>$xinclude</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="loadFile"/>
            <h4><span class="label true">true</span><span class="label public">public</span>loadFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $filename</strong>, <span class="param-type">boolean</span><strong> $isHtml</strong>, <span class="param-type">boolean</span><strong> $xinclude</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Loads an XML (or HTML) file into a DOMDocument object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$filename</code> - </li>
                <li><code>$isHtml</code> - </li>
                <li><code>$xinclude</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="nodeToText"/>
            <h4><span class="label true">true</span><span class="label public">public</span>nodeToText<span style="font-size:90%;">( <span class="param-type"><span title="\\DOMNode">DOMNode</span></span><strong> $node</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$node</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="prepareString"/>
            <h4><span class="label true">true</span><span class="label public">public</span>prepareString<span style="font-size:90%;">( <span class="param-type">string</span><strong> $string</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Escapes a string for the use in XML documents Any Unicode character is allowed, excluding the surrogate blocks, FFFE, and FFFF (not even as character reference).<pre>See http://www.w3.org/TR/xml/#charsets</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$string</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="removeCharacterDataNodes"/>
            <h4><span class="label true">true</span><span class="label public">public</span>removeCharacterDataNodes<span style="font-size:90%;">( <span class="param-type"><span title="\\DOMNode">DOMNode</span></span><strong> $node</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li/>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$node</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="xmlToVariable"/>
            <h4><span class="label true">true</span><span class="label public">public</span>xmlToVariable<span style="font-size:90%;">( <span class="param-type"><span title="\\DOMElement">DOMElement</span></span><strong> $element</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>"Convert" a DOMElement object into a PHP variable.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$element</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getDescendants"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>getDescendants<span style="font-size:90%;">( <span class="param-type"><span title="\\DOMNode">DOMNode</span></span><strong> $node</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Recursively get flat array of all descendants of this node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$node</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getElementsByCaseInsensitiveTagName"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>getElementsByCaseInsensitiveTagName<span style="font-size:90%;">( <span class="param-type"><span title="\\DOMDocument">DOMDocument</span></span><strong> $dom</strong>, <span class="param-type">string</span><strong> $tag</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Gets elements by case insensitive tagname.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$dom</code> - </li>
                <li><code>$tag</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getNodeText"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>getNodeText<span style="font-size:90%;">( <span class="param-type"><span title="\\DOMNode">DOMNode</span></span><strong> $node</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Get the text value of this node's child text node.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$node</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
