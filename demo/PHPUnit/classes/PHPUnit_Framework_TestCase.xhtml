<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
  <head>
    <title>phpDox - PHPUnit_Framework_TestCase</title>
    <link rel="stylesheet" type="text/css" href="../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../classes.xhtml">Classes</a>
        </li>
        <li class="separator">
          <a href="../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../classes.xhtml">Classes</a>
          </li>
          <li class="separator">PHPUnit_Framework_TestCase</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#hierarchy">Hierarchy</a>
          </li>
          <li>
            <a href="#violations">Violations</a>
          </li>
          <li>
            <a href="#members">Members</a>
          </li>
          <li>
            <a href="#methods">Methods</a>
          </li>
          <li>
            <a href="#history">History</a>
          </li>
          <li>
            <a href="../source/Framework/TestCase.php.xhtml#line98">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1 id="introduction"><small>\</small>PHPUnit_Framework_TestCase</h1>
        <h4>A TestCase defines the fixture to run multiple tests.</h4>
        <p>To define a TestCase<br/><br/>1) Implement a subclass of PHPUnit_Framework_TestCase.<br/>2) Define instance variables that store the state of the fixture.<br/>3) Initialize the fixture state by overriding setUp().<br/>4) Clean-up after a test by overriding tearDown().<br/><br/>Each test runs in its own fixture so there can be no side effects<br/>among test runs.<br/><br/>Here is an example:<br/><br/>&lt;code&gt;<br/>&lt;?php<br/>class MathTest extends PHPUnit_Framework_TestCase<br/>{<br/>public $value1;<br/>public $value2;<br/><br/>protected function setUp()<br/>{<br/>$this-&gt;value1 = 2;<br/>$this-&gt;value2 = 3;<br/>}<br/>}<br/>?&gt;<br/>&lt;/code&gt;<br/><br/>For each test implement a method which interacts with the fixture.<br/>Verify the expected results with assertions specified by calling<br/>assert with a boolean.<br/><br/>&lt;code&gt;<br/>&lt;?php<br/>public function testPass()<br/>{<br/>$this-&gt;assertTrue($this-&gt;value1 + $this-&gt;value2 == 5);<br/>}<br/>?&gt;<br/>&lt;/code&gt;</p>
        <ul>
          <li>Author: Sebastian Bergmann &lt;sebastian@phpunit.de&gt;</li>
          <li>Copyright: 2001-2014 Sebastian Bergmann &lt;sebastian@phpunit.de&gt;</li>
          <li>License: http://www.opensource.org/licenses/BSD-3-Clause  The BSD 3-Clause License</li>
        </ul>
        <h2 id="synopsis">Synopsis</h2>
        <div class="synopsis">class PHPUnit_Framework_TestCase
                extends <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert.xhtml">PHPUnit_Framework_Assert</a>
                implements
                <a title="PHPUnit_Framework_Test" href="../interfaces/PHPUnit_Framework_Test.xhtml">PHPUnit_Framework_Test</a>,<a title="PHPUnit_Framework_SelfDescribing" href="../interfaces/PHPUnit_Framework_SelfDescribing.xhtml">PHPUnit_Framework_SelfDescribing</a>
            {<br/><ul class="none"><li>// members</li><li>protected boolean <a href="#members">$backupGlobals</a>;
                    </li><li>protected array <a href="#members">$backupGlobalsBlacklist</a>;
                    </li><li>protected boolean <a href="#members">$backupStaticAttributes</a>;
                    </li><li>protected array <a href="#members">$backupStaticAttributesBlacklist</a>;
                    </li><li>protected boolean <a href="#members">$runTestInSeparateProcess</a>;
                    </li><li>protected boolean <a href="#members">$preserveGlobalState</a>;
                    </li><li>private boolean <a href="#members">$inIsolation</a>;
                    </li><li>private array <a href="#members">$data</a>;
                    </li><li>private string <a href="#members">$dataName</a>;
                    </li><li>private boolean <a href="#members">$useErrorHandler</a>;
                    </li><li>private mixed <a href="#members">$expectedException</a>;
                    </li><li>private string <a href="#members">$expectedExceptionMessage</a>;
                    </li><li>private string <a href="#members">$expectedExceptionMessageRegExp</a>;
                    </li><li>private integer <a href="#members">$expectedExceptionCode</a>;
                    </li><li>private string <a href="#members">$name</a>;
                    </li><li>private array <a href="#members">$dependencies</a>;
                    </li><li>private array <a href="#members">$dependencyInput</a>;
                    </li><li>private array <a href="#members">$iniSettings</a>;
                    </li><li>private array <a href="#members">$locale</a>;
                    </li><li>private array <a href="#members">$mockObjects</a>;
                    </li><li>private array <a href="#members">$mockObjectGenerator</a>;
                    </li><li>private integer <a href="#members">$status</a>;
                    </li><li>private string <a href="#members">$statusMessage</a>;
                    </li><li>private integer <a href="#members">$numAssertions</a>;
                    </li><li>private <span title="PHPUnit_Framework_TestResult">PHPUnit_Framework_TestResult</span> <a href="#members">$result</a>;
                    </li><li>private mixed <a href="#members">$testResult</a>;
                    </li><li>private string <a href="#members">$output</a>;
                    </li><li>private string <a href="#members">$outputExpectedRegex</a>;
                    </li><li>private string <a href="#members">$outputExpectedString</a>;
                    </li><li>private <span title="bool">bool</span> <a href="#members">$hasPerformedExpectationsOnOutput</a>;
                    </li><li>private mixed <a href="#members">$outputCallback</a>;
                    </li><li>private boolean <a href="#members">$outputBufferingActive</a>;
                    </li><li>private integer <a href="#members">$outputBufferingLevel</a>;
                    </li></ul><ul class="none"><li>// methods</li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/__construct.xhtml">__construct</a>()
                    </li><li>public string <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/toString.xhtml">toString</a>()
                    </li><li>public integer <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/count.xhtml">count</a>()
                    </li><li>public array <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getAnnotations.xhtml">getAnnotations</a>()
                    </li><li>public string <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getName.xhtml">getName</a>()
                    </li><li>public integer <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getSize.xhtml">getSize</a>()
                    </li><li>public string <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getActualOutput.xhtml">getActualOutput</a>()
                    </li><li>public boolean <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/hasOutput.xhtml">hasOutput</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/expectOutputRegex.xhtml">expectOutputRegex</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/expectOutputString.xhtml">expectOutputString</a>()
                    </li><li>public bool <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/hasPerformedExpectationsOnOutput.xhtml">hasPerformedExpectationsOnOutput</a>()
                    </li><li>public string <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getExpectedException.xhtml">getExpectedException</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setExpectedException.xhtml">setExpectedException</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setExpectedExceptionRegExp.xhtml">setExpectedExceptionRegExp</a>()
                    </li><li>protected void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setExpectedExceptionFromAnnotation.xhtml">setExpectedExceptionFromAnnotation</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setUseErrorHandler.xhtml">setUseErrorHandler</a>()
                    </li><li>protected void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setUseErrorHandlerFromAnnotation.xhtml">setUseErrorHandlerFromAnnotation</a>()
                    </li><li>protected void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/checkRequirements.xhtml">checkRequirements</a>()
                    </li><li>public integer <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getStatus.xhtml">getStatus</a>()
                    </li><li>public string <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getStatusMessage.xhtml">getStatusMessage</a>()
                    </li><li>public boolean <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/hasFailed.xhtml">hasFailed</a>()
                    </li><li>public PHPUnit_Framework_TestResult <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/run.xhtml">run</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/runBare.xhtml">runBare</a>()
                    </li><li>protected mixed <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/runTest.xhtml">runTest</a>()
                    </li><li>protected void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/verifyMockObjects.xhtml">verifyMockObjects</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setName.xhtml">setName</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setDependencies.xhtml">setDependencies</a>()
                    </li><li>public boolean <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/hasDependencies.xhtml">hasDependencies</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setDependencyInput.xhtml">setDependencyInput</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setBackupGlobals.xhtml">setBackupGlobals</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setBackupStaticAttributes.xhtml">setBackupStaticAttributes</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setRunTestInSeparateProcess.xhtml">setRunTestInSeparateProcess</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setPreserveGlobalState.xhtml">setPreserveGlobalState</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setInIsolation.xhtml">setInIsolation</a>()
                    </li><li>public boolean <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/isInIsolation.xhtml">isInIsolation</a>()
                    </li><li>public mixed <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getResult.xhtml">getResult</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setResult.xhtml">setResult</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setOutputCallback.xhtml">setOutputCallback</a>()
                    </li><li>public PHPUnit_Framework_TestResult <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getTestResultObject.xhtml">getTestResultObject</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setTestResultObject.xhtml">setTestResultObject</a>()
                    </li><li>protected void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/iniSet.xhtml">iniSet</a>()
                    </li><li>protected void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setLocale.xhtml">setLocale</a>()
                    </li><li>public PHPUnit_Framework_MockObject_MockObject <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getMock.xhtml">getMock</a>()
                    </li><li>public PHPUnit_Framework_MockObject_MockBuilder <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getMockBuilder.xhtml">getMockBuilder</a>()
                    </li><li>protected string <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getMockClass.xhtml">getMockClass</a>()
                    </li><li>public PHPUnit_Framework_MockObject_MockObject <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getMockForAbstractClass.xhtml">getMockForAbstractClass</a>()
                    </li><li>protected PHPUnit_Framework_MockObject_MockObject <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getMockFromWsdl.xhtml">getMockFromWsdl</a>()
                    </li><li>public PHPUnit_Framework_MockObject_MockObject <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getMockForTrait.xhtml">getMockForTrait</a>()
                    </li><li>protected  <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getObjectForTrait.xhtml">getObjectForTrait</a>()
                    </li><li>public void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/addToAssertionCount.xhtml">addToAssertionCount</a>()
                    </li><li>public integer <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getNumAssertions.xhtml">getNumAssertions</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/any.xhtml">any</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Matcher_InvokedCount <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/never.xhtml">never</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/atLeast.xhtml">atLeast</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/atLeastOnce.xhtml">atLeastOnce</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Matcher_InvokedCount <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/once.xhtml">once</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Matcher_InvokedCount <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/exactly.xhtml">exactly</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/atMost.xhtml">atMost</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/at.xhtml">at</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Stub_Return <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/returnValue.xhtml">returnValue</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Stub_ReturnValueMap <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/returnValueMap.xhtml">returnValueMap</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Stub_ReturnArgument <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/returnArgument.xhtml">returnArgument</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Stub_ReturnCallback <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/returnCallback.xhtml">returnCallback</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Stub_ReturnSelf <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/returnSelf.xhtml">returnSelf</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Stub_Exception <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/throwException.xhtml">throwException</a>()
                    </li><li>public static PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/onConsecutiveCalls.xhtml">onConsecutiveCalls</a>()
                    </li><li>protected string <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/dataToString.xhtml">dataToString</a>()
                    </li><li>protected string <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getDataSetAsString.xhtml">getDataSetAsString</a>()
                    </li><li>protected PHPUnit_Framework_TestResult <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/createResult.xhtml">createResult</a>()
                    </li><li>protected void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/handleDependencies.xhtml">handleDependencies</a>()
                    </li><li>public static void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setUpBeforeClass.xhtml">setUpBeforeClass</a>()
                    </li><li>protected void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setUp.xhtml">setUp</a>()
                    </li><li>protected void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/assertPreConditions.xhtml">assertPreConditions</a>()
                    </li><li>protected void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/assertPostConditions.xhtml">assertPostConditions</a>()
                    </li><li>protected void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/tearDown.xhtml">tearDown</a>()
                    </li><li>public static void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/tearDownAfterClass.xhtml">tearDownAfterClass</a>()
                    </li><li>protected void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/onNotSuccessfulTest.xhtml">onNotSuccessfulTest</a>()
                    </li><li>protected void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/prepareTemplate.xhtml">prepareTemplate</a>()
                    </li><li>protected PHPUnit_Framework_MockObject_Generator <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getMockObjectGenerator.xhtml">getMockObjectGenerator</a>()
                    </li><li>private void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/startOutputBuffering.xhtml">startOutputBuffering</a>()
                    </li><li>private void <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/stopOutputBuffering.xhtml">stopOutputBuffering</a>()
                    </li></ul><ul class="none"><li>// Inherited methods from <span title="PHPUnit_Framework_Assert">PHPUnit_Framework_Assert</span></li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertArrayHasKey.xhtml">assertArrayHasKey</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertArraySubset.xhtml">assertArraySubset</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertArrayNotHasKey.xhtml">assertArrayNotHasKey</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertContains.xhtml">assertContains</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeContains.xhtml">assertAttributeContains</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotContains.xhtml">assertNotContains</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotContains.xhtml">assertAttributeNotContains</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertContainsOnly.xhtml">assertContainsOnly</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertContainsOnlyInstancesOf.xhtml">assertContainsOnlyInstancesOf</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeContainsOnly.xhtml">assertAttributeContainsOnly</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotContainsOnly.xhtml">assertNotContainsOnly</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotContainsOnly.xhtml">assertAttributeNotContainsOnly</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertCount.xhtml">assertCount</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeCount.xhtml">assertAttributeCount</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotCount.xhtml">assertNotCount</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotCount.xhtml">assertAttributeNotCount</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertEquals.xhtml">assertEquals</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeEquals.xhtml">assertAttributeEquals</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotEquals.xhtml">assertNotEquals</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotEquals.xhtml">assertAttributeNotEquals</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertEmpty.xhtml">assertEmpty</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeEmpty.xhtml">assertAttributeEmpty</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotEmpty.xhtml">assertNotEmpty</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotEmpty.xhtml">assertAttributeNotEmpty</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertGreaterThan.xhtml">assertGreaterThan</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeGreaterThan.xhtml">assertAttributeGreaterThan</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertGreaterThanOrEqual.xhtml">assertGreaterThanOrEqual</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeGreaterThanOrEqual.xhtml">assertAttributeGreaterThanOrEqual</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertLessThan.xhtml">assertLessThan</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeLessThan.xhtml">assertAttributeLessThan</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertLessThanOrEqual.xhtml">assertLessThanOrEqual</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeLessThanOrEqual.xhtml">assertAttributeLessThanOrEqual</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertFileEquals.xhtml">assertFileEquals</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertFileNotEquals.xhtml">assertFileNotEquals</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringEqualsFile.xhtml">assertStringEqualsFile</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringNotEqualsFile.xhtml">assertStringNotEqualsFile</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertFileExists.xhtml">assertFileExists</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertFileNotExists.xhtml">assertFileNotExists</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertTrue.xhtml">assertTrue</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotTrue.xhtml">assertNotTrue</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertFalse.xhtml">assertFalse</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotFalse.xhtml">assertNotFalse</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotNull.xhtml">assertNotNull</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNull.xhtml">assertNull</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertClassHasAttribute.xhtml">assertClassHasAttribute</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertClassNotHasAttribute.xhtml">assertClassNotHasAttribute</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertClassHasStaticAttribute.xhtml">assertClassHasStaticAttribute</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertClassNotHasStaticAttribute.xhtml">assertClassNotHasStaticAttribute</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertObjectHasAttribute.xhtml">assertObjectHasAttribute</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertObjectNotHasAttribute.xhtml">assertObjectNotHasAttribute</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertSame.xhtml">assertSame</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeSame.xhtml">assertAttributeSame</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotSame.xhtml">assertNotSame</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotSame.xhtml">assertAttributeNotSame</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertInstanceOf.xhtml">assertInstanceOf</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeInstanceOf.xhtml">assertAttributeInstanceOf</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotInstanceOf.xhtml">assertNotInstanceOf</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotInstanceOf.xhtml">assertAttributeNotInstanceOf</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertInternalType.xhtml">assertInternalType</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeInternalType.xhtml">assertAttributeInternalType</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotInternalType.xhtml">assertNotInternalType</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotInternalType.xhtml">assertAttributeNotInternalType</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertRegExp.xhtml">assertRegExp</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotRegExp.xhtml">assertNotRegExp</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertSameSize.xhtml">assertSameSize</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotSameSize.xhtml">assertNotSameSize</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringMatchesFormat.xhtml">assertStringMatchesFormat</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringNotMatchesFormat.xhtml">assertStringNotMatchesFormat</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringMatchesFormatFile.xhtml">assertStringMatchesFormatFile</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringNotMatchesFormatFile.xhtml">assertStringNotMatchesFormatFile</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringStartsWith.xhtml">assertStringStartsWith</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringStartsNotWith.xhtml">assertStringStartsNotWith</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringEndsWith.xhtml">assertStringEndsWith</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringEndsNotWith.xhtml">assertStringEndsNotWith</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertXmlFileEqualsXmlFile.xhtml">assertXmlFileEqualsXmlFile</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertXmlFileNotEqualsXmlFile.xhtml">assertXmlFileNotEqualsXmlFile</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertXmlStringEqualsXmlFile.xhtml">assertXmlStringEqualsXmlFile</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertXmlStringNotEqualsXmlFile.xhtml">assertXmlStringNotEqualsXmlFile</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertXmlStringEqualsXmlString.xhtml">assertXmlStringEqualsXmlString</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertXmlStringNotEqualsXmlString.xhtml">assertXmlStringNotEqualsXmlString</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertEqualXMLStructure.xhtml">assertEqualXMLStructure</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertSelectCount.xhtml">assertSelectCount</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertSelectRegExp.xhtml">assertSelectRegExp</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertSelectEquals.xhtml">assertSelectEquals</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertTag.xhtml">assertTag</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotTag.xhtml">assertNotTag</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertThat.xhtml">assertThat</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertJson.xhtml">assertJson</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertJsonStringEqualsJsonString.xhtml">assertJsonStringEqualsJsonString</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertJsonStringNotEqualsJsonString.xhtml">assertJsonStringNotEqualsJsonString</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertJsonStringEqualsJsonFile.xhtml">assertJsonStringEqualsJsonFile</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertJsonStringNotEqualsJsonFile.xhtml">assertJsonStringNotEqualsJsonFile</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertJsonFileNotEqualsJsonFile.xhtml">assertJsonFileNotEqualsJsonFile</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertJsonFileEqualsJsonFile.xhtml">assertJsonFileEqualsJsonFile</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_And <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/logicalAnd.xhtml">logicalAnd</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_Or <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/logicalOr.xhtml">logicalOr</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_Not <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/logicalNot.xhtml">logicalNot</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_Xor <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/logicalXor.xhtml">logicalXor</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_IsAnything <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/anything.xhtml">anything</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_IsTrue <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/isTrue.xhtml">isTrue</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_Callback <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/callback.xhtml">callback</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_IsFalse <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/isFalse.xhtml">isFalse</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_IsJson <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/isJson.xhtml">isJson</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_IsNull <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/isNull.xhtml">isNull</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_Attribute <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/attribute.xhtml">attribute</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_TraversableContains <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/contains.xhtml">contains</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_TraversableContainsOnly <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/containsOnly.xhtml">containsOnly</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_TraversableContainsOnly <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/containsOnlyInstancesOf.xhtml">containsOnlyInstancesOf</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_ArrayHasKey <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/arrayHasKey.xhtml">arrayHasKey</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_IsEqual <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/equalTo.xhtml">equalTo</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_Attribute <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/attributeEqualTo.xhtml">attributeEqualTo</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_IsEmpty <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/isEmpty.xhtml">isEmpty</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_FileExists <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/fileExists.xhtml">fileExists</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_GreaterThan <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/greaterThan.xhtml">greaterThan</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_Or <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/greaterThanOrEqual.xhtml">greaterThanOrEqual</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_ClassHasAttribute <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/classHasAttribute.xhtml">classHasAttribute</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_ClassHasStaticAttribute <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/classHasStaticAttribute.xhtml">classHasStaticAttribute</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_ObjectHasAttribute <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/objectHasAttribute.xhtml">objectHasAttribute</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_IsIdentical <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/identicalTo.xhtml">identicalTo</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_IsInstanceOf <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/isInstanceOf.xhtml">isInstanceOf</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_IsType <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/isType.xhtml">isType</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_LessThan <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/lessThan.xhtml">lessThan</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_Or <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/lessThanOrEqual.xhtml">lessThanOrEqual</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_PCREMatch <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/matchesRegularExpression.xhtml">matchesRegularExpression</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_StringMatches <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/matches.xhtml">matches</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_StringStartsWith <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/stringStartsWith.xhtml">stringStartsWith</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_StringContains <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/stringContains.xhtml">stringContains</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_StringEndsWith <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/stringEndsWith.xhtml">stringEndsWith</a>()
                        </li><li>public static PHPUnit_Framework_Constraint_Count <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/countOf.xhtml">countOf</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/fail.xhtml">fail</a>()
                        </li><li>public static mixed <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/readAttribute.xhtml">readAttribute</a>()
                        </li><li>public static mixed <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/getStaticAttribute.xhtml">getStaticAttribute</a>()
                        </li><li>public static mixed <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/getObjectAttribute.xhtml">getObjectAttribute</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/markTestIncomplete.xhtml">markTestIncomplete</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/markTestSkipped.xhtml">markTestSkipped</a>()
                        </li><li>public static integer <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/getCount.xhtml">getCount</a>()
                        </li><li>public static void <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/resetCount.xhtml">resetCount</a>()
                        </li></ul>

            }<br/></div>
        <h2 id="hierarchy">Hierarchy</h2>
        <div class="styled">
          <h4>Extends</h4>
          <ul>
            <li>
              <a href="../classes/PHPUnit_Framework_Assert.xhtml">PHPUnit_Framework_Assert</a>
            </li>
          </ul>
          <h4>Extended by</h4>
          <ul>
            <li>
              <a href="../classes/PHPUnit_Framework_Warning.xhtml">PHPUnit_Framework_Warning</a>
            </li>
            <li>
              <a href="../classes/PHPUnit_Framework_SkippedTestCase.xhtml">PHPUnit_Framework_SkippedTestCase</a>
            </li>
            <li>
              <a href="../classes/PHPUnit_Framework_IncompleteTestCase.xhtml">PHPUnit_Framework_IncompleteTestCase</a>
            </li>
          </ul>
          <h4>Implements</h4>
          <ul>
            <li>
              <a href="../interfaces/PHPUnit_Framework_Test.xhtml">PHPUnit_Framework_Test</a>
            </li>
            <li>
              <a href="../interfaces/PHPUnit_Framework_SelfDescribing.xhtml">PHPUnit_Framework_SelfDescribing</a>
            </li>
          </ul>
        </div>
        <h2 id="violations">Violations</h2>
        <div class="styled">
          <h3>PHPMessDetector</h3>
          <table class="styled">
            <thead>
              <tr>
                <th>Line</th>
                <th>Rule</th>
                <th>Message</th>
              </tr>
            </thead>
            <tr>
              <td class="line">605 - 718</td>
              <td>
                <a href="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" target="_blank" title="Code Size Rules">CyclomaticComplexity</a>
              </td>
              <td>The method run() has a Cyclomatic Complexity of 20. The configured cyclomatic complexity threshold is 10.</td>
            </tr>
            <tr>
              <td class="line">605 - 718</td>
              <td>
                <a href="http://phpmd.org/rules/codesize.html#npathcomplexity" target="_blank" title="Code Size Rules">NPathComplexity</a>
              </td>
              <td>The method run() has an NPath complexity of 1800192. The configured NPath complexity threshold is 200.</td>
            </tr>
            <tr>
              <td class="line">605 - 718</td>
              <td>
                <a href="http://phpmd.org/rules/codesize.html#excessivemethodlength" target="_blank" title="Code Size Rules">ExcessiveMethodLength</a>
              </td>
              <td>The method run() has 114 lines of code. Current threshold is set to 100. Avoid really long methods.</td>
            </tr>
            <tr>
              <td class="line">723 - 872</td>
              <td>
                <a href="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" target="_blank" title="Code Size Rules">CyclomaticComplexity</a>
              </td>
              <td>The method runBare() has a Cyclomatic Complexity of 32. The configured cyclomatic complexity threshold is 10.</td>
            </tr>
            <tr>
              <td class="line">723 - 872</td>
              <td>
                <a href="http://phpmd.org/rules/codesize.html#npathcomplexity" target="_blank" title="Code Size Rules">NPathComplexity</a>
              </td>
              <td>The method runBare() has an NPath complexity of 460800. The configured NPath complexity threshold is 200.</td>
            </tr>
            <tr>
              <td class="line">723 - 872</td>
              <td>
                <a href="http://phpmd.org/rules/codesize.html#excessivemethodlength" target="_blank" title="Code Size Rules">ExcessiveMethodLength</a>
              </td>
              <td>The method runBare() has 150 lines of code. Current threshold is set to 100. Avoid really long methods.</td>
            </tr>
            <tr>
              <td class="line">881 - 972</td>
              <td>
                <a href="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" target="_blank" title="Code Size Rules">CyclomaticComplexity</a>
              </td>
              <td>The method runTest() has a Cyclomatic Complexity of 15. The configured cyclomatic complexity threshold is 10.</td>
            </tr>
            <tr>
              <td class="line">881 - 972</td>
              <td>
                <a href="http://phpmd.org/rules/codesize.html#npathcomplexity" target="_blank" title="Code Size Rules">NPathComplexity</a>
              </td>
              <td>The method runTest() has an NPath complexity of 1072. The configured NPath complexity threshold is 200.</td>
            </tr>
            <tr>
              <td class="line">1378 - 1385</td>
              <td>
                <a href="http://phpmd.org/rules/design.html#evalexpression" target="_blank" title="Design Rules">EvalExpression</a>
              </td>
              <td>The method getMockFromWsdl() contains an eval expression.</td>
            </tr>
            <tr>
              <td class="line">1687</td>
              <td>
                <a href="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" target="_blank" title="Unused Code Rules">UnusedLocalVariable</a>
              </td>
              <td>Avoid unused local variables such as '$key'.</td>
            </tr>
            <tr>
              <td class="line">1691</td>
              <td>
                <a href="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable" target="_blank" title="Unused Code Rules">UnusedLocalVariable</a>
              </td>
              <td>Avoid unused local variables such as '$iRecursiveCheck'.</td>
            </tr>
            <tr>
              <td class="line">1757 - 1816</td>
              <td>
                <a href="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity" target="_blank" title="Code Size Rules">CyclomaticComplexity</a>
              </td>
              <td>The method handleDependencies() has a Cyclomatic Complexity of 10. The configured cyclomatic complexity threshold is 10.</td>
            </tr>
            <tr>
              <td class="line">1895</td>
              <td>
                <a href="http://phpmd.org/rules/unusedcode.html#unusedformalparameter" target="_blank" title="Unused Code Rules">UnusedFormalParameter</a>
              </td>
              <td>Avoid unused parameters such as '$template'.</td>
            </tr>
          </table>
          <h3>Checkstyle</h3>
          <table class="styled">
            <thead>
              <tr>
                <th>Line</th>
                <th>Column</th>
                <th>Severity</th>
                <th>Message</th>
              </tr>
            </thead>
            <tr>
              <td class="line">643</td>
              <td>135</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 134 characters</td>
            </tr>
            <tr>
              <td class="line">651</td>
              <td>126</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 125 characters</td>
            </tr>
            <tr>
              <td class="line">652</td>
              <td>126</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 125 characters</td>
            </tr>
            <tr>
              <td class="line">653</td>
              <td>126</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 125 characters</td>
            </tr>
            <tr>
              <td class="line">654</td>
              <td>126</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 125 characters</td>
            </tr>
            <tr>
              <td class="line">655</td>
              <td>126</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 125 characters</td>
            </tr>
            <tr>
              <td class="line">674</td>
              <td>13</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 122 characters</td>
            </tr>
            <tr>
              <td class="line">1232</td>
              <td>19</td>
              <td>
                <span title="PSR2.Methods.FunctionCallSignature.SpaceAfterOpenBracket">error</span>
              </td>
              <td>Space after opening parenthesis of function call prohibited</td>
            </tr>
            <tr>
              <td class="line">1232</td>
              <td>19</td>
              <td>
                <span title="PSR2.Methods.FunctionCallSignature.SpaceBeforeCloseBracket">error</span>
              </td>
              <td>Expected 0 spaces before closing bracket; 1 found</td>
            </tr>
            <tr>
              <td class="line">1252</td>
              <td>128</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 127 characters</td>
            </tr>
            <tr>
              <td class="line">1253</td>
              <td>148</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 147 characters</td>
            </tr>
            <tr>
              <td class="line">1254</td>
              <td>154</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 153 characters</td>
            </tr>
            <tr>
              <td class="line">1255</td>
              <td>164</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 163 characters</td>
            </tr>
            <tr>
              <td class="line">1262</td>
              <td>254</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 253 characters</td>
            </tr>
            <tr>
              <td class="line">1308</td>
              <td>233</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 232 characters</td>
            </tr>
            <tr>
              <td class="line">1341</td>
              <td>246</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 245 characters</td>
            </tr>
            <tr>
              <td class="line">1371</td>
              <td>181</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 180 characters</td>
            </tr>
            <tr>
              <td class="line">1416</td>
              <td>230</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 229 characters</td>
            </tr>
            <tr>
              <td class="line">1448</td>
              <td>210</td>
              <td>
                <span title="Generic.Files.LineLength.TooLong">warning</span>
              </td>
              <td>Line exceeds 120 characters; contains 209 characters</td>
            </tr>
          </table>
        </div>
        <h2 id="members">Members</h2>
        <div class="styled members">
          <h4>private</h4>
          <ul class="members">
            <li id="data"><strong>$data</strong>
                —
                array</li>
            <li id="dataName"><strong>$dataName</strong>
                —
                string</li>
            <li id="dependencies"><strong>$dependencies</strong>
                —
                array</li>
            <li id="dependencyInput"><strong>$dependencyInput</strong>
                —
                array</li>
            <li id="expectedException"><strong>$expectedException</strong>
                —
                mixed<br/><span class="indent">The name of the expected Exception.</span></li>
            <li id="expectedExceptionCode"><strong>$expectedExceptionCode</strong>
                —
                integer<br/><span class="indent">The code of the expected Exception.</span></li>
            <li id="expectedExceptionMessage"><strong>$expectedExceptionMessage</strong>
                —
                string<br/><span class="indent">The message of the expected Exception.</span></li>
            <li id="expectedExceptionMessageRegExp"><strong>$expectedExceptionMessageRegExp</strong>
                —
                string<br/><span class="indent">The regex pattern to validate the expected Exception message.</span></li>
            <li id="hasPerformedExpectationsOnOutput"><strong>$hasPerformedExpectationsOnOutput</strong>
                —
                <a href="#">bool</a></li>
            <li id="inIsolation"><strong>$inIsolation</strong>
                —
                boolean<br/><span class="indent">Whether or not this test is running in a separate PHP process.</span></li>
            <li id="iniSettings"><strong>$iniSettings</strong>
                —
                array</li>
            <li id="locale"><strong>$locale</strong>
                —
                array</li>
            <li id="mockObjectGenerator"><strong>$mockObjectGenerator</strong>
                —
                array</li>
            <li id="mockObjects"><strong>$mockObjects</strong>
                —
                array</li>
            <li id="name"><strong>$name</strong>
                —
                string<br/><span class="indent">The name of the test case.</span></li>
            <li id="numAssertions"><strong>$numAssertions</strong>
                —
                integer</li>
            <li id="output"><strong>$output</strong>
                —
                string</li>
            <li id="outputBufferingActive"><strong>$outputBufferingActive</strong>
                —
                boolean</li>
            <li id="outputBufferingLevel"><strong>$outputBufferingLevel</strong>
                —
                integer</li>
            <li id="outputCallback"><strong>$outputCallback</strong>
                —
                mixed</li>
            <li id="outputExpectedRegex"><strong>$outputExpectedRegex</strong>
                —
                string</li>
            <li id="outputExpectedString"><strong>$outputExpectedString</strong>
                —
                string</li>
            <li id="result"><strong>$result</strong>
                —
                <a href="#">PHPUnit_Framework_TestResult</a></li>
            <li id="status"><strong>$status</strong>
                —
                integer</li>
            <li id="statusMessage"><strong>$statusMessage</strong>
                —
                string</li>
            <li id="testResult"><strong>$testResult</strong>
                —
                mixed</li>
            <li id="useErrorHandler"><strong>$useErrorHandler</strong>
                —
                boolean</li>
          </ul>
          <h4>protected</h4>
          <ul class="members">
            <li id="backupGlobals"><strong>$backupGlobals</strong>
                —
                boolean<br/><span class="indent">Enable or disable the backup and restoration of the $GLOBALS array.</span></li>
            <li id="backupGlobalsBlacklist"><strong>$backupGlobalsBlacklist</strong>
                —
                array</li>
            <li id="backupStaticAttributes"><strong>$backupStaticAttributes</strong>
                —
                boolean<br/><span class="indent">Enable or disable the backup and restoration of static attributes.</span></li>
            <li id="backupStaticAttributesBlacklist"><strong>$backupStaticAttributesBlacklist</strong>
                —
                array</li>
            <li id="preserveGlobalState"><strong>$preserveGlobalState</strong>
                —
                boolean<br/><span class="indent">Whether or not this test should preserve the global state when running in a separate PHP process.</span></li>
            <li id="runTestInSeparateProcess"><strong>$runTestInSeparateProcess</strong>
                —
                boolean<br/><span class="indent">Whether or not this test is to be run in a separate PHP process.</span></li>
          </ul>
        </div>
        <h2 id="methods">Methods</h2>
        <div class="styled">
          <h4>private</h4>
          <ul>
            <li id="startOutputBuffering">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/startOutputBuffering.xhtml">startOutputBuffering()</a>
            </li>
            <li id="stopOutputBuffering">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/stopOutputBuffering.xhtml">stopOutputBuffering()</a>
            </li>
          </ul>
          <h4>protected</h4>
          <ul>
            <li id="assertPostConditions"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/assertPostConditions.xhtml">assertPostConditions()</a>
                — Performs assertions shared by all tests of a test case.</li>
            <li id="assertPreConditions"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/assertPreConditions.xhtml">assertPreConditions()</a>
                — Performs assertions shared by all tests of a test case.</li>
            <li id="checkRequirements">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/checkRequirements.xhtml">checkRequirements()</a>
            </li>
            <li id="createResult"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/createResult.xhtml">createResult()</a>
                — Creates a default TestResult object.</li>
            <li id="dataToString">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/dataToString.xhtml">dataToString()</a>
            </li>
            <li id="getDataSetAsString"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getDataSetAsString.xhtml">getDataSetAsString()</a>
                — Gets the data set description of a TestCase.</li>
            <li id="getMockClass"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getMockClass.xhtml">getMockClass()</a>
                — Mocks the specified class and returns the name of the mocked class.</li>
            <li id="getMockFromWsdl"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getMockFromWsdl.xhtml">getMockFromWsdl()</a>
                — Returns a mock object based on the given WSDL file.</li>
            <li id="getMockObjectGenerator"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getMockObjectGenerator.xhtml">getMockObjectGenerator()</a>
                — Get the mock object generator, creating it if it doesn't exist.</li>
            <li id="getObjectForTrait"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getObjectForTrait.xhtml">getObjectForTrait()</a>
                — Returns an object for the specified trait.</li>
            <li id="handleDependencies">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/handleDependencies.xhtml">handleDependencies()</a>
            </li>
            <li id="iniSet"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/iniSet.xhtml">iniSet()</a>
                — This method is a wrapper for the ini_set() function that automatically resets the modified php.ini setting to its original value after the test is run.</li>
            <li id="onNotSuccessfulTest"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/onNotSuccessfulTest.xhtml">onNotSuccessfulTest()</a>
                — This method is called when a test method did not execute successfully.</li>
            <li id="prepareTemplate"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/prepareTemplate.xhtml">prepareTemplate()</a>
                — Performs custom preparations on the process isolation template.</li>
            <li id="runTest"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/runTest.xhtml">runTest()</a>
                — Override to run the test and assert its state.</li>
            <li id="setExpectedExceptionFromAnnotation">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setExpectedExceptionFromAnnotation.xhtml">setExpectedExceptionFromAnnotation()</a>
            </li>
            <li id="setLocale"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setLocale.xhtml">setLocale()</a>
                — This method is a wrapper for the setlocale() function that automatically resets the locale to its original value after the test is run.</li>
            <li id="setUp"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setUp.xhtml">setUp()</a>
                — Sets up the fixture, for example, open a network connection.</li>
            <li id="setUseErrorHandlerFromAnnotation">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setUseErrorHandlerFromAnnotation.xhtml">setUseErrorHandlerFromAnnotation()</a>
            </li>
            <li id="tearDown"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/tearDown.xhtml">tearDown()</a>
                — Tears down the fixture, for example, close a network connection.</li>
            <li id="verifyMockObjects"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/verifyMockObjects.xhtml">verifyMockObjects()</a>
                — Verifies the mock object expectations.</li>
          </ul>
          <h4>public</h4>
          <ul>
            <li id="__construct"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/__construct.xhtml">__construct()</a>
                — Constructs a test case with the given name.</li>
            <li id="addToAssertionCount"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/addToAssertionCount.xhtml">addToAssertionCount()</a>
                — Adds a value to the assertion counter.</li>
            <li id="any"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/any.xhtml">any()</a>
                — Returns a matcher that matches when the method it is evaluated for is executed zero or more times.</li>
            <li id="at"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/at.xhtml">at()</a>
                — Returns a matcher that matches when the method it is evaluated for is invoked at the given $index.</li>
            <li id="atLeast"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/atLeast.xhtml">atLeast()</a>
                — Returns a matcher that matches when the method it is evaluated for is executed at least N times.</li>
            <li id="atLeastOnce"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/atLeastOnce.xhtml">atLeastOnce()</a>
                — Returns a matcher that matches when the method it is evaluated for is executed at least once.</li>
            <li id="atMost"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/atMost.xhtml">atMost()</a>
                — Returns a matcher that matches when the method it is evaluated for is executed at most N times.</li>
            <li id="count"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/count.xhtml">count()</a>
                — Counts the number of test cases executed by run(TestResult result).</li>
            <li id="exactly"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/exactly.xhtml">exactly()</a>
                — Returns a matcher that matches when the method it is evaluated for is executed exactly $count times.</li>
            <li id="expectOutputRegex">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/expectOutputRegex.xhtml">expectOutputRegex()</a>
            </li>
            <li id="expectOutputString">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/expectOutputString.xhtml">expectOutputString()</a>
            </li>
            <li id="getActualOutput">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getActualOutput.xhtml">getActualOutput()</a>
            </li>
            <li id="getAnnotations"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getAnnotations.xhtml">getAnnotations()</a>
                — Returns the annotations for this test.</li>
            <li id="getExpectedException">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getExpectedException.xhtml">getExpectedException()</a>
            </li>
            <li id="getMock"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getMock.xhtml">getMock()</a>
                — Returns a mock object for the specified class.</li>
            <li id="getMockBuilder"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getMockBuilder.xhtml">getMockBuilder()</a>
                — Returns a builder object to create mock objects using a fluent interface.</li>
            <li id="getMockForAbstractClass"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getMockForAbstractClass.xhtml">getMockForAbstractClass()</a>
                — Returns a mock object for the specified abstract class with all abstract methods of the class mocked. Concrete methods are not mocked by default.</li>
            <li id="getMockForTrait"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getMockForTrait.xhtml">getMockForTrait()</a>
                — Returns a mock object for the specified trait with all abstract methods of the trait mocked. Concrete methods to mock can be specified with the `$mockedMethods` parameter.</li>
            <li id="getName"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getName.xhtml">getName()</a>
                — Gets the name of a TestCase.</li>
            <li id="getNumAssertions"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getNumAssertions.xhtml">getNumAssertions()</a>
                — Returns the number of assertions performed by this test.</li>
            <li id="getResult">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getResult.xhtml">getResult()</a>
            </li>
            <li id="getSize"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getSize.xhtml">getSize()</a>
                — Returns the size of the test.</li>
            <li id="getStatus"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getStatus.xhtml">getStatus()</a>
                — Returns the status of this test.</li>
            <li id="getStatusMessage"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getStatusMessage.xhtml">getStatusMessage()</a>
                — Returns the status message of this test.</li>
            <li id="getTestResultObject">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/getTestResultObject.xhtml">getTestResultObject()</a>
            </li>
            <li id="hasDependencies"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/hasDependencies.xhtml">hasDependencies()</a>
                — Returns true if the tests has dependencies</li>
            <li id="hasFailed"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/hasFailed.xhtml">hasFailed()</a>
                — Returns whether or not this test has failed.</li>
            <li id="hasOutput">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/hasOutput.xhtml">hasOutput()</a>
            </li>
            <li id="hasPerformedExpectationsOnOutput">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/hasPerformedExpectationsOnOutput.xhtml">hasPerformedExpectationsOnOutput()</a>
            </li>
            <li id="isInIsolation">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/isInIsolation.xhtml">isInIsolation()</a>
            </li>
            <li id="never"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/never.xhtml">never()</a>
                — Returns a matcher that matches when the method it is evaluated for is never executed.</li>
            <li id="onConsecutiveCalls">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/onConsecutiveCalls.xhtml">onConsecutiveCalls()</a>
            </li>
            <li id="once"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/once.xhtml">once()</a>
                — Returns a matcher that matches when the method it is evaluated for is executed exactly once.</li>
            <li id="returnArgument">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/returnArgument.xhtml">returnArgument()</a>
            </li>
            <li id="returnCallback">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/returnCallback.xhtml">returnCallback()</a>
            </li>
            <li id="returnSelf"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/returnSelf.xhtml">returnSelf()</a>
                — Returns the current object.</li>
            <li id="returnValue">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/returnValue.xhtml">returnValue()</a>
            </li>
            <li id="returnValueMap">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/returnValueMap.xhtml">returnValueMap()</a>
            </li>
            <li id="run"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/run.xhtml">run()</a>
                — Runs the test case and collects the results in a TestResult object.</li>
            <li id="runBare"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/runBare.xhtml">runBare()</a>
                — Runs the bare test sequence.</li>
            <li id="setBackupGlobals"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setBackupGlobals.xhtml">setBackupGlobals()</a>
                — Calling this method in setUp() has no effect!</li>
            <li id="setBackupStaticAttributes"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setBackupStaticAttributes.xhtml">setBackupStaticAttributes()</a>
                — Calling this method in setUp() has no effect!</li>
            <li id="setDependencies"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setDependencies.xhtml">setDependencies()</a>
                — Sets the dependencies of a TestCase.</li>
            <li id="setDependencyInput"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setDependencyInput.xhtml">setDependencyInput()</a>
                — Sets</li>
            <li id="setExpectedException">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setExpectedException.xhtml">setExpectedException()</a>
            </li>
            <li id="setExpectedExceptionRegExp">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setExpectedExceptionRegExp.xhtml">setExpectedExceptionRegExp()</a>
            </li>
            <li id="setInIsolation">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setInIsolation.xhtml">setInIsolation()</a>
            </li>
            <li id="setName"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setName.xhtml">setName()</a>
                — Sets the name of a TestCase.</li>
            <li id="setOutputCallback">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setOutputCallback.xhtml">setOutputCallback()</a>
            </li>
            <li id="setPreserveGlobalState">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setPreserveGlobalState.xhtml">setPreserveGlobalState()</a>
            </li>
            <li id="setResult">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setResult.xhtml">setResult()</a>
            </li>
            <li id="setRunTestInSeparateProcess">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setRunTestInSeparateProcess.xhtml">setRunTestInSeparateProcess()</a>
            </li>
            <li id="setTestResultObject">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setTestResultObject.xhtml">setTestResultObject()</a>
            </li>
            <li id="setUpBeforeClass"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setUpBeforeClass.xhtml">setUpBeforeClass()</a>
                — This method is called before the first test of this test class is run.</li>
            <li id="setUseErrorHandler">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/setUseErrorHandler.xhtml">setUseErrorHandler()</a>
            </li>
            <li id="tearDownAfterClass"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/tearDownAfterClass.xhtml">tearDownAfterClass()</a>
                — This method is called after the last test of this test class is run.</li>
            <li id="throwException">
              <a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/throwException.xhtml">throwException()</a>
            </li>
            <li id="toString"><a title="PHPUnit_Framework_TestCase" href="../classes/PHPUnit_Framework_TestCase/toString.xhtml">toString()</a>
                — Returns a string representation of the test case.</li>
          </ul>
          <h3>Inherited from <a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert.xhtml">PHPUnit_Framework_Assert</a></h3>
          <h4>public</h4>
          <ul>
            <li id="anything"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/anything.xhtml">anything()</a>
                — Returns a PHPUnit_Framework_Constraint_IsAnything matcher object.</li>
            <li id="arrayHasKey"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/arrayHasKey.xhtml">arrayHasKey()</a>
                — Returns a PHPUnit_Framework_Constraint_ArrayHasKey matcher object.</li>
            <li id="assertArrayHasKey"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertArrayHasKey.xhtml">assertArrayHasKey()</a>
                — Asserts that an array has a specified key.</li>
            <li id="assertArrayNotHasKey"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertArrayNotHasKey.xhtml">assertArrayNotHasKey()</a>
                — Asserts that an array does not have a specified key.</li>
            <li id="assertArraySubset"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertArraySubset.xhtml">assertArraySubset()</a>
                — Asserts that an array has a specified subset.</li>
            <li id="assertAttributeContains"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeContains.xhtml">assertAttributeContains()</a>
                — Asserts that a haystack that is stored in a static attribute of a class or an attribute of an object contains a needle.</li>
            <li id="assertAttributeContainsOnly"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeContainsOnly.xhtml">assertAttributeContainsOnly()</a>
                — Asserts that a haystack that is stored in a static attribute of a class or an attribute of an object contains only values of a given type.</li>
            <li id="assertAttributeCount"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeCount.xhtml">assertAttributeCount()</a>
                — Asserts the number of elements of an array, Countable or Traversable that is stored in an attribute.</li>
            <li id="assertAttributeEmpty"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeEmpty.xhtml">assertAttributeEmpty()</a>
                — Asserts that a static attribute of a class or an attribute of an object is empty.</li>
            <li id="assertAttributeEquals"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeEquals.xhtml">assertAttributeEquals()</a>
                — Asserts that a variable is equal to an attribute of an object.</li>
            <li id="assertAttributeGreaterThan"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeGreaterThan.xhtml">assertAttributeGreaterThan()</a>
                — Asserts that an attribute is greater than another value.</li>
            <li id="assertAttributeGreaterThanOrEqual"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeGreaterThanOrEqual.xhtml">assertAttributeGreaterThanOrEqual()</a>
                — Asserts that an attribute is greater than or equal to another value.</li>
            <li id="assertAttributeInstanceOf"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeInstanceOf.xhtml">assertAttributeInstanceOf()</a>
                — Asserts that an attribute is of a given type.</li>
            <li id="assertAttributeInternalType"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeInternalType.xhtml">assertAttributeInternalType()</a>
                — Asserts that an attribute is of a given type.</li>
            <li id="assertAttributeLessThan"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeLessThan.xhtml">assertAttributeLessThan()</a>
                — Asserts that an attribute is smaller than another value.</li>
            <li id="assertAttributeLessThanOrEqual"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeLessThanOrEqual.xhtml">assertAttributeLessThanOrEqual()</a>
                — Asserts that an attribute is smaller than or equal to another value.</li>
            <li id="assertAttributeNotContains"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotContains.xhtml">assertAttributeNotContains()</a>
                — Asserts that a haystack that is stored in a static attribute of a class or an attribute of an object does not contain a needle.</li>
            <li id="assertAttributeNotContainsOnly"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotContainsOnly.xhtml">assertAttributeNotContainsOnly()</a>
                — Asserts that a haystack that is stored in a static attribute of a class or an attribute of an object does not contain only values of a given type.</li>
            <li id="assertAttributeNotCount"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotCount.xhtml">assertAttributeNotCount()</a>
                — Asserts the number of elements of an array, Countable or Traversable that is stored in an attribute.</li>
            <li id="assertAttributeNotEmpty"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotEmpty.xhtml">assertAttributeNotEmpty()</a>
                — Asserts that a static attribute of a class or an attribute of an object is not empty.</li>
            <li id="assertAttributeNotEquals"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotEquals.xhtml">assertAttributeNotEquals()</a>
                — Asserts that a variable is not equal to an attribute of an object.</li>
            <li id="assertAttributeNotInstanceOf"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotInstanceOf.xhtml">assertAttributeNotInstanceOf()</a>
                — Asserts that an attribute is of a given type.</li>
            <li id="assertAttributeNotInternalType"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotInternalType.xhtml">assertAttributeNotInternalType()</a>
                — Asserts that an attribute is of a given type.</li>
            <li id="assertAttributeNotSame"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeNotSame.xhtml">assertAttributeNotSame()</a>
                — Asserts that a variable and an attribute of an object do not have the same type and value.</li>
            <li id="assertAttributeSame"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertAttributeSame.xhtml">assertAttributeSame()</a>
                — Asserts that a variable and an attribute of an object have the same type and value.</li>
            <li id="assertClassHasAttribute"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertClassHasAttribute.xhtml">assertClassHasAttribute()</a>
                — Asserts that a class has a specified attribute.</li>
            <li id="assertClassHasStaticAttribute"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertClassHasStaticAttribute.xhtml">assertClassHasStaticAttribute()</a>
                — Asserts that a class has a specified static attribute.</li>
            <li id="assertClassNotHasAttribute"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertClassNotHasAttribute.xhtml">assertClassNotHasAttribute()</a>
                — Asserts that a class does not have a specified attribute.</li>
            <li id="assertClassNotHasStaticAttribute"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertClassNotHasStaticAttribute.xhtml">assertClassNotHasStaticAttribute()</a>
                — Asserts that a class does not have a specified static attribute.</li>
            <li id="assertContains"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertContains.xhtml">assertContains()</a>
                — Asserts that a haystack contains a needle.</li>
            <li id="assertContainsOnly"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertContainsOnly.xhtml">assertContainsOnly()</a>
                — Asserts that a haystack contains only values of a given type.</li>
            <li id="assertContainsOnlyInstancesOf"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertContainsOnlyInstancesOf.xhtml">assertContainsOnlyInstancesOf()</a>
                — Asserts that a haystack contains only instances of a given classname</li>
            <li id="assertCount"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertCount.xhtml">assertCount()</a>
                — Asserts the number of elements of an array, Countable or Traversable.</li>
            <li id="assertEmpty"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertEmpty.xhtml">assertEmpty()</a>
                — Asserts that a variable is empty.</li>
            <li id="assertEqualXMLStructure"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertEqualXMLStructure.xhtml">assertEqualXMLStructure()</a>
                — Asserts that a hierarchy of DOMElements matches.</li>
            <li id="assertEquals"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertEquals.xhtml">assertEquals()</a>
                — Asserts that two variables are equal.</li>
            <li id="assertFalse"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertFalse.xhtml">assertFalse()</a>
                — Asserts that a condition is false.</li>
            <li id="assertFileEquals"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertFileEquals.xhtml">assertFileEquals()</a>
                — Asserts that the contents of one file is equal to the contents of another file.</li>
            <li id="assertFileExists"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertFileExists.xhtml">assertFileExists()</a>
                — Asserts that a file exists.</li>
            <li id="assertFileNotEquals"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertFileNotEquals.xhtml">assertFileNotEquals()</a>
                — Asserts that the contents of one file is not equal to the contents of another file.</li>
            <li id="assertFileNotExists"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertFileNotExists.xhtml">assertFileNotExists()</a>
                — Asserts that a file does not exist.</li>
            <li id="assertGreaterThan"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertGreaterThan.xhtml">assertGreaterThan()</a>
                — Asserts that a value is greater than another value.</li>
            <li id="assertGreaterThanOrEqual"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertGreaterThanOrEqual.xhtml">assertGreaterThanOrEqual()</a>
                — Asserts that a value is greater than or equal to another value.</li>
            <li id="assertInstanceOf"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertInstanceOf.xhtml">assertInstanceOf()</a>
                — Asserts that a variable is of a given type.</li>
            <li id="assertInternalType"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertInternalType.xhtml">assertInternalType()</a>
                — Asserts that a variable is of a given type.</li>
            <li id="assertJson"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertJson.xhtml">assertJson()</a>
                — Asserts that a string is a valid JSON string.</li>
            <li id="assertJsonFileEqualsJsonFile"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertJsonFileEqualsJsonFile.xhtml">assertJsonFileEqualsJsonFile()</a>
                — Asserts that two JSON files are equal.</li>
            <li id="assertJsonFileNotEqualsJsonFile"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertJsonFileNotEqualsJsonFile.xhtml">assertJsonFileNotEqualsJsonFile()</a>
                — Asserts that two JSON files are not equal.</li>
            <li id="assertJsonStringEqualsJsonFile"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertJsonStringEqualsJsonFile.xhtml">assertJsonStringEqualsJsonFile()</a>
                — Asserts that the generated JSON encoded object and the content of the given file are equal.</li>
            <li id="assertJsonStringEqualsJsonString"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertJsonStringEqualsJsonString.xhtml">assertJsonStringEqualsJsonString()</a>
                — Asserts that two given JSON encoded objects or arrays are equal.</li>
            <li id="assertJsonStringNotEqualsJsonFile"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertJsonStringNotEqualsJsonFile.xhtml">assertJsonStringNotEqualsJsonFile()</a>
                — Asserts that the generated JSON encoded object and the content of the given file are not equal.</li>
            <li id="assertJsonStringNotEqualsJsonString"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertJsonStringNotEqualsJsonString.xhtml">assertJsonStringNotEqualsJsonString()</a>
                — Asserts that two given JSON encoded objects or arrays are not equal.</li>
            <li id="assertLessThan"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertLessThan.xhtml">assertLessThan()</a>
                — Asserts that a value is smaller than another value.</li>
            <li id="assertLessThanOrEqual"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertLessThanOrEqual.xhtml">assertLessThanOrEqual()</a>
                — Asserts that a value is smaller than or equal to another value.</li>
            <li id="assertNotContains"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotContains.xhtml">assertNotContains()</a>
                — Asserts that a haystack does not contain a needle.</li>
            <li id="assertNotContainsOnly"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotContainsOnly.xhtml">assertNotContainsOnly()</a>
                — Asserts that a haystack does not contain only values of a given type.</li>
            <li id="assertNotCount"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotCount.xhtml">assertNotCount()</a>
                — Asserts the number of elements of an array, Countable or Traversable.</li>
            <li id="assertNotEmpty"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotEmpty.xhtml">assertNotEmpty()</a>
                — Asserts that a variable is not empty.</li>
            <li id="assertNotEquals"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotEquals.xhtml">assertNotEquals()</a>
                — Asserts that two variables are not equal.</li>
            <li id="assertNotFalse"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotFalse.xhtml">assertNotFalse()</a>
                — Asserts that a condition is not false.</li>
            <li id="assertNotInstanceOf"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotInstanceOf.xhtml">assertNotInstanceOf()</a>
                — Asserts that a variable is not of a given type.</li>
            <li id="assertNotInternalType"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotInternalType.xhtml">assertNotInternalType()</a>
                — Asserts that a variable is not of a given type.</li>
            <li id="assertNotNull"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotNull.xhtml">assertNotNull()</a>
                — Asserts that a variable is not null.</li>
            <li id="assertNotRegExp"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotRegExp.xhtml">assertNotRegExp()</a>
                — Asserts that a string does not match a given regular expression.</li>
            <li id="assertNotSame"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotSame.xhtml">assertNotSame()</a>
                — Asserts that two variables do not have the same type and value.</li>
            <li id="assertNotSameSize"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotSameSize.xhtml">assertNotSameSize()</a>
                — Assert that the size of two arrays (or `Countable` or `Traversable` objects) is not the same.</li>
            <li id="assertNotTag"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotTag.xhtml">assertNotTag()</a>
                — This assertion is the exact opposite of assertTag().</li>
            <li id="assertNotTrue"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNotTrue.xhtml">assertNotTrue()</a>
                — Asserts that a condition is not true.</li>
            <li id="assertNull"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertNull.xhtml">assertNull()</a>
                — Asserts that a variable is null.</li>
            <li id="assertObjectHasAttribute"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertObjectHasAttribute.xhtml">assertObjectHasAttribute()</a>
                — Asserts that an object has a specified attribute.</li>
            <li id="assertObjectNotHasAttribute"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertObjectNotHasAttribute.xhtml">assertObjectNotHasAttribute()</a>
                — Asserts that an object does not have a specified attribute.</li>
            <li id="assertRegExp"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertRegExp.xhtml">assertRegExp()</a>
                — Asserts that a string matches a given regular expression.</li>
            <li id="assertSame"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertSame.xhtml">assertSame()</a>
                — Asserts that two variables have the same type and value.</li>
            <li id="assertSameSize"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertSameSize.xhtml">assertSameSize()</a>
                — Assert that the size of two arrays (or `Countable` or `Traversable` objects) is the same.</li>
            <li id="assertSelectCount"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertSelectCount.xhtml">assertSelectCount()</a>
                — Assert the presence, absence, or count of elements in a document matching the CSS $selector, regardless of the contents of those elements.</li>
            <li id="assertSelectEquals"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertSelectEquals.xhtml">assertSelectEquals()</a>
                — assertSelectEquals("#binder .name", "Chuck", true,  $xml);  // any? assertSelectEquals("#binder .name", "Chuck", false, $xml);  // none?</li>
            <li id="assertSelectRegExp"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertSelectRegExp.xhtml">assertSelectRegExp()</a>
                — assertSelectRegExp("#binder .name", "/Mike|Derek/", true, $xml); // any? assertSelectRegExp("#binder .name", "/Mike|Derek/", 3, $xml);    // 3?</li>
            <li id="assertStringEndsNotWith"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringEndsNotWith.xhtml">assertStringEndsNotWith()</a>
                — Asserts that a string ends not with a given suffix.</li>
            <li id="assertStringEndsWith"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringEndsWith.xhtml">assertStringEndsWith()</a>
                — Asserts that a string ends with a given suffix.</li>
            <li id="assertStringEqualsFile"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringEqualsFile.xhtml">assertStringEqualsFile()</a>
                — Asserts that the contents of a string is equal to the contents of a file.</li>
            <li id="assertStringMatchesFormat"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringMatchesFormat.xhtml">assertStringMatchesFormat()</a>
                — Asserts that a string matches a given format string.</li>
            <li id="assertStringMatchesFormatFile"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringMatchesFormatFile.xhtml">assertStringMatchesFormatFile()</a>
                — Asserts that a string matches a given format file.</li>
            <li id="assertStringNotEqualsFile"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringNotEqualsFile.xhtml">assertStringNotEqualsFile()</a>
                — Asserts that the contents of a string is not equal to the contents of a file.</li>
            <li id="assertStringNotMatchesFormat"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringNotMatchesFormat.xhtml">assertStringNotMatchesFormat()</a>
                — Asserts that a string does not match a given format string.</li>
            <li id="assertStringNotMatchesFormatFile"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringNotMatchesFormatFile.xhtml">assertStringNotMatchesFormatFile()</a>
                — Asserts that a string does not match a given format string.</li>
            <li id="assertStringStartsNotWith"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringStartsNotWith.xhtml">assertStringStartsNotWith()</a>
                — Asserts that a string starts not with a given prefix.</li>
            <li id="assertStringStartsWith"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertStringStartsWith.xhtml">assertStringStartsWith()</a>
                — Asserts that a string starts with a given prefix.</li>
            <li id="assertTag"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertTag.xhtml">assertTag()</a>
                — Evaluate an HTML or XML string and assert its structure and/or contents.</li>
            <li id="assertThat"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertThat.xhtml">assertThat()</a>
                — Evaluates a PHPUnit_Framework_Constraint matcher object.</li>
            <li id="assertTrue"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertTrue.xhtml">assertTrue()</a>
                — Asserts that a condition is true.</li>
            <li id="assertXmlFileEqualsXmlFile"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertXmlFileEqualsXmlFile.xhtml">assertXmlFileEqualsXmlFile()</a>
                — Asserts that two XML files are equal.</li>
            <li id="assertXmlFileNotEqualsXmlFile"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertXmlFileNotEqualsXmlFile.xhtml">assertXmlFileNotEqualsXmlFile()</a>
                — Asserts that two XML files are not equal.</li>
            <li id="assertXmlStringEqualsXmlFile"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertXmlStringEqualsXmlFile.xhtml">assertXmlStringEqualsXmlFile()</a>
                — Asserts that two XML documents are equal.</li>
            <li id="assertXmlStringEqualsXmlString"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertXmlStringEqualsXmlString.xhtml">assertXmlStringEqualsXmlString()</a>
                — Asserts that two XML documents are equal.</li>
            <li id="assertXmlStringNotEqualsXmlFile"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertXmlStringNotEqualsXmlFile.xhtml">assertXmlStringNotEqualsXmlFile()</a>
                — Asserts that two XML documents are not equal.</li>
            <li id="assertXmlStringNotEqualsXmlString"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/assertXmlStringNotEqualsXmlString.xhtml">assertXmlStringNotEqualsXmlString()</a>
                — Asserts that two XML documents are not equal.</li>
            <li id="attribute"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/attribute.xhtml">attribute()</a>
                — Returns a PHPUnit_Framework_Constraint_Attribute matcher object.</li>
            <li id="attributeEqualTo"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/attributeEqualTo.xhtml">attributeEqualTo()</a>
                — Returns a PHPUnit_Framework_Constraint_IsEqual matcher object that is wrapped in a PHPUnit_Framework_Constraint_Attribute matcher object.</li>
            <li id="callback"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/callback.xhtml">callback()</a>
                — Returns a PHPUnit_Framework_Constraint_Callback matcher object.</li>
            <li id="classHasAttribute"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/classHasAttribute.xhtml">classHasAttribute()</a>
                — Returns a PHPUnit_Framework_Constraint_ClassHasAttribute matcher object.</li>
            <li id="classHasStaticAttribute"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/classHasStaticAttribute.xhtml">classHasStaticAttribute()</a>
                — Returns a PHPUnit_Framework_Constraint_ClassHasStaticAttribute matcher object.</li>
            <li id="contains"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/contains.xhtml">contains()</a>
                — Returns a PHPUnit_Framework_Constraint_TraversableContains matcher object.</li>
            <li id="containsOnly"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/containsOnly.xhtml">containsOnly()</a>
                — Returns a PHPUnit_Framework_Constraint_TraversableContainsOnly matcher object.</li>
            <li id="containsOnlyInstancesOf"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/containsOnlyInstancesOf.xhtml">containsOnlyInstancesOf()</a>
                — Returns a PHPUnit_Framework_Constraint_TraversableContainsOnly matcher object.</li>
            <li id="countOf"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/countOf.xhtml">countOf()</a>
                — Returns a PHPUnit_Framework_Constraint_Count matcher object.</li>
            <li id="equalTo"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/equalTo.xhtml">equalTo()</a>
                — Returns a PHPUnit_Framework_Constraint_IsEqual matcher object.</li>
            <li id="fail"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/fail.xhtml">fail()</a>
                — Fails a test with the given message.</li>
            <li id="fileExists"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/fileExists.xhtml">fileExists()</a>
                — Returns a PHPUnit_Framework_Constraint_FileExists matcher object.</li>
            <li id="getCount"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/getCount.xhtml">getCount()</a>
                — Return the current assertion count.</li>
            <li id="getObjectAttribute"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/getObjectAttribute.xhtml">getObjectAttribute()</a>
                — Returns the value of an object's attribute.</li>
            <li id="getStaticAttribute"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/getStaticAttribute.xhtml">getStaticAttribute()</a>
                — Returns the value of a static attribute.</li>
            <li id="greaterThan"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/greaterThan.xhtml">greaterThan()</a>
                — Returns a PHPUnit_Framework_Constraint_GreaterThan matcher object.</li>
            <li id="greaterThanOrEqual"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/greaterThanOrEqual.xhtml">greaterThanOrEqual()</a>
                — Returns a PHPUnit_Framework_Constraint_Or matcher object that wraps a PHPUnit_Framework_Constraint_IsEqual and a PHPUnit_Framework_Constraint_GreaterThan matcher object.</li>
            <li id="identicalTo"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/identicalTo.xhtml">identicalTo()</a>
                — Returns a PHPUnit_Framework_Constraint_IsIdentical matcher object.</li>
            <li id="isEmpty"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/isEmpty.xhtml">isEmpty()</a>
                — Returns a PHPUnit_Framework_Constraint_IsEmpty matcher object.</li>
            <li id="isFalse"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/isFalse.xhtml">isFalse()</a>
                — Returns a PHPUnit_Framework_Constraint_IsFalse matcher object.</li>
            <li id="isInstanceOf"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/isInstanceOf.xhtml">isInstanceOf()</a>
                — Returns a PHPUnit_Framework_Constraint_IsInstanceOf matcher object.</li>
            <li id="isJson"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/isJson.xhtml">isJson()</a>
                — Returns a PHPUnit_Framework_Constraint_IsJson matcher object.</li>
            <li id="isNull"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/isNull.xhtml">isNull()</a>
                — Returns a PHPUnit_Framework_Constraint_IsNull matcher object.</li>
            <li id="isTrue"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/isTrue.xhtml">isTrue()</a>
                — Returns a PHPUnit_Framework_Constraint_IsTrue matcher object.</li>
            <li id="isType"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/isType.xhtml">isType()</a>
                — Returns a PHPUnit_Framework_Constraint_IsType matcher object.</li>
            <li id="lessThan"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/lessThan.xhtml">lessThan()</a>
                — Returns a PHPUnit_Framework_Constraint_LessThan matcher object.</li>
            <li id="lessThanOrEqual"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/lessThanOrEqual.xhtml">lessThanOrEqual()</a>
                — Returns a PHPUnit_Framework_Constraint_Or matcher object that wraps a PHPUnit_Framework_Constraint_IsEqual and a PHPUnit_Framework_Constraint_LessThan matcher object.</li>
            <li id="logicalAnd"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/logicalAnd.xhtml">logicalAnd()</a>
                — Returns a PHPUnit_Framework_Constraint_And matcher object.</li>
            <li id="logicalNot"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/logicalNot.xhtml">logicalNot()</a>
                — Returns a PHPUnit_Framework_Constraint_Not matcher object.</li>
            <li id="logicalOr"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/logicalOr.xhtml">logicalOr()</a>
                — Returns a PHPUnit_Framework_Constraint_Or matcher object.</li>
            <li id="logicalXor"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/logicalXor.xhtml">logicalXor()</a>
                — Returns a PHPUnit_Framework_Constraint_Xor matcher object.</li>
            <li id="markTestIncomplete"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/markTestIncomplete.xhtml">markTestIncomplete()</a>
                — Mark the test as incomplete.</li>
            <li id="markTestSkipped"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/markTestSkipped.xhtml">markTestSkipped()</a>
                — Mark the test as skipped.</li>
            <li id="matches"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/matches.xhtml">matches()</a>
                — Returns a PHPUnit_Framework_Constraint_StringMatches matcher object.</li>
            <li id="matchesRegularExpression"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/matchesRegularExpression.xhtml">matchesRegularExpression()</a>
                — Returns a PHPUnit_Framework_Constraint_PCREMatch matcher object.</li>
            <li id="objectHasAttribute"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/objectHasAttribute.xhtml">objectHasAttribute()</a>
                — Returns a PHPUnit_Framework_Constraint_ObjectHasAttribute matcher object.</li>
            <li id="readAttribute"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/readAttribute.xhtml">readAttribute()</a>
                — Returns the value of an attribute of a class or an object.</li>
            <li id="resetCount"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/resetCount.xhtml">resetCount()</a>
                — Reset the assertion counter.</li>
            <li id="stringContains"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/stringContains.xhtml">stringContains()</a>
                — Returns a PHPUnit_Framework_Constraint_StringContains matcher object.</li>
            <li id="stringEndsWith"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/stringEndsWith.xhtml">stringEndsWith()</a>
                — Returns a PHPUnit_Framework_Constraint_StringEndsWith matcher object.</li>
            <li id="stringStartsWith"><a title="PHPUnit_Framework_Assert" href="../classes/PHPUnit_Framework_Assert/stringStartsWith.xhtml">stringStartsWith()</a>
                — Returns a PHPUnit_Framework_Constraint_StringStartsWith matcher object.</li>
          </ul>
        </div>
        <h2 id="history">History</h2>
        <ul class="styled history">
          <li>
            <h3>2014-08-17T09:59:50+02:00 (commit #<span title="f40b29067f21d94dd629cd0c8b9fd587f17f9d2b">f40b290</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Fix @since annotations</pre>
            </div>
          </li>
          <li>
            <h3>2014-08-12T07:25:32+02:00 (commit #<span title="55caa21ba071a9766715b63534ff9428a217d811">55caa21</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Fix CS/WS issues</pre>
            </div>
          </li>
          <li>
            <h3>2014-08-12T06:43:31+02:00 (commit #<span title="50dfaba6477d3b1a0c650d4f70a0d9f478ff6092">50dfaba</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">phpcbf --standard=PSR2 src tests</pre>
            </div>
          </li>
          <li>
            <h3>2014-08-02T01:43:22+02:00 (commit #<span title="c7cde96bd349e34be051008054fcd7dd7cd8c6d9">c7cde96</span>)</h3>
            <div>
              <p>
                        Author: Jeff Welch (whatthejeff@gmail.com) /
                        Commiter: Jeff Welch (whatthejeff@gmail.com)
                    </p>
              <pre class="wrapped">Use a better variable name.</pre>
            </div>
          </li>
          <li>
            <h3>2014-08-02T00:20:34+02:00 (commit #<span title="427eb1fea0e3d8e723fec847446a902d7afdc059">427eb1f</span>)</h3>
            <div>
              <p>
                        Author: Jeff Welch (whatthejeff@gmail.com) /
                        Commiter: Jeff Welch (whatthejeff@gmail.com)
                    </p>
              <pre class="wrapped">Fixes #1374: tearDown() is called despite unmet requirements.</pre>
            </div>
          </li>
          <li>
            <h3>2014-07-28T21:10:22+02:00 (commit #<span title="38231aa3737e2db37242f4b867acc40ca08ae32e">38231aa</span>)</h3>
            <div>
              <p>
                        Author: sun (sun@unleashedmind.com) /
                        Commiter: sun (sun@unleashedmind.com)
                    </p>
              <pre class="wrapped">Fix #797: Disabled $preserveGlobalState does not load bootstrap.php in process isolation.</pre>
            </div>
          </li>
          <li>
            <h3>2014-07-27T23:05:20+02:00 (commit #<span title="c85fcdcfccae31115ac2dcc4b78f227a1709eedd">c85fcdc</span>)</h3>
            <div>
              <p>
                        Author: Jeff Welch (whatthejeff@gmail.com) /
                        Commiter: Jeff Welch (whatthejeff@gmail.com)
                    </p>
              <pre class="wrapped">Clean up #1358.</pre>
            </div>
          </li>
          <li>
            <h3>2014-07-27T20:06:31+02:00 (commit #<span title="6b308c37dc48a7ba725024ef2e2514df5f9b1038">6b308c3</span>)</h3>
            <div>
              <p>
                        Author: sun (sun@unleashedmind.com) /
                        Commiter: sun (sun@unleashedmind.com)
                    </p>
              <pre class="wrapped">Allow a test to identify whether it runs in isolation.

A custom setup of test fixtures may use this indicator to skip additional performance optimizations that only make sense if multiple tests are executed in the same process.</pre>
            </div>
          </li>
          <li>
            <h3>2014-07-27T08:05:00+02:00 (commit #<span title="fc9c6dc9049caccba1ded291c746e0dd460c98b2">fc9c6dc</span>)</h3>
            <div>
              <p>
                        Author: Márcio Almada (marcio3w@gmail.com) /
                        Commiter: Márcio Almada (marcio3w@gmail.com)
                    </p>
              <pre class="wrapped">make TestCase aware of @expectedExceptionMessageRegExp and Constraint\ExceptionMessageRegExp</pre>
            </div>
          </li>
          <li>
            <h3>2014-07-27T07:55:48+02:00 (commit #<span title="2b37a6aa3f7664b6b67f7641b8c668ee3aa812f2">2b37a6a</span>)</h3>
            <div>
              <p>
                        Author: Márcio Almada (marcio3w@gmail.com) /
                        Commiter: Márcio Almada (marcio3w@gmail.com)
                    </p>
              <pre class="wrapped">add implementation for TestCase::setExpectedExceptionRegExp api</pre>
            </div>
          </li>
          <li>
            <h3>2014-07-22T10:14:19+02:00 (commit #<span title="d42fdc01cd973d28c45f42b617725efa20870f5b">d42fdc0</span>)</h3>
            <div>
              <p>
                        Author: Dominik del Bondio (dominik.del.bondio@bitextender.com) /
                        Commiter: Dominik del Bondio (dominik.del.bondio@bitextender.com)
                    </p>
              <pre class="wrapped">Fix tests failing with weird names and test isolation</pre>
            </div>
          </li>
          <li>
            <h3>2014-07-07T13:27:34+02:00 (commit #<span title="18852ac06e587d32e0b52f464477ec1cce9422c5">18852ac</span>)</h3>
            <div>
              <p>
                        Author: Eugene Leonovich (gen.work@gmail.com) /
                        Commiter: Eugene Leonovich (gen.work@gmail.com)
                    </p>
              <pre class="wrapped">Check both the function and the method for the existence via '@requires function' annotation</pre>
            </div>
          </li>
          <li>
            <h3>2014-07-03T11:17:31+02:00 (commit #<span title="46effd5ad4cf3e3e68260dc38686352fc7887eff">46effd5</span>)</h3>
            <div>
              <p>
                        Author: Evgeniy Makhrov (emakhrov@gmail.com) /
                        Commiter: Evgeniy Makhrov (emakhrov@gmail.com)
                    </p>
              <pre class="wrapped">Fix dependencyInput count in case of repeated test

Always use the latest result of dependency</pre>
            </div>
          </li>
          <li>
            <h3>2014-06-16T09:44:27+02:00 (commit #<span title="d76ecfc16051373c5e172a35d27aa29864f3b59d">d76ecfc</span>)</h3>
            <div>
              <p>
                        Author: Eugene Leonovich (gen.work@gmail.com) /
                        Commiter: Eugene Leonovich (gen.work@gmail.com)
                    </p>
              <pre class="wrapped">Fix formatting</pre>
            </div>
          </li>
          <li>
            <h3>2014-06-16T09:25:19+02:00 (commit #<span title="b006343d9866356200833c416c37b14491633db9">b006343</span>)</h3>
            <div>
              <p>
                        Author: Eugene Leonovich (gen.work@gmail.com) /
                        Commiter: Eugene Leonovich (gen.work@gmail.com)
                    </p>
              <pre class="wrapped">Tweak PHPUnit_Util_Test::getMissingRequirements() introduced in #1289</pre>
            </div>
          </li>
          <li>
            <h3>2014-06-15T18:41:38+02:00 (commit #<span title="168ac2bbb84832203e9644b18555c46053c56338">168ac2b</span>)</h3>
            <div>
              <p>
                        Author: Jeff Welch (whatthejeff@gmail.com) /
                        Commiter: Jeff Welch (whatthejeff@gmail.com)
                    </p>
              <pre class="wrapped">Formatting.</pre>
            </div>
          </li>
          <li>
            <h3>2014-06-13T09:18:02+02:00 (commit #<span title="df4404600fe7a83620f472e6112d71874f4bbb17">df44046</span>)</h3>
            <div>
              <p>
                        Author: Eugene Leonovich (gen.work@gmail.com) /
                        Commiter: Eugene Leonovich (gen.work@gmail.com)
                    </p>
              <pre class="wrapped">Remove PHPUnit_Util_Test::setRequirementsFromAnnotation()</pre>
            </div>
          </li>
          <li>
            <h3>2014-06-12T16:52:35+02:00 (commit #<span title="ee1da983168be1d9ea6dc2a1e86a6e3f1c729cf9">ee1da98</span>)</h3>
            <div>
              <p>
                        Author: Eugene Leonovich (gen.work@gmail.com) /
                        Commiter: Eugene Leonovich (gen.work@gmail.com)
                    </p>
              <pre class="wrapped">Check requirements before "beforeClass" calls in a TestSuite</pre>
            </div>
          </li>
          <li>
            <h3>2014-05-27T08:56:24+02:00 (commit #<span title="461607a24972f73015b9781a2c97c4f8c9b3a033">461607a</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Mark a test as risky when either the test code or the tested code does not (or does not only) close output buffers it has started</pre>
            </div>
          </li>
          <li>
            <h3>2014-05-02T02:46:42+02:00 (commit #<span title="b507a711cfa83077e5406b5d6e9b94a7b44c4f33">b507a71</span>)</h3>
            <div>
              <p>
                        Author: jeroendedauw (jeroendedauw@gmail.com) /
                        Commiter: jeroendedauw (jeroendedauw@gmail.com)
                    </p>
              <pre class="wrapped">Fix error in doc and make it more clear

The mentioned parameter was no longer last :)
The default behaviour with regard to mocking concrete methods
is unexpected, at least to me. So I changed the doc to mention
it more explicitly.</pre>
            </div>
          </li>
          <li>
            <h3>2014-04-26T08:27:42+02:00 (commit #<span title="efdfca6bf1ee99d609b7b20ecf63c3818e3d2182">efdfca6</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">PHPUnit_MockObject 2.0 and up do not have __phpunit_cleanup() anymore</pre>
            </div>
          </li>
          <li>
            <h3>2014-04-22T12:28:46+02:00 (commit #<span title="d20d40f323daaf21ed62b9490d6b2bacc2236965">d20d40f</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Make PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount and PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount accessible</pre>
            </div>
          </li>
          <li>
            <h3>2014-04-20T10:44:50+02:00 (commit #<span title="a8aa89eeb140839a76059d4186465152babc57cf">a8aa89e</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Refinement of 560c99abb8b7db7f5d7ca72653126134c97b3ac1</pre>
            </div>
          </li>
          <li>
            <h3>2014-04-18T18:54:55+02:00 (commit #<span title="560c99abb8b7db7f5d7ca72653126134c97b3ac1">560c99a</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Mark a test as risky when its method is annotated with @todo</pre>
            </div>
          </li>
          <li>
            <h3>2014-03-15T11:32:48+01:00 (commit #<span title="32a57955811d8e407811813012fe668e5c85ac63">32a5795</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Refactor the handling of the @beforeClass, @before, @after, @afterClass annotations to close #1186 and probably solve other issues (in process isolation, for instance)</pre>
            </div>
          </li>
          <li>
            <h3>2014-03-07T14:53:32+01:00 (commit #<span title="92f463d99297fdfed462308218808f1e2e6e3f75">92f463d</span>)</h3>
            <div>
              <p>
                        Author: Christopher Davis (cdavis9999@gmail.com) /
                        Commiter: Christopher Davis (cdavis9999@gmail.com)
                    </p>
              <pre class="wrapped">Lazily Create Mock Object Generator

Fixes #1164

Instead of setting up the mock object generator in TestCase's
constructor, it's created whenever a call to `getMockObjectGenerator` is
made.</pre>
            </div>
          </li>
          <li>
            <h3>2014-02-14T18:31:32+01:00 (commit #<span title="e5b50bc60abbc96ae53aa0efd4291345fe4128ff">e5b50bc</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Next version will be 4.0</pre>
            </div>
          </li>
          <li>
            <h3>2014-01-28T19:06:49+01:00 (commit #<span title="4c047ce113e56a9f34a6eae14fe0602e97da8b91">4c047ce</span>)</h3>
            <div>
              <p>
                        Author: Markus Staab (markus.staab@redaxo.de) /
                        Commiter: Jeff Welch (markus.staab@redaxo.de)
                    </p>
              <pre class="wrapped">added @since phpdoc for hasDependencies</pre>
            </div>
          </li>
          <li>
            <h3>2014-01-28T19:02:23+01:00 (commit #<span title="13f77b7d78f5ec358a02e4627bceb72b506a868e">13f77b7</span>)</h3>
            <div>
              <p>
                        Author: Lars Strojny (lars@strojny.net) /
                        Commiter: Jeff Welch (lars@strojny.net)
                    </p>
              <pre class="wrapped">Adding a few mutators</pre>
            </div>
          </li>
          <li>
            <h3>2014-01-28T17:00:42+01:00 (commit #<span title="dfab5de5466b5862f7d05fe9ab6cb9d8da91bd71">dfab5de</span>)</h3>
            <div>
              <p>
                        Author: Markus Staab (markus.staab@redaxo.de) /
                        Commiter: Markus Staab (markus.staab@redaxo.de)
                    </p>
              <pre class="wrapped">added @since phpdoc for hasDependencies</pre>
            </div>
          </li>
          <li>
            <h3>2014-01-22T19:43:07+01:00 (commit #<span title="02b42d7e912186a17d56fa803ae4682d16f1ff79">02b42d7</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Initial work on formatting code according to PSR-2</pre>
            </div>
          </li>
          <li>
            <h3>2014-01-20T17:21:13+01:00 (commit #<span title="3a5808fbca4ee832c27f13a544fdf8809eec62ec">3a5808f</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Cleanup</pre>
            </div>
          </li>
          <li>
            <h3>2014-01-18T11:52:34+01:00 (commit #<span title="db5adbbc8421bbcfdc9ebcd9e0993976fa2503fa">db5adbb</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Initial work on #1101</pre>
            </div>
          </li>
          <li>
            <h3>2014-01-18T11:44:56+01:00 (commit #<span title="e8a966be71adaa2899f50436c2324a42a6e197ac">e8a966b</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Refactor PHPUnit_Util_PHP</pre>
            </div>
          </li>
          <li>
            <h3>2014-01-12T01:26:16+01:00 (commit #<span title="af5610d2aa0a3a223dc2fa3ef9ae4071ebb1fac4">af5610d</span>)</h3>
            <div>
              <p>
                        Author: Lars Strojny (lars@strojny.net) /
                        Commiter: Lars Strojny (lars@strojny.net)
                    </p>
              <pre class="wrapped">Adding a few mutators</pre>
            </div>
          </li>
          <li>
            <h3>2014-01-09T08:11:47+01:00 (commit #<span title="205e00844d1d9cf4cd4545c4cc45f1121a6b0824">205e008</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Bump copyright year</pre>
            </div>
          </li>
          <li>
            <h3>2014-01-05T12:03:59+01:00 (commit #<span title="9101f51cad93f97bea7b277007127635653eadbf">9101f51</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Closes #914</pre>
            </div>
          </li>
          <li>
            <h3>2014-01-02T20:30:36+01:00 (commit #<span title="feef5c95b1a85c46cc994593f6c2eece0ddf375f">feef5c9</span>)</h3>
            <div>
              <p>
                        Author: Eugene Leonovich (gen.work@gmail.com) /
                        Commiter: Eugene Leonovich (gen.work@gmail.com)
                    </p>
              <pre class="wrapped">Check the requirements before setUpBeforeClass()</pre>
            </div>
          </li>
          <li>
            <h3>2013-12-31T10:10:55+01:00 (commit #<span title="4b2391e18af426b11cf5546f332365b646123e24">4b2391e</span>)</h3>
            <div>
              <p>
                        Author: Eugene Leonovich (gen.work@gmail.com) /
                        Commiter: Eugene Leonovich (gen.work@gmail.com)
                    </p>
              <pre class="wrapped">Check the requirements before calling the setUp()</pre>
            </div>
          </li>
          <li>
            <h3>2013-12-06T15:23:00+01:00 (commit #<span title="ffb5bb8cbc0390aa2241c220c68d108cb80e6bf9">ffb5bb8</span>)</h3>
            <div>
              <p>
                        Author: Matthieu Napoli (matthieu@mnapoli.fr) /
                        Commiter: Matthieu Napoli (matthieu@mnapoli.fr)
                    </p>
              <pre class="wrapped">Added phpdoc for TestCase::getMock

Texts inspired from the doc: http://phpunit.de/manual/3.7/en/test-doubles.html</pre>
            </div>
          </li>
          <li>
            <h3>2013-11-03T18:41:44+01:00 (commit #<span title="ea9d5183f9e1762f15cb2f113901362d23004364">ea9d518</span>)</h3>
            <div>
              <p>
                        Author: Jan Pieper (kontakt@jan-pieper.info) /
                        Commiter: Jan Pieper (kontakt@jan-pieper.info)
                    </p>
              <pre class="wrapped">corrected return type from string to boolean</pre>
            </div>
          </li>
          <li>
            <h3>2013-09-25T13:27:08+02:00 (commit #<span title="ed0eac7ae106f35aeaa17c6ec7b2550d742f5a5a">ed0eac7</span>)</h3>
            <div>
              <p>
                        Author: Hans-Peter Buniat (hpbuniat@gmail.com) /
                        Commiter: Hans-Peter Buniat (hpbuniat@gmail.com)
                    </p>
              <pre class="wrapped">less memory-consuming way to determine array-recursions</pre>
            </div>
          </li>
          <li>
            <h3>2013-09-04T06:29:36+02:00 (commit #<span title="c07b181876b6bb688cd49956a79d83857179cba2">c07b181</span>)</h3>
            <div>
              <p>
                        Author: Jeff Welch (whatthejeff@gmail.com) /
                        Commiter: Jeff Welch (whatthejeff@gmail.com)
                    </p>
              <pre class="wrapped">Fixes #991

Removed:

 * `@outputBuffering`
 * `PHPUnit_Framework_TestCase::setUseOutputBuffering()`
 * `PHPUnit_Util_Test::getOutputBufferingSettings()`</pre>
            </div>
          </li>
          <li>
            <h3>2013-08-09T08:55:12+02:00 (commit #<span title="fbd4d588cd29eaa5b4013ec83704352c6bf616b2">fbd4d58</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Closes #982</pre>
            </div>
          </li>
          <li>
            <h3>2013-07-10T10:10:20+02:00 (commit #<span title="79d0d716e3e546d38a12f3d9dae465a242cb1428">79d0d71</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Required change for https://github.com/sebastianbergmann/phpunit-mock-objects/issues/132</pre>
            </div>
          </li>
          <li>
            <h3>2013-07-09T18:10:38+02:00 (commit #<span title="d1efb5146a93d264d82b6304b7961451188b4a15">d1efb51</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Sync with https://github.com/sebastianbergmann/phpunit-mock-objects/commit/ee8b777e0a0aea24856089fe4e83f9d7be4bac6d</pre>
            </div>
          </li>
          <li>
            <h3>2013-05-22T18:26:25+02:00 (commit #<span title="a2903c3f01b4eb55e117b8d7f64322a79be0d69c">a2903c3</span>)</h3>
            <div>
              <p>
                        Author: Dave Hulbert (dave1010@gmail.com) /
                        Commiter: Dave Hulbert (dave1010@gmail.com)
                    </p>
              <pre class="wrapped">Make TestCase::hasOutput() return true if "0" is outputted

TestCase::hasOutput() returns false when "0" is outputted, as it uses empty(), which returns false on the string "0".</pre>
            </div>
          </li>
          <li>
            <h3>2013-04-25T11:15:18+02:00 (commit #<span title="3a626596a791056b9dfa7311611563b5ddb42525">3a62659</span>)</h3>
            <div>
              <p>
                        Author: Giorgio Sironi (info@giorgiosironi.com) /
                        Commiter: Giorgio Sironi (info@giorgiosironi.com)
                    </p>
              <pre class="wrapped">Making setUp() and tearDown() part of the new design</pre>
            </div>
          </li>
          <li>
            <h3>2013-04-25T11:13:18+02:00 (commit #<span title="8a7c496ce2cc3818ed4616244a699b7bda7e7db4">8a7c496</span>)</h3>
            <div>
              <p>
                        Author: Giorgio Sironi (info@giorgiosironi.com) /
                        Commiter: Giorgio Sironi (info@giorgiosironi.com)
                    </p>
              <pre class="wrapped">Added support for @before and @after</pre>
            </div>
          </li>
          <li>
            <h3>2013-04-25T10:35:41+02:00 (commit #<span title="09ce33367dbb6afedd7afc13f570127c1a861fd7">09ce333</span>)</h3>
            <div>
              <p>
                        Author: Giorgio Sironi (info@giorgiosironi.com) /
                        Commiter: Giorgio Sironi (info@giorgiosironi.com)
                    </p>
              <pre class="wrapped">Failing test, with hack to make it pass</pre>
            </div>
          </li>
          <li>
            <h3>2013-03-09T11:18:09+01:00 (commit #<span title="cf444caf335bdd3ad3d5075032fd001a3626cf45">cf444ca</span>)</h3>
            <div>
              <p>
                        Author: Adam Lynch (contact@adamlynch.ie) /
                        Commiter: Adam Lynch (contact@adamlynch.ie)
                    </p>
              <pre class="wrapped">Fixed some PHPDoc block mistakes</pre>
            </div>
          </li>
          <li>
            <h3>2013-03-08T12:30:34+01:00 (commit #<span title="8c3ef881740a426cf66026f13d83c0ffc57b82dd">8c3ef88</span>)</h3>
            <div>
              <p>
                        Author: Alistair Stead (alistair.stead@designdisclosure.com) /
                        Commiter: Alistair Stead (alistair.stead@designdisclosure.com)
                    </p>
              <pre class="wrapped">Added $options array to TestCase::getMockFromWsdl

Summary:

So that the SOAPClient is created with the appropriate options and additional parameter has been added to getMockFromWsdl and passed through to the MockObject_Generator. This is required if your create a mock method for __doRequest and pass a complex xml string. If you do not have the option to set client options it can result in different interpretation of objects and arrays by the SOAPClient.</pre>
            </div>
          </li>
          <li>
            <h3>2013-03-06T04:13:36+01:00 (commit #<span title="d2fac9838fdb4a81fffc60da878636e2c220e225">d2fac98</span>)</h3>
            <div>
              <p>
                        Author: Jeff Welch (whatthejeff@gmail.com) /
                        Commiter: Jeff Welch (whatthejeff@gmail.com)
                    </p>
              <pre class="wrapped">Slight improvement to b9ea952.</pre>
            </div>
          </li>
          <li>
            <h3>2013-03-05T22:33:11+01:00 (commit #<span title="6755f060ede7ba242be64271c944b17472a71e0d">6755f06</span>)</h3>
            <div>
              <p>
                        Author: Jeff Welch (whatthejeff@gmail.com) /
                        Commiter: Jeff Welch (whatthejeff@gmail.com)
                    </p>
              <pre class="wrapped">Merge branch '3.7'</pre>
            </div>
          </li>
          <li>
            <h3>2013-03-05T22:27:27+01:00 (commit #<span title="b9ea952d0ffc502a83442cd328c756148cf023f4">b9ea952</span>)</h3>
            <div>
              <p>
                        Author: Jeff Welch (whatthejeff@gmail.com) /
                        Commiter: Jeff Welch (whatthejeff@gmail.com)
                    </p>
              <pre class="wrapped">Made #844 work for isolated tests.</pre>
            </div>
          </li>
          <li>
            <h3>2013-02-21T07:01:38+01:00 (commit #<span title="2d5f2a16869a54a0781fc2e3546b63c471fcc817">2d5f2a1</span>)</h3>
            <div>
              <p>
                        Author: Jeff Welch (whatthejeff@gmail.com) /
                        Commiter: Jeff Welch (whatthejeff@gmail.com)
                    </p>
              <pre class="wrapped">Fixes #834

 * Added the `@requires OS` annotation.</pre>
            </div>
          </li>
          <li>
            <h3>2013-01-25T09:14:14+01:00 (commit #<span title="21f620f8c9c83033c9413f38de5b3e174657436b">21f620f</span>)</h3>
            <div>
              <p>
                        Author: Jeff Welch (whatthejeff@gmail.com) /
                        Commiter: Jeff Welch (whatthejeff@gmail.com)
                    </p>
              <pre class="wrapped">Fixes #789

 * Maintain INI values during process isolation.</pre>
            </div>
          </li>
          <li>
            <h3>2013-01-10T05:11:46+01:00 (commit #<span title="98deae1dcab52000ac7cae4ce53ffd7d8d86a714">98deae1</span>)</h3>
            <div>
              <p>
                        Author: Jeff Welch (whatthejeff@gmail.com) /
                        Commiter: Jeff Welch (whatthejeff@gmail.com)
                    </p>
              <pre class="wrapped">Implemented trait mocking.</pre>
            </div>
          </li>
          <li>
            <h3>2013-01-07T11:37:52+01:00 (commit #<span title="c517984099c588d7cbe04bea9fb756a764769f5f">c517984</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Bump copyright year</pre>
            </div>
          </li>
          <li>
            <h3>2013-01-07T05:45:48+01:00 (commit #<span title="6567f5f453de1f830fcc1a7eeea164b093c4e837">6567f5f</span>)</h3>
            <div>
              <p>
                        Author: Jeff Welch (whatthejeff@gmail.com) /
                        Commiter: Jeff Welch (whatthejeff@gmail.com)
                    </p>
              <pre class="wrapped">Fixes GH-765

 * Fixed fatal error triggered in PHPUnit when exception is thrown in data provider of a test with a dependency.</pre>
            </div>
          </li>
          <li>
            <h3>2012-11-14T12:54:09+01:00 (commit #<span title="834d99bdb7f44d25ef4b64f4dac440dd73a41bb9">834d99b</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">PHPUnit_Framework_MockObject_Generator is non-static now.</pre>
            </div>
          </li>
          <li>
            <h3>2012-09-24T06:47:44+02:00 (commit #<span title="81ab540c8718a37315962b8242c7f1b4ee031ed4">81ab540</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Do not perform string replacement for @package_version@ anymore.</pre>
            </div>
          </li>
          <li>
            <h3>2012-09-20T08:37:13+02:00 (commit #<span title="e46f1f1c6c432deb6b66a4c6dc77ad7211209402">e46f1f1</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Always clean up mock objects (and free up memory). Closes #656.</pre>
            </div>
          </li>
          <li>
            <h3>2012-08-31T17:00:07+02:00 (commit #<span title="d8231102fe4db1b2c776b55804a51319152de9b6">d823110</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Disable argument cloning in mocked method calls by default.</pre>
            </div>
          </li>
          <li>
            <h3>2012-08-03T11:18:58+02:00 (commit #<span title="7ad180900e2eff0cf0cf841600f6b5150b728d91">7ad1809</span>)</h3>
            <div>
              <p>
                        Author: Fabien Potencier (fabien.potencier@gmail.com) /
                        Commiter: Fabien Potencier (fabien.potencier@gmail.com)
                    </p>
              <pre class="wrapped">Fix data serialization when using process isolation (closes #614)</pre>
            </div>
          </li>
          <li>
            <h3>2012-05-26T18:09:06+02:00 (commit #<span title="ae046613ba9419e854f57bd56f69e832ab50ea74">ae04661</span>)</h3>
            <div>
              <p>
                        Author: Volker Dusch (github@wallbash.com) /
                        Commiter: Volker Dusch (github@wallbash.com)
                    </p>
              <pre class="wrapped">Revert 01e5c980 from #561. The way the exception message is shown is not making it clear to the user what is shown</pre>
            </div>
          </li>
          <li>
            <h3>2012-05-03T11:48:58+02:00 (commit #<span title="01e5c98031086d5dfe299a98c534141eb5ce4d40">01e5c98</span>)</h3>
            <div>
              <p>
                        Author: Philipp Scheit (p.scheit@ps-webforge.com) /
                        Commiter: Philipp Scheit (p.scheit@ps-webforge.com)
                    </p>
              <pre class="wrapped">TestCase::runTest more verbose expectedException assertion message when expectedExceptionMessage is not checked
ConfigurationTest::testPHPConfigurationIsReadCorrectly use directory_seperator for testing the path on windows</pre>
            </div>
          </li>
          <li>
            <h3>2012-04-30T12:02:38+02:00 (commit #<span title="5786e50b3878cba88932b10e6a48c75723950707">5786e50</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">List The BSD 3-Clause License correctly and consistently. Thanks to Christian Aistleitner &lt;christian@quelltextlich.at&gt; for bringing this issue to my attention.</pre>
            </div>
          </li>
          <li>
            <h3>2012-03-24T12:38:48+01:00 (commit #<span title="1d723d0bf9b379101c898954dc8f373fea87885f">1d723d0</span>)</h3>
            <div>
              <p>
                        Author: Volker Dusch (github@wallbash.com) /
                        Commiter: Volker Dusch (github@wallbash.com)
                    </p>
              <pre class="wrapped">Closes phpunit-mock-object 83: getMockFromWsdl  didn't work twice with the same wsdl file</pre>
            </div>
          </li>
          <li>
            <h3>2012-02-19T00:12:02+01:00 (commit #<span title="22a704d05f9ebed2d29d611742cdc76efa745319">22a704d</span>)</h3>
            <div>
              <p>
                        Author: Volker Dusch (github@wallbash.com) /
                        Commiter: Volker Dusch (github@wallbash.com)
                    </p>
              <pre class="wrapped">Refactored and expanded @requires to allow for checking multiple functions and extensions using the annotation</pre>
            </div>
          </li>
          <li>
            <h3>2012-01-31T08:06:42+01:00 (commit #<span title="4e5fbcb7c0d2e5d0f8ccfb090d91c24a682c0aa5">4e5fbcb</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Add API to make cloning of arguments passed to mocked methods optional.</pre>
            </div>
          </li>
          <li>
            <h3>2012-01-19T23:05:45+01:00 (commit #<span title="64788f353546cab933bfe04f8981f8a0ebbe9f50">64788f3</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Closes #463.</pre>
            </div>
          </li>
          <li>
            <h3>2012-01-19T08:09:49+01:00 (commit #<span title="6acd28ee691589c3d4f2b015846647abce9760de">6acd28e</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Fix reflection errors when PHPUnit_Framework_Warning is used.</pre>
            </div>
          </li>
          <li>
            <h3>2012-01-01T11:21:16+01:00 (commit #<span title="aae6c3808b9c4bee416657298fa90865d6898d60">aae6c38</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Bump copyright year.</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-27T19:19:05+01:00 (commit #<span title="f9f4662a71bc17c101921a6e193c9a5771749e49">f9f4662</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Eliminate dead code.</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-27T10:52:44+01:00 (commit #<span title="19e689192857a7293f96a9a54c522007280d337e">19e6891</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Support expecting the generic Exception again.</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-27T10:21:52+01:00 (commit #<span title="37cacc915e512f640fefa9c6422d503f3c59455e">37cacc9</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">PHPUnit no longer throws exceptions that do not extend PHPUnit_Framework_Exception.</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-22T18:51:23+01:00 (commit #<span title="4bf0f7cec594de4d5659f5e861757ab39da255fb">4bf0f7c</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Even more work on failure messages for expected exceptions.</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-21T11:51:53+01:00 (commit #<span title="370f00e9201fadd65ca200cc2b20566e5e2eb15f">370f00e</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Improve failure messages for exception expectations.</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-20T14:28:44+01:00 (commit #<span title="af0bdd624557fe15f7731ec1101daff0b1214771">af0bdd6</span>)</h3>
            <div>
              <p>
                        Author: Volker Dusch (github@wallbash.com) /
                        Commiter: Volker Dusch (github@wallbash.com)
                    </p>
              <pre class="wrapped">Fixes #445: Expecting output in strict mode didn't work because hasOutput() returned that the test had generated outed, that output was then printed and the strict requirement that no output should be generated failed.

Adapted hasOutput() to include the flag that shows off if output has already been generated and asserted against.</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-20T12:07:08+01:00 (commit #<span title="32f1eb09b3b2a7c71ef4ded81b18ddf00510f8a4">32f1eb0</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Revert "Improve error message for exception code mismatch."

This reverts commit ba09f2115bdcacab10ea855624eab02a464dc9c4.</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-20T11:28:29+01:00 (commit #<span title="ba09f2115bdcacab10ea855624eab02a464dc9c4">ba09f21</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Improve error message for exception code mismatch.</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-20T10:22:06+01:00 (commit #<span title="a98b7660774b51bed6ca0870ad1e047351aa0c7f">a98b766</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Expected exception code may now be 0.</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-16T17:33:30+01:00 (commit #<span title="d368bf82160eced48e8a56ee44fd437cba3cfe87">d368bf8</span>)</h3>
            <div>
              <p>
                        Author: Volker Dusch (github@wallbash.com) /
                        Commiter: Volker Dusch (github@wallbash.com)
                    </p>
              <pre class="wrapped">Fix phpcs</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-15T10:34:49+01:00 (commit #<span title="7a2e6e470b2f8011e59d6ef80f4cf9063d9fa789">7a2e6e4</span>)</h3>
            <div>
              <p>
                        Author: Volker Dusch (github@wallbash.com) /
                        Commiter: Volker Dusch (github@wallbash.com)
                    </p>
              <pre class="wrapped">Fixes #420: Output buffering is now stopped unconditionally as it is also started unconditionally with 3.6</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-14T22:13:12+01:00 (commit #<span title="01b6af343a6b421a58272806c756ecb8d01b94f0">01b6af3</span>)</h3>
            <div>
              <p>
                        Author: David Zuelke (david.zuelke@bitextender.com) /
                        Commiter: David Zuelke (david.zuelke@bitextender.com)
                    </p>
              <pre class="wrapped">Use var_export() instead of addcslashes() on serialized/generated data for process isolation - addcslashes() screws up null byte escape sequences, which causes PHP to crash with garbage output - thou shalt not mutate thy serialize() output.</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-13T13:09:23+01:00 (commit #<span title="11b91532bc68a9c39d862f212141854f7232357a">11b9153</span>)</h3>
            <div>
              <p>
                        Author: Volker Dusch (github@wallbash.com) /
                        Commiter: Volker Dusch (github@wallbash.com)
                    </p>
              <pre class="wrapped">Fixes #433 for failing tests that expect output to be produced</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-12T17:34:49+01:00 (commit #<span title="29a481caa4b21521a9901521a3ef4938ffb50e3f">29a481c</span>)</h3>
            <div>
              <p>
                        Author: Volker Dusch (github@wallbash.com) /
                        Commiter: Volker Dusch (github@wallbash.com)
                    </p>
              <pre class="wrapped">Fix phpcs issues</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-12T17:24:27+01:00 (commit #<span title="e4fb303da950a6457f43e85054a3f574bcc17a67">e4fb303</span>)</h3>
            <div>
              <p>
                        Author: Volker Dusch (github@wallbash.com) /
                        Commiter: Volker Dusch (github@wallbash.com)
                    </p>
              <pre class="wrapped">Fixes #433. Don't print generated output when expectations are performed on it</pre>
            </div>
          </li>
          <li>
            <h3>2011-12-05T12:18:34+01:00 (commit #<span title="025dd36def87c5f4abed807cc65a23b5b5790e0f">025dd36</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">sed -i 's#dirname(__FILE__)#__DIR__#gi' **/*.php</pre>
            </div>
          </li>
          <li>
            <h3>2011-11-17T09:40:23+01:00 (commit #<span title="87b0b82916ff0887516c7e8e7bdb254c2472a6e1">87b0b82</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Fix PHPUnit_Framework_TestCase::hasOutput().</pre>
            </div>
          </li>
          <li>
            <h3>2011-11-11T20:36:21+01:00 (commit #<span title="518f30cb1f822c61d78ed941c8d0b59027d441ba">518f30c</span>)</h3>
            <div>
              <p>
                        Author: Volker Dusch (github@wallbash.com) /
                        Commiter: Volker Dusch (github@wallbash.com)
                    </p>
              <pre class="wrapped">Fix whitespace issue</pre>
            </div>
          </li>
          <li>
            <h3>2011-11-11T12:30:41+01:00 (commit #<span title="81af17c3fff39fb12f27fb349fc33cb9b10b5f69">81af17c</span>)</h3>
            <div>
              <p>
                        Author: Volker Dusch (github@wallbash.com) /
                        Commiter: Volker Dusch (github@wallbash.com)
                    </p>
              <pre class="wrapped">Restore current working directory if changed by a test case. Closes #207</pre>
            </div>
          </li>
          <li>
            <h3>2011-11-10T19:57:54+01:00 (commit #<span title="bcf5245550c07cc8404deddf382a59c581f037a7">bcf5245</span>)</h3>
            <div>
              <p>
                        Author: Volker Dusch (github@wallbash.com) /
                        Commiter: Volker Dusch (github@wallbash.com)
                    </p>
              <pre class="wrapped">Fixes #244 by allowing string exception codes</pre>
            </div>
          </li>
          <li>
            <h3>2011-11-08T09:52:35+01:00 (commit #<span title="9c9bdcbbe07e3433a68e5c05d00378da6e1cb15f">9c9bdcb</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Eliminate version_compare() calls.</pre>
            </div>
          </li>
          <li>
            <h3>2011-10-24T11:10:38+02:00 (commit #<span title="2134d11ab77f4d987979fff3f1636de06252e9bb">2134d11</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Delay the call to setExpectedExceptionFromAnnotation() until we are in the test context and the InvalidArgumentException can be caught by the test runner.</pre>
            </div>
          </li>
          <li>
            <h3>2011-10-24T09:44:47+02:00 (commit #<span title="ecfbc2144cd3d870c7eb05b744850a1ed7eb9f3b">ecfbc21</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Also trigger error for \Exception.</pre>
            </div>
          </li>
          <li>
            <h3>2011-10-07T08:47:14+02:00 (commit #<span title="88066816241215668267dc0d4a379f11a5154236">8806681</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Closes #371.</pre>
            </div>
          </li>
          <li>
            <h3>2011-10-07T07:53:18+02:00 (commit #<span title="cd4cea92cfb760fbcc713cfbbb56ad6aa05da448">cd4cea9</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Add PHPUnit_Framework_TestCase::setTestResultObject().</pre>
            </div>
          </li>
          <li>
            <h3>2011-10-07T07:48:46+02:00 (commit #<span title="f44f925fb25be2beac1ce8de07849868023e0f18">f44f925</span>)</h3>
            <div>
              <p>
                        Author: Sebastian Bergmann (sb@sebastian-bergmann.de) /
                        Commiter: Sebastian Bergmann (sb@sebastian-bergmann.de)
                    </p>
              <pre class="wrapped">Fix whitespace.</pre>
            </div>
          </li>
          <li>
            <h3>2011-09-27T11:29:02+02:00 (commit #<span title="e87ed5f03ec382acefccacfb0914193e549ba64b">e87ed5f</span>)</h3>
            <div>
              <p>
                        Author: Nick Payne (nick@kurai.co.uk) /
                        Commiter: Nick Payne (nick@kurai.co.uk)
                    </p>
              <pre class="wrapped">allow concrete methods of abstract classes to be mocked</pre>
            </div>
          </li>
        </ul>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.7.0 - Copyright (C) 2010 - 2014 by Arne Blankerts</span>
    </footer>
  </body>
</html>
