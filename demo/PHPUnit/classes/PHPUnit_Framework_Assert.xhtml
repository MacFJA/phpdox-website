<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "html" "">
<html xmlns="http://www.w3.org/1999/xhtml" class="no-js" lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>PHPUnit - PHPUnit_Framework_Assert - API Documentation</title>
    <link href="../css/normalize.css" rel="stylesheet" type="text/css" media="all"/>
    <link href="../css/styles.css" rel="stylesheet" type="text/css" media="all"/>
  </head>
  <body>
    <div class="wrapper clearfix">
      <div class="topbar clearfix">
        <h1>
          <a class="brand" href="../index.xhtml">PHPUnit - API Documentation</a>
        </h1>
        <ul class="nav">
          <li class="active">
            <a href="../index.xhtml">Overview</a>
          </li>
        </ul>
      </div>
      <div class="navigation">
        <h3>Members</h3>
        <ul>
          <li>
            <a href="#count">$count</a>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul>
          <li>
            <a href="#anything">anything</a>
          </li>
          <li>
            <a href="#arrayHasKey">arrayHasKey</a>
          </li>
          <li>
            <a href="#assertArrayHasKey">assertArrayHasKey</a>
          </li>
          <li>
            <a href="#assertArrayNotHasKey">assertArrayNotHasKey</a>
          </li>
          <li>
            <a href="#assertAttributeContains">assertAttributeContains</a>
          </li>
          <li>
            <a href="#assertAttributeContainsOnly">assertAttributeContainsOnly</a>
          </li>
          <li>
            <a href="#assertAttributeCount">assertAttributeCount</a>
          </li>
          <li>
            <a href="#assertAttributeEmpty">assertAttributeEmpty</a>
          </li>
          <li>
            <a href="#assertAttributeEquals">assertAttributeEquals</a>
          </li>
          <li>
            <a href="#assertAttributeGreaterThan">assertAttributeGreaterThan</a>
          </li>
          <li>
            <a href="#assertAttributeGreaterThanOrEqual">assertAttributeGreaterThanOrEqual</a>
          </li>
          <li>
            <a href="#assertAttributeInstanceOf">assertAttributeInstanceOf</a>
          </li>
          <li>
            <a href="#assertAttributeInternalType">assertAttributeInternalType</a>
          </li>
          <li>
            <a href="#assertAttributeLessThan">assertAttributeLessThan</a>
          </li>
          <li>
            <a href="#assertAttributeLessThanOrEqual">assertAttributeLessThanOrEqual</a>
          </li>
          <li>
            <a href="#assertAttributeNotContains">assertAttributeNotContains</a>
          </li>
          <li>
            <a href="#assertAttributeNotContainsOnly">assertAttributeNotContainsOnly</a>
          </li>
          <li>
            <a href="#assertAttributeNotCount">assertAttributeNotCount</a>
          </li>
          <li>
            <a href="#assertAttributeNotEmpty">assertAttributeNotEmpty</a>
          </li>
          <li>
            <a href="#assertAttributeNotEquals">assertAttributeNotEquals</a>
          </li>
          <li>
            <a href="#assertAttributeNotInstanceOf">assertAttributeNotInstanceOf</a>
          </li>
          <li>
            <a href="#assertAttributeNotInternalType">assertAttributeNotInternalType</a>
          </li>
          <li>
            <a href="#assertAttributeNotSame">assertAttributeNotSame</a>
          </li>
          <li>
            <a href="#assertAttributeSame">assertAttributeSame</a>
          </li>
          <li>
            <a href="#assertClassHasAttribute">assertClassHasAttribute</a>
          </li>
          <li>
            <a href="#assertClassHasStaticAttribute">assertClassHasStaticAttribute</a>
          </li>
          <li>
            <a href="#assertClassNotHasAttribute">assertClassNotHasAttribute</a>
          </li>
          <li>
            <a href="#assertClassNotHasStaticAttribute">assertClassNotHasStaticAttribute</a>
          </li>
          <li>
            <a href="#assertContains">assertContains</a>
          </li>
          <li>
            <a href="#assertContainsOnly">assertContainsOnly</a>
          </li>
          <li>
            <a href="#assertContainsOnlyInstancesOf">assertContainsOnlyInstancesOf</a>
          </li>
          <li>
            <a href="#assertCount">assertCount</a>
          </li>
          <li>
            <a href="#assertEmpty">assertEmpty</a>
          </li>
          <li>
            <a href="#assertEqualXMLStructure">assertEqualXMLStructure</a>
          </li>
          <li>
            <a href="#assertEquals">assertEquals</a>
          </li>
          <li>
            <a href="#assertFalse">assertFalse</a>
          </li>
          <li>
            <a href="#assertFileEquals">assertFileEquals</a>
          </li>
          <li>
            <a href="#assertFileExists">assertFileExists</a>
          </li>
          <li>
            <a href="#assertFileNotEquals">assertFileNotEquals</a>
          </li>
          <li>
            <a href="#assertFileNotExists">assertFileNotExists</a>
          </li>
          <li>
            <a href="#assertGreaterThan">assertGreaterThan</a>
          </li>
          <li>
            <a href="#assertGreaterThanOrEqual">assertGreaterThanOrEqual</a>
          </li>
          <li>
            <a href="#assertInstanceOf">assertInstanceOf</a>
          </li>
          <li>
            <a href="#assertInternalType">assertInternalType</a>
          </li>
          <li>
            <a href="#assertJson">assertJson</a>
          </li>
          <li>
            <a href="#assertJsonFileEqualsJsonFile">assertJsonFileEqualsJsonFile</a>
          </li>
          <li>
            <a href="#assertJsonFileNotEqualsJsonFile">assertJsonFileNotEqualsJsonFile</a>
          </li>
          <li>
            <a href="#assertJsonStringEqualsJsonFile">assertJsonStringEqualsJsonFile</a>
          </li>
          <li>
            <a href="#assertJsonStringEqualsJsonString">assertJsonStringEqualsJsonString</a>
          </li>
          <li>
            <a href="#assertJsonStringNotEqualsJsonFile">assertJsonStringNotEqualsJsonFile</a>
          </li>
          <li>
            <a href="#assertJsonStringNotEqualsJsonString">assertJsonStringNotEqualsJsonString</a>
          </li>
          <li>
            <a href="#assertLessThan">assertLessThan</a>
          </li>
          <li>
            <a href="#assertLessThanOrEqual">assertLessThanOrEqual</a>
          </li>
          <li>
            <a href="#assertNotContains">assertNotContains</a>
          </li>
          <li>
            <a href="#assertNotContainsOnly">assertNotContainsOnly</a>
          </li>
          <li>
            <a href="#assertNotCount">assertNotCount</a>
          </li>
          <li>
            <a href="#assertNotEmpty">assertNotEmpty</a>
          </li>
          <li>
            <a href="#assertNotEquals">assertNotEquals</a>
          </li>
          <li>
            <a href="#assertNotInstanceOf">assertNotInstanceOf</a>
          </li>
          <li>
            <a href="#assertNotInternalType">assertNotInternalType</a>
          </li>
          <li>
            <a href="#assertNotNull">assertNotNull</a>
          </li>
          <li>
            <a href="#assertNotRegExp">assertNotRegExp</a>
          </li>
          <li>
            <a href="#assertNotSame">assertNotSame</a>
          </li>
          <li>
            <a href="#assertNotSameSize">assertNotSameSize</a>
          </li>
          <li>
            <a href="#assertNotTag">assertNotTag</a>
          </li>
          <li>
            <a href="#assertNull">assertNull</a>
          </li>
          <li>
            <a href="#assertObjectHasAttribute">assertObjectHasAttribute</a>
          </li>
          <li>
            <a href="#assertObjectNotHasAttribute">assertObjectNotHasAttribute</a>
          </li>
          <li>
            <a href="#assertRegExp">assertRegExp</a>
          </li>
          <li>
            <a href="#assertSame">assertSame</a>
          </li>
          <li>
            <a href="#assertSameSize">assertSameSize</a>
          </li>
          <li>
            <a href="#assertSelectCount">assertSelectCount</a>
          </li>
          <li>
            <a href="#assertSelectEquals">assertSelectEquals</a>
          </li>
          <li>
            <a href="#assertSelectRegExp">assertSelectRegExp</a>
          </li>
          <li>
            <a href="#assertStringEndsNotWith">assertStringEndsNotWith</a>
          </li>
          <li>
            <a href="#assertStringEndsWith">assertStringEndsWith</a>
          </li>
          <li>
            <a href="#assertStringEqualsFile">assertStringEqualsFile</a>
          </li>
          <li>
            <a href="#assertStringMatchesFormat">assertStringMatchesFormat</a>
          </li>
          <li>
            <a href="#assertStringMatchesFormatFile">assertStringMatchesFormatFile</a>
          </li>
          <li>
            <a href="#assertStringNotEqualsFile">assertStringNotEqualsFile</a>
          </li>
          <li>
            <a href="#assertStringNotMatchesFormat">assertStringNotMatchesFormat</a>
          </li>
          <li>
            <a href="#assertStringNotMatchesFormatFile">assertStringNotMatchesFormatFile</a>
          </li>
          <li>
            <a href="#assertStringStartsNotWith">assertStringStartsNotWith</a>
          </li>
          <li>
            <a href="#assertStringStartsWith">assertStringStartsWith</a>
          </li>
          <li>
            <a href="#assertTag">assertTag</a>
          </li>
          <li>
            <a href="#assertThat">assertThat</a>
          </li>
          <li>
            <a href="#assertTrue">assertTrue</a>
          </li>
          <li>
            <a href="#assertXmlFileEqualsXmlFile">assertXmlFileEqualsXmlFile</a>
          </li>
          <li>
            <a href="#assertXmlFileNotEqualsXmlFile">assertXmlFileNotEqualsXmlFile</a>
          </li>
          <li>
            <a href="#assertXmlStringEqualsXmlFile">assertXmlStringEqualsXmlFile</a>
          </li>
          <li>
            <a href="#assertXmlStringEqualsXmlString">assertXmlStringEqualsXmlString</a>
          </li>
          <li>
            <a href="#assertXmlStringNotEqualsXmlFile">assertXmlStringNotEqualsXmlFile</a>
          </li>
          <li>
            <a href="#assertXmlStringNotEqualsXmlString">assertXmlStringNotEqualsXmlString</a>
          </li>
          <li>
            <a href="#attribute">attribute</a>
          </li>
          <li>
            <a href="#attributeEqualTo">attributeEqualTo</a>
          </li>
          <li>
            <a href="#callback">callback</a>
          </li>
          <li>
            <a href="#classHasAttribute">classHasAttribute</a>
          </li>
          <li>
            <a href="#classHasStaticAttribute">classHasStaticAttribute</a>
          </li>
          <li>
            <a href="#contains">contains</a>
          </li>
          <li>
            <a href="#containsOnly">containsOnly</a>
          </li>
          <li>
            <a href="#containsOnlyInstancesOf">containsOnlyInstancesOf</a>
          </li>
          <li>
            <a href="#countOf">countOf</a>
          </li>
          <li>
            <a href="#equalTo">equalTo</a>
          </li>
          <li>
            <a href="#fail">fail</a>
          </li>
          <li>
            <a href="#fileExists">fileExists</a>
          </li>
          <li>
            <a href="#getCount">getCount</a>
          </li>
          <li>
            <a href="#getObjectAttribute">getObjectAttribute</a>
          </li>
          <li>
            <a href="#getStaticAttribute">getStaticAttribute</a>
          </li>
          <li>
            <a href="#greaterThan">greaterThan</a>
          </li>
          <li>
            <a href="#greaterThanOrEqual">greaterThanOrEqual</a>
          </li>
          <li>
            <a href="#identicalTo">identicalTo</a>
          </li>
          <li>
            <a href="#isEmpty">isEmpty</a>
          </li>
          <li>
            <a href="#isFalse">isFalse</a>
          </li>
          <li>
            <a href="#isInstanceOf">isInstanceOf</a>
          </li>
          <li>
            <a href="#isJson">isJson</a>
          </li>
          <li>
            <a href="#isNull">isNull</a>
          </li>
          <li>
            <a href="#isTrue">isTrue</a>
          </li>
          <li>
            <a href="#isType">isType</a>
          </li>
          <li>
            <a href="#lessThan">lessThan</a>
          </li>
          <li>
            <a href="#lessThanOrEqual">lessThanOrEqual</a>
          </li>
          <li>
            <a href="#logicalAnd">logicalAnd</a>
          </li>
          <li>
            <a href="#logicalNot">logicalNot</a>
          </li>
          <li>
            <a href="#logicalOr">logicalOr</a>
          </li>
          <li>
            <a href="#logicalXor">logicalXor</a>
          </li>
          <li>
            <a href="#markTestIncomplete">markTestIncomplete</a>
          </li>
          <li>
            <a href="#markTestSkipped">markTestSkipped</a>
          </li>
          <li>
            <a href="#matches">matches</a>
          </li>
          <li>
            <a href="#matchesRegularExpression">matchesRegularExpression</a>
          </li>
          <li>
            <a href="#objectHasAttribute">objectHasAttribute</a>
          </li>
          <li>
            <a href="#readAttribute">readAttribute</a>
          </li>
          <li>
            <a href="#resetCount">resetCount</a>
          </li>
          <li>
            <a href="#stringContains">stringContains</a>
          </li>
          <li>
            <a href="#stringEndsWith">stringEndsWith</a>
          </li>
          <li>
            <a href="#stringStartsWith">stringStartsWith</a>
          </li>
        </ul>
      </div>
      <div class="content">
        <h2><span style="font-size:60%">\</span>PHPUnit_Framework_Assert</h2>
        <div class="file-notice">
          <p>A set of assert methods.</p>
        </div>
        <ul class="fileinfos">
          <li><b>Author: </b>Sebastian Bergmann &lt;sebastian@phpunit.de&gt;</li>
          <li><b>Copyright: </b>2001-2013 Sebastian Bergmann &lt;sebastian@phpunit.de&gt;</li>
          <li><b>License: </b>http://www.opensource.org/licenses/BSD-3-Clause  The BSD 3-Clause License</li>
        </ul>
        <h3>Members</h3>
        <ul class="varlist">
          <li>
            <a name="count"/>
            <h4><span class="label private">private</span>integer 
                
                $count</h4>
            <ul class="varlist">
              <li/>
            </ul>
          </li>
        </ul>
        <h3>Methods</h3>
        <ul class="varlist">
          <li>
            <a name="anything"/>
            <h4><span class="label true">true</span><span class="label public">public</span>anything<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_IsAnything matcher object.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="arrayHasKey"/>
            <h4><span class="label true">true</span><span class="label public">public</span>arrayHasKey<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $key</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_ArrayHasKey matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertArrayHasKey"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertArrayHasKey<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $key</strong>, <span class="param-type"><span title="array|ArrayAccess">array|ArrayAccess</span></span><strong> $array</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that an array has a specified key.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - </li>
                <li><code>$array</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertArrayNotHasKey"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertArrayNotHasKey<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $key</strong>, <span class="param-type"><span title="array|ArrayAccess">array|ArrayAccess</span></span><strong> $array</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that an array does not have a specified key.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$key</code> - </li>
                <li><code>$array</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeContains"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeContains<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $needle</strong>, <span class="param-type">string</span><strong> $haystackAttributeName</strong>, <span class="param-type">mixed</span><strong> $haystackClassOrObject</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">boolean</span><strong> $ignoreCase</strong>, <span class="param-type">boolean</span><strong> $checkForObjectIdentity</strong>, <span class="param-type">boolean</span><strong> $checkForNonObjectIdentity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a haystack that is stored in a static attribute of a class or an attribute of an object contains a needle.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$needle</code> - </li>
                <li><code>$haystackAttributeName</code> - </li>
                <li><code>$haystackClassOrObject</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$ignoreCase</code> - </li>
                <li><code>$checkForObjectIdentity</code> - </li>
                <li><code>$checkForNonObjectIdentity</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeContainsOnly"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeContainsOnly<span style="font-size:90%;">( <span class="param-type">string</span><strong> $type</strong>, <span class="param-type">string</span><strong> $haystackAttributeName</strong>, <span class="param-type">mixed</span><strong> $haystackClassOrObject</strong>, <span class="param-type">boolean</span><strong> $isNativeType</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a haystack that is stored in a static attribute of a class or an attribute of an object contains only values of a given type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - </li>
                <li><code>$haystackAttributeName</code> - </li>
                <li><code>$haystackClassOrObject</code> - </li>
                <li><code>$isNativeType</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeCount"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeCount<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $expectedCount</strong>, <span class="param-type">string</span><strong> $haystackAttributeName</strong>, <span class="param-type">mixed</span><strong> $haystackClassOrObject</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts the number of elements of an array, Countable or Traversable that is stored in an attribute.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedCount</code> - </li>
                <li><code>$haystackAttributeName</code> - </li>
                <li><code>$haystackClassOrObject</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeEmpty"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeEmpty<span style="font-size:90%;">( <span class="param-type">string</span><strong> $haystackAttributeName</strong>, <span class="param-type">mixed</span><strong> $haystackClassOrObject</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a static attribute of a class or an attribute of an object is empty.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$haystackAttributeName</code> - </li>
                <li><code>$haystackClassOrObject</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeEquals"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeEquals<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">string</span><strong> $actualAttributeName</strong>, <span class="param-type">string</span><strong> $actualClassOrObject</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">integer</span><strong> $delta</strong>, <span class="param-type">integer</span><strong> $maxDepth</strong>, <span class="param-type">boolean</span><strong> $canonicalize</strong>, <span class="param-type">boolean</span><strong> $ignoreCase</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a variable is equal to an attribute of an object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actualAttributeName</code> - </li>
                <li><code>$actualClassOrObject</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$delta</code> - </li>
                <li><code>$maxDepth</code> - </li>
                <li><code>$canonicalize</code> - </li>
                <li><code>$ignoreCase</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeGreaterThan"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeGreaterThan<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">string</span><strong> $actualAttributeName</strong>, <span class="param-type">string</span><strong> $actualClassOrObject</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that an attribute is greater than another value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actualAttributeName</code> - </li>
                <li><code>$actualClassOrObject</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeGreaterThanOrEqual"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeGreaterThanOrEqual<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">string</span><strong> $actualAttributeName</strong>, <span class="param-type">string</span><strong> $actualClassOrObject</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that an attribute is greater than or equal to another value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actualAttributeName</code> - </li>
                <li><code>$actualClassOrObject</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeInstanceOf"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeInstanceOf<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expected</strong>, <span class="param-type">string</span><strong> $attributeName</strong>, <span class="param-type">mixed</span><strong> $classOrObject</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that an attribute is of a given type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$attributeName</code> - </li>
                <li><code>$classOrObject</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeInternalType"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeInternalType<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expected</strong>, <span class="param-type">string</span><strong> $attributeName</strong>, <span class="param-type">mixed</span><strong> $classOrObject</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that an attribute is of a given type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$attributeName</code> - </li>
                <li><code>$classOrObject</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeLessThan"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeLessThan<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">string</span><strong> $actualAttributeName</strong>, <span class="param-type">string</span><strong> $actualClassOrObject</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that an attribute is smaller than another value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actualAttributeName</code> - </li>
                <li><code>$actualClassOrObject</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeLessThanOrEqual"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeLessThanOrEqual<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">string</span><strong> $actualAttributeName</strong>, <span class="param-type">string</span><strong> $actualClassOrObject</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that an attribute is smaller than or equal to another value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actualAttributeName</code> - </li>
                <li><code>$actualClassOrObject</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeNotContains"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeNotContains<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $needle</strong>, <span class="param-type">string</span><strong> $haystackAttributeName</strong>, <span class="param-type">mixed</span><strong> $haystackClassOrObject</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">boolean</span><strong> $ignoreCase</strong>, <span class="param-type">boolean</span><strong> $checkForObjectIdentity</strong>, <span class="param-type">boolean</span><strong> $checkForNonObjectIdentity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a haystack that is stored in a static attribute of a class or an attribute of an object does not contain a needle.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$needle</code> - </li>
                <li><code>$haystackAttributeName</code> - </li>
                <li><code>$haystackClassOrObject</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$ignoreCase</code> - </li>
                <li><code>$checkForObjectIdentity</code> - </li>
                <li><code>$checkForNonObjectIdentity</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeNotContainsOnly"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeNotContainsOnly<span style="font-size:90%;">( <span class="param-type">string</span><strong> $type</strong>, <span class="param-type">string</span><strong> $haystackAttributeName</strong>, <span class="param-type">mixed</span><strong> $haystackClassOrObject</strong>, <span class="param-type">boolean</span><strong> $isNativeType</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a haystack that is stored in a static attribute of a class or an attribute of an object does not contain only values of a given type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - </li>
                <li><code>$haystackAttributeName</code> - </li>
                <li><code>$haystackClassOrObject</code> - </li>
                <li><code>$isNativeType</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeNotCount"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeNotCount<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $expectedCount</strong>, <span class="param-type">string</span><strong> $haystackAttributeName</strong>, <span class="param-type">mixed</span><strong> $haystackClassOrObject</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts the number of elements of an array, Countable or Traversable that is stored in an attribute.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedCount</code> - </li>
                <li><code>$haystackAttributeName</code> - </li>
                <li><code>$haystackClassOrObject</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeNotEmpty"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeNotEmpty<span style="font-size:90%;">( <span class="param-type">string</span><strong> $haystackAttributeName</strong>, <span class="param-type">mixed</span><strong> $haystackClassOrObject</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a static attribute of a class or an attribute of an object is not empty.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$haystackAttributeName</code> - </li>
                <li><code>$haystackClassOrObject</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeNotEquals"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeNotEquals<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">string</span><strong> $actualAttributeName</strong>, <span class="param-type">string</span><strong> $actualClassOrObject</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">integer</span><strong> $delta</strong>, <span class="param-type">integer</span><strong> $maxDepth</strong>, <span class="param-type">boolean</span><strong> $canonicalize</strong>, <span class="param-type">boolean</span><strong> $ignoreCase</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a variable is not equal to an attribute of an object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actualAttributeName</code> - </li>
                <li><code>$actualClassOrObject</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$delta</code> - </li>
                <li><code>$maxDepth</code> - </li>
                <li><code>$canonicalize</code> - </li>
                <li><code>$ignoreCase</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeNotInstanceOf"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeNotInstanceOf<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expected</strong>, <span class="param-type">string</span><strong> $attributeName</strong>, <span class="param-type">mixed</span><strong> $classOrObject</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that an attribute is of a given type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$attributeName</code> - </li>
                <li><code>$classOrObject</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeNotInternalType"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeNotInternalType<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expected</strong>, <span class="param-type">string</span><strong> $attributeName</strong>, <span class="param-type">mixed</span><strong> $classOrObject</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that an attribute is of a given type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$attributeName</code> - </li>
                <li><code>$classOrObject</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeNotSame"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeNotSame<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">string</span><strong> $actualAttributeName</strong>, <span class="param-type">invalid method call</span><strong> $actualClassOrObject</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a variable and an attribute of an object do not have the same type and value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actualAttributeName</code> - </li>
                <li><code>$actualClassOrObject</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertAttributeSame"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertAttributeSame<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">string</span><strong> $actualAttributeName</strong>, <span class="param-type">invalid method call</span><strong> $actualClassOrObject</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a variable and an attribute of an object have the same type and value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actualAttributeName</code> - </li>
                <li><code>$actualClassOrObject</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertClassHasAttribute"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertClassHasAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $attributeName</strong>, <span class="param-type">string</span><strong> $className</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a class has a specified attribute.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attributeName</code> - </li>
                <li><code>$className</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertClassHasStaticAttribute"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertClassHasStaticAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $attributeName</strong>, <span class="param-type">string</span><strong> $className</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a class has a specified static attribute.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attributeName</code> - </li>
                <li><code>$className</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertClassNotHasAttribute"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertClassNotHasAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $attributeName</strong>, <span class="param-type">string</span><strong> $className</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a class does not have a specified attribute.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attributeName</code> - </li>
                <li><code>$className</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertClassNotHasStaticAttribute"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertClassNotHasStaticAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $attributeName</strong>, <span class="param-type">string</span><strong> $className</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a class does not have a specified static attribute.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attributeName</code> - </li>
                <li><code>$className</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertContains"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertContains<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $needle</strong>, <span class="param-type">mixed</span><strong> $haystack</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">boolean</span><strong> $ignoreCase</strong>, <span class="param-type">boolean</span><strong> $checkForObjectIdentity</strong>, <span class="param-type">boolean</span><strong> $checkForNonObjectIdentity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a haystack contains a needle.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$needle</code> - </li>
                <li><code>$haystack</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$ignoreCase</code> - </li>
                <li><code>$checkForObjectIdentity</code> - </li>
                <li><code>$checkForNonObjectIdentity</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertContainsOnly"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertContainsOnly<span style="font-size:90%;">( <span class="param-type">string</span><strong> $type</strong>, <span class="param-type">mixed</span><strong> $haystack</strong>, <span class="param-type">boolean</span><strong> $isNativeType</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a haystack contains only values of a given type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - </li>
                <li><code>$haystack</code> - </li>
                <li><code>$isNativeType</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertContainsOnlyInstancesOf"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertContainsOnlyInstancesOf<span style="font-size:90%;">( <span class="param-type">string</span><strong> $classname</strong>, <span class="param-type"><span title="array|Traversable">array|Traversable</span></span><strong> $haystack</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a haystack contains only instances of a given classname</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$classname</code> - </li>
                <li><code>$haystack</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertCount"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertCount<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $expectedCount</strong>, <span class="param-type">mixed</span><strong> $haystack</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts the number of elements of an array, Countable or Traversable.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedCount</code> - </li>
                <li><code>$haystack</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertEmpty"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertEmpty<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a variable is empty.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_AssertionFailedError</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertEqualXMLStructure"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertEqualXMLStructure<span style="font-size:90%;">( <span class="param-type"><span title="\\DOMElement">DOMElement</span></span><strong> $expectedElement</strong>, <span class="param-type"><span title="\\DOMElement">DOMElement</span></span><strong> $actualElement</strong>, <span class="param-type">boolean</span><strong> $checkAttributes</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a hierarchy of DOMElements matches.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedElement</code> - </li>
                <li><code>$actualElement</code> - </li>
                <li><code>$checkAttributes</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertEquals"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertEquals<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">integer</span><strong> $delta</strong>, <span class="param-type">integer</span><strong> $maxDepth</strong>, <span class="param-type">boolean</span><strong> $canonicalize</strong>, <span class="param-type">boolean</span><strong> $ignoreCase</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two variables are equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$delta</code> - </li>
                <li><code>$maxDepth</code> - </li>
                <li><code>$canonicalize</code> - </li>
                <li><code>$ignoreCase</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertFalse"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertFalse<span style="font-size:90%;">( <span class="param-type">boolean</span><strong> $condition</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a condition is false.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$condition</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_AssertionFailedError</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertFileEquals"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertFileEquals<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expected</strong>, <span class="param-type">string</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">boolean</span><strong> $canonicalize</strong>, <span class="param-type">boolean</span><strong> $ignoreCase</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that the contents of one file is equal to the contents of another file.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$canonicalize</code> - </li>
                <li><code>$ignoreCase</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertFileExists"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertFileExists<span style="font-size:90%;">( <span class="param-type">string</span><strong> $filename</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a file exists.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$filename</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertFileNotEquals"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertFileNotEquals<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expected</strong>, <span class="param-type">string</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">boolean</span><strong> $canonicalize</strong>, <span class="param-type">boolean</span><strong> $ignoreCase</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that the contents of one file is not equal to the contents of another file.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$canonicalize</code> - </li>
                <li><code>$ignoreCase</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertFileNotExists"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertFileNotExists<span style="font-size:90%;">( <span class="param-type">string</span><strong> $filename</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a file does not exist.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$filename</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertGreaterThan"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertGreaterThan<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a value is greater than another value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertGreaterThanOrEqual"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertGreaterThanOrEqual<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a value is greater than or equal to another value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertInstanceOf"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertInstanceOf<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a variable is of a given type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertInternalType"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertInternalType<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a variable is of a given type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertJson"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertJson<span style="font-size:90%;">( <span class="param-type"/><strong> $expectedJson</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a string is a valid JSON string.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$filename</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertJsonFileEqualsJsonFile"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertJsonFileEqualsJsonFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expectedFile</strong>, <span class="param-type">string</span><strong> $actualFile</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two JSON files are equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedFile</code> - </li>
                <li><code>$actualFile</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertJsonFileNotEqualsJsonFile"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertJsonFileNotEqualsJsonFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expectedFile</strong>, <span class="param-type">string</span><strong> $actualFile</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two JSON files are not equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedFile</code> - </li>
                <li><code>$actualFile</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertJsonStringEqualsJsonFile"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertJsonStringEqualsJsonFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expectedFile</strong>, <span class="param-type">string</span><strong> $actualJson</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that the generated JSON encoded object and the content of the given file are equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedFile</code> - </li>
                <li><code>$actualJson</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertJsonStringEqualsJsonString"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertJsonStringEqualsJsonString<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expectedJson</strong>, <span class="param-type">string</span><strong> $actualJson</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two given JSON encoded objects or arrays are equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedJson</code> - </li>
                <li><code>$actualJson</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertJsonStringNotEqualsJsonFile"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertJsonStringNotEqualsJsonFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expectedFile</strong>, <span class="param-type">string</span><strong> $actualJson</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that the generated JSON encoded object and the content of the given file are not equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedFile</code> - </li>
                <li><code>$actualJson</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertJsonStringNotEqualsJsonString"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertJsonStringNotEqualsJsonString<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expectedJson</strong>, <span class="param-type">string</span><strong> $actualJson</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two given JSON encoded objects or arrays are not equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedJson</code> - </li>
                <li><code>$actualJson</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertLessThan"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertLessThan<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a value is smaller than another value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertLessThanOrEqual"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertLessThanOrEqual<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a value is smaller than or equal to another value.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertNotContains"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertNotContains<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $needle</strong>, <span class="param-type">mixed</span><strong> $haystack</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">boolean</span><strong> $ignoreCase</strong>, <span class="param-type">boolean</span><strong> $checkForObjectIdentity</strong>, <span class="param-type">boolean</span><strong> $checkForNonObjectIdentity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a haystack does not contain a needle.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$needle</code> - </li>
                <li><code>$haystack</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$ignoreCase</code> - </li>
                <li><code>$checkForObjectIdentity</code> - </li>
                <li><code>$checkForNonObjectIdentity</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertNotContainsOnly"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertNotContainsOnly<span style="font-size:90%;">( <span class="param-type">string</span><strong> $type</strong>, <span class="param-type">mixed</span><strong> $haystack</strong>, <span class="param-type">boolean</span><strong> $isNativeType</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a haystack does not contain only values of a given type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - </li>
                <li><code>$haystack</code> - </li>
                <li><code>$isNativeType</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertNotCount"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertNotCount<span style="font-size:90%;">( <span class="param-type">integer</span><strong> $expectedCount</strong>, <span class="param-type">mixed</span><strong> $haystack</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts the number of elements of an array, Countable or Traversable.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedCount</code> - </li>
                <li><code>$haystack</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertNotEmpty"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertNotEmpty<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a variable is not empty.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_AssertionFailedError</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertNotEquals"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertNotEquals<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">integer</span><strong> $delta</strong>, <span class="param-type">integer</span><strong> $maxDepth</strong>, <span class="param-type">boolean</span><strong> $canonicalize</strong>, <span class="param-type">boolean</span><strong> $ignoreCase</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two variables are not equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$delta</code> - </li>
                <li><code>$maxDepth</code> - </li>
                <li><code>$canonicalize</code> - </li>
                <li><code>$ignoreCase</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertNotInstanceOf"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertNotInstanceOf<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a variable is not of a given type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertNotInternalType"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertNotInternalType<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a variable is not of a given type.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertNotNull"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertNotNull<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a variable is not NULL.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertNotRegExp"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertNotRegExp<span style="font-size:90%;">( <span class="param-type">string</span><strong> $pattern</strong>, <span class="param-type">string</span><strong> $string</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a string does not match a given regular expression.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$pattern</code> - </li>
                <li><code>$string</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertNotSame"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertNotSame<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two variables do not have the same type and value.<pre>Used on objects, it asserts that two variables do not reference
the same object.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertNotSameSize"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertNotSameSize<span style="font-size:90%;">( <span class="param-type"><span title="array|Countable|Traversable">array|Countable|Traversable</span></span><strong> $expected</strong>, <span class="param-type"><span title="array|Countable|Traversable">array|Countable|Traversable</span></span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Assert that the size of two arrays (or `Countable` or `Traversable` objects) is not the same.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertNotTag"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertNotTag<span style="font-size:90%;">( <span class="param-type">array</span><strong> $matcher</strong>, <span class="param-type">string</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">boolean</span><strong> $isHtml</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>This assertion is the exact opposite of assertTag().<pre>Rather than asserting that $matcher results in a match, it asserts that
$matcher does not match.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$matcher</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$isHtml</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertNull"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertNull<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a variable is NULL.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertObjectHasAttribute"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertObjectHasAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $attributeName</strong>, <span class="param-type">invalid method call</span><strong> $object</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that an object has a specified attribute.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attributeName</code> - </li>
                <li><code>$object</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertObjectNotHasAttribute"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertObjectNotHasAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $attributeName</strong>, <span class="param-type">invalid method call</span><strong> $object</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that an object does not have a specified attribute.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attributeName</code> - </li>
                <li><code>$object</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertRegExp"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertRegExp<span style="font-size:90%;">( <span class="param-type">string</span><strong> $pattern</strong>, <span class="param-type">string</span><strong> $string</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a string matches a given regular expression.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$pattern</code> - </li>
                <li><code>$string</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertSame"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertSame<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $expected</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two variables have the same type and value.<pre>Used on objects, it asserts that two variables reference
the same object.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertSameSize"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertSameSize<span style="font-size:90%;">( <span class="param-type"><span title="array|Countable|Traversable">array|Countable|Traversable</span></span><strong> $expected</strong>, <span class="param-type"><span title="array|Countable|Traversable">array|Countable|Traversable</span></span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Assert that the size of two arrays (or `Countable` or `Traversable` objects) is the same.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expected</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertSelectCount"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertSelectCount<span style="font-size:90%;">( <span class="param-type">array</span><strong> $selector</strong>, <span class="param-type">integer</span><strong> $count</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">boolean</span><strong> $isHtml</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Assert the presence, absence, or count of elements in a document matching the CSS $selector, regardless of the contents of those elements.<pre>The first argument, $selector, is the CSS selector used to match
the elements in the $actual document.

The second argument, $count, can be either boolean or numeric.
When boolean, it asserts for presence of elements matching the selector
(TRUE) or absence of elements (FALSE).
When numeric, it asserts the count of elements.

assertSelectCount("#binder", true, $xml);  // any?
assertSelectCount(".binder", 3, $xml);     // exactly 3?</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$selector</code> - </li>
                <li><code>$count</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$isHtml</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertSelectEquals"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertSelectEquals<span style="font-size:90%;">( <span class="param-type">array</span><strong> $selector</strong>, <span class="param-type">string</span><strong> $content</strong>, <span class="param-type">integer</span><strong> $count</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">boolean</span><strong> $isHtml</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>assertSelectEquals("#binder .name", "Chuck", true,  $xml);  // any? assertSelectEquals("#binder .name", "Chuck", false, $xml);  // none?</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$selector</code> - </li>
                <li><code>$content</code> - </li>
                <li><code>$count</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$isHtml</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertSelectRegExp"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertSelectRegExp<span style="font-size:90%;">( <span class="param-type">array</span><strong> $selector</strong>, <span class="param-type">string</span><strong> $pattern</strong>, <span class="param-type">integer</span><strong> $count</strong>, <span class="param-type">mixed</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">boolean</span><strong> $isHtml</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>assertSelectRegExp("#binder .name", "/Mike|Derek/", true, $xml); // any? assertSelectRegExp("#binder .name", "/Mike|Derek/", 3, $xml);    // 3?</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$selector</code> - </li>
                <li><code>$pattern</code> - </li>
                <li><code>$count</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$isHtml</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertStringEndsNotWith"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertStringEndsNotWith<span style="font-size:90%;">( <span class="param-type">string</span><strong> $suffix</strong>, <span class="param-type">string</span><strong> $string</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a string ends not with a given suffix.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$suffix</code> - </li>
                <li><code>$string</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertStringEndsWith"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertStringEndsWith<span style="font-size:90%;">( <span class="param-type">string</span><strong> $suffix</strong>, <span class="param-type">string</span><strong> $string</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a string ends with a given suffix.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$suffix</code> - </li>
                <li><code>$string</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertStringEqualsFile"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertStringEqualsFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expectedFile</strong>, <span class="param-type">string</span><strong> $actualString</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">boolean</span><strong> $canonicalize</strong>, <span class="param-type">boolean</span><strong> $ignoreCase</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that the contents of a string is equal to the contents of a file.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedFile</code> - </li>
                <li><code>$actualString</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$canonicalize</code> - </li>
                <li><code>$ignoreCase</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertStringMatchesFormat"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertStringMatchesFormat<span style="font-size:90%;">( <span class="param-type">string</span><strong> $format</strong>, <span class="param-type">string</span><strong> $string</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a string matches a given format string.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$format</code> - </li>
                <li><code>$string</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertStringMatchesFormatFile"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertStringMatchesFormatFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $formatFile</strong>, <span class="param-type">string</span><strong> $string</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a string matches a given format file.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$formatFile</code> - </li>
                <li><code>$string</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertStringNotEqualsFile"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertStringNotEqualsFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expectedFile</strong>, <span class="param-type">string</span><strong> $actualString</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">boolean</span><strong> $canonicalize</strong>, <span class="param-type">boolean</span><strong> $ignoreCase</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that the contents of a string is not equal to the contents of a file.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedFile</code> - </li>
                <li><code>$actualString</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$canonicalize</code> - </li>
                <li><code>$ignoreCase</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertStringNotMatchesFormat"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertStringNotMatchesFormat<span style="font-size:90%;">( <span class="param-type">string</span><strong> $format</strong>, <span class="param-type">string</span><strong> $string</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a string does not match a given format string.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$format</code> - </li>
                <li><code>$string</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertStringNotMatchesFormatFile"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertStringNotMatchesFormatFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $formatFile</strong>, <span class="param-type">string</span><strong> $string</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a string does not match a given format string.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$formatFile</code> - </li>
                <li><code>$string</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertStringStartsNotWith"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertStringStartsNotWith<span style="font-size:90%;">( <span class="param-type">string</span><strong> $prefix</strong>, <span class="param-type">string</span><strong> $string</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a string starts not with a given prefix.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$prefix</code> - </li>
                <li><code>$string</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertStringStartsWith"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertStringStartsWith<span style="font-size:90%;">( <span class="param-type">string</span><strong> $prefix</strong>, <span class="param-type">string</span><strong> $string</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a string starts with a given prefix.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$prefix</code> - </li>
                <li><code>$string</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertTag"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertTag<span style="font-size:90%;">( <span class="param-type">array</span><strong> $matcher</strong>, <span class="param-type">string</span><strong> $actual</strong>, <span class="param-type">string</span><strong> $message</strong>, <span class="param-type">boolean</span><strong> $isHtml</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Evaluate an HTML or XML string and assert its structure and/or contents.<pre>The first argument ($matcher) is an associative array that specifies the
match criteria for the assertion:

 - `id`           : the node with the given id attribute must match the
                    corresponsing value.
 - `tag`          : the node type must match the corresponding value.
 - `attributes`   : a hash. The node's attributres must match the
                    corresponsing values in the hash.
 - `content`      : The text content must match the given value.
 - `parent`       : a hash. The node's parent must match the
                    corresponsing hash.
 - `child`        : a hash. At least one of the node's immediate children
                    must meet the criteria described by the hash.
 - `ancestor`     : a hash. At least one of the node's ancestors must
                    meet the criteria described by the hash.
 - `descendant`   : a hash. At least one of the node's descendants must
                    meet the criteria described by the hash.
 - `children`     : a hash, for counting children of a node.
                    Accepts the keys:
   - `count`        : a number which must equal the number of children
                      that match
   - `less_than`    : the number of matching children must be greater
                      than this number
   - `greater_than` : the number of matching children must be less than
                      this number
   - `only`         : another hash consisting of the keys to use to match
                      on the children, and only matching children will be
                      counted

&lt;code&gt;
// Matcher that asserts that there is an element with an id="my_id".
$matcher = array('id' =&gt; 'my_id');

// Matcher that asserts that there is a "span" tag.
$matcher = array('tag' =&gt; 'span');

// Matcher that asserts that there is a "span" tag with the content
// "Hello World".
$matcher = array('tag' =&gt; 'span', 'content' =&gt; 'Hello World');

// Matcher that asserts that there is a "span" tag with content matching
// the regular expression pattern.
$matcher = array('tag' =&gt; 'span', 'content' =&gt; 'regexp:/Try P(HP|ython)/');

// Matcher that asserts that there is a "span" with an "list" class
// attribute.
$matcher = array(
  'tag'        =&gt; 'span',
  'attributes' =&gt; array('class' =&gt; 'list')
);

// Matcher that asserts that there is a "span" inside of a "div".
$matcher = array(
  'tag'    =&gt; 'span',
  'parent' =&gt; array('tag' =&gt; 'div')
);

// Matcher that asserts that there is a "span" somewhere inside a
// "table".
$matcher = array(
  'tag'      =&gt; 'span',
  'ancestor' =&gt; array('tag' =&gt; 'table')
);

// Matcher that asserts that there is a "span" with at least one "em"
// child.
$matcher = array(
  'tag'   =&gt; 'span',
  'child' =&gt; array('tag' =&gt; 'em')
);

// Matcher that asserts that there is a "span" containing a (possibly
// nested) "strong" tag.
$matcher = array(
  'tag'        =&gt; 'span',
  'descendant' =&gt; array('tag' =&gt; 'strong')
);

// Matcher that asserts that there is a "span" containing 5-10 "em" tags
// as immediate children.
$matcher = array(
  'tag'      =&gt; 'span',
  'children' =&gt; array(
    'less_than'    =&gt; 11,
    'greater_than' =&gt; 4,
    'only'         =&gt; array('tag' =&gt; 'em')
  )
);

// Matcher that asserts that there is a "div", with an "ul" ancestor and
// a "li" parent (with class="enum"), and containing a "span" descendant
// that contains an element with id="my_test" and the text "Hello World".
$matcher = array(
  'tag'        =&gt; 'div',
  'ancestor'   =&gt; array('tag' =&gt; 'ul'),
  'parent'     =&gt; array(
    'tag'        =&gt; 'li',
    'attributes' =&gt; array('class' =&gt; 'enum')
  ),
  'descendant' =&gt; array(
    'tag'   =&gt; 'span',
    'child' =&gt; array(
      'id'      =&gt; 'my_test',
      'content' =&gt; 'Hello World'
    )
  )
);

// Use assertTag() to apply a $matcher to a piece of $html.
$this-&gt;assertTag($matcher, $html);

// Use assertTag() to apply a $matcher to a piece of $xml.
$this-&gt;assertTag($matcher, $xml, '', FALSE);
&lt;/code&gt;

The second argument ($actual) is a string containing either HTML or
XML text to be tested.

The third argument ($message) is an optional message that will be
used if the assertion fails.

The fourth argument ($html) is an optional flag specifying whether
to load the $actual string into a DOMDocument using the HTML or
XML load strategy.  It is TRUE by default, which assumes the HTML
load strategy.  In many cases, this will be acceptable for XML as well.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$matcher</code> - </li>
                <li><code>$actual</code> - </li>
                <li><code>$message</code> - </li>
                <li><code>$isHtml</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertThat"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertThat<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong>, <span class="param-type"><span title="\\PHPUnit_Framework_Constraint">PHPUnit_Framework_Constraint</span></span><strong> $constraint</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Evaluates a PHPUnit_Framework_Constraint matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
                <li><code>$constraint</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertTrue"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertTrue<span style="font-size:90%;">( <span class="param-type">boolean</span><strong> $condition</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that a condition is true.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$condition</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_AssertionFailedError</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertXmlFileEqualsXmlFile"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertXmlFileEqualsXmlFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expectedFile</strong>, <span class="param-type">string</span><strong> $actualFile</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two XML files are equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedFile</code> - </li>
                <li><code>$actualFile</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertXmlFileNotEqualsXmlFile"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertXmlFileNotEqualsXmlFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expectedFile</strong>, <span class="param-type">string</span><strong> $actualFile</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two XML files are not equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedFile</code> - </li>
                <li><code>$actualFile</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertXmlStringEqualsXmlFile"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertXmlStringEqualsXmlFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expectedFile</strong>, <span class="param-type">string</span><strong> $actualXml</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two XML documents are equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedFile</code> - </li>
                <li><code>$actualXml</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertXmlStringEqualsXmlString"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertXmlStringEqualsXmlString<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expectedXml</strong>, <span class="param-type">string</span><strong> $actualXml</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two XML documents are equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedXml</code> - </li>
                <li><code>$actualXml</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertXmlStringNotEqualsXmlFile"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertXmlStringNotEqualsXmlFile<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expectedFile</strong>, <span class="param-type">string</span><strong> $actualXml</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two XML documents are not equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedFile</code> - </li>
                <li><code>$actualXml</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="assertXmlStringNotEqualsXmlString"/>
            <h4><span class="label true">true</span><span class="label public">public</span>assertXmlStringNotEqualsXmlString<span style="font-size:90%;">( <span class="param-type">string</span><strong> $expectedXml</strong>, <span class="param-type">string</span><strong> $actualXml</strong>, <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Asserts that two XML documents are not equal.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$expectedXml</code> - </li>
                <li><code>$actualXml</code> - </li>
                <li><code>$message</code> - </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="attribute"/>
            <h4><span class="label true">true</span><span class="label public">public</span>attribute<span style="font-size:90%;">( <span class="param-type"><span title="\\PHPUnit_Framework_Constraint">PHPUnit_Framework_Constraint</span></span><strong> $constraint</strong>, <span class="param-type">string</span><strong> $attributeName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_Attribute matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$constraint</code> - </li>
                <li><code>$attributeName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="attributeEqualTo"/>
            <h4><span class="label true">true</span><span class="label public">public</span>attributeEqualTo<span style="font-size:90%;">( <span class="param-type">string</span><strong> $attributeName</strong>, <span class="param-type">mixed</span><strong> $value</strong>, <span class="param-type">integer</span><strong> $delta</strong>, <span class="param-type">integer</span><strong> $maxDepth</strong>, <span class="param-type">boolean</span><strong> $canonicalize</strong>, <span class="param-type">boolean</span><strong> $ignoreCase</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_IsEqual matcher object that is wrapped in a PHPUnit_Framework_Constraint_Attribute matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attributeName</code> - </li>
                <li><code>$value</code> - </li>
                <li><code>$delta</code> - </li>
                <li><code>$maxDepth</code> - </li>
                <li><code>$canonicalize</code> - </li>
                <li><code>$ignoreCase</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="callback"/>
            <h4><span class="label true">true</span><span class="label public">public</span>callback<span style="font-size:90%;">( <span class="param-type"><span title="callable">callable</span></span><strong> $callback</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_Callback matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$callback</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="classHasAttribute"/>
            <h4><span class="label true">true</span><span class="label public">public</span>classHasAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $attributeName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_ClassHasAttribute matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attributeName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="classHasStaticAttribute"/>
            <h4><span class="label true">true</span><span class="label public">public</span>classHasStaticAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $attributeName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_ClassHasStaticAttribute matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attributeName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="contains"/>
            <h4><span class="label true">true</span><span class="label public">public</span>contains<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong>, <span class="param-type">boolean</span><strong> $checkForObjectIdentity</strong>, <span class="param-type">boolean</span><strong> $checkForNonObjectIdentity</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_TraversableContains matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
                <li><code>$checkForObjectIdentity</code> - </li>
                <li><code>$checkForNonObjectIdentity</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="containsOnly"/>
            <h4><span class="label true">true</span><span class="label public">public</span>containsOnly<span style="font-size:90%;">( <span class="param-type">string</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_TraversableContainsOnly matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="containsOnlyInstancesOf"/>
            <h4><span class="label true">true</span><span class="label public">public</span>containsOnlyInstancesOf<span style="font-size:90%;">( <span class="param-type">string</span><strong> $classname</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_TraversableContainsOnly matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$classname</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="countOf"/>
            <h4><span class="label true">true</span><span class="label public">public</span>countOf<span style="font-size:90%;">( <span class="param-type">int</span><strong> $count</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_Count matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$count</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="equalTo"/>
            <h4><span class="label true">true</span><span class="label public">public</span>equalTo<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong>, <span class="param-type">integer</span><strong> $delta</strong>, <span class="param-type">integer</span><strong> $maxDepth</strong>, <span class="param-type">boolean</span><strong> $canonicalize</strong>, <span class="param-type">boolean</span><strong> $ignoreCase</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_IsEqual matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
                <li><code>$delta</code> - </li>
                <li><code>$maxDepth</code> - </li>
                <li><code>$canonicalize</code> - </li>
                <li><code>$ignoreCase</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="fail"/>
            <h4><span class="label true">true</span><span class="label public">public</span>fail<span style="font-size:90%;">( <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Fails a test with the given message.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$message</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_AssertionFailedError</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="fileExists"/>
            <h4><span class="label true">true</span><span class="label public">public</span>fileExists<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_FileExists matcher object.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getCount"/>
            <h4><span class="label true">true</span><span class="label public">public</span>getCount<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Return the current assertion count.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="greaterThan"/>
            <h4><span class="label true">true</span><span class="label public">public</span>greaterThan<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_GreaterThan matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="greaterThanOrEqual"/>
            <h4><span class="label true">true</span><span class="label public">public</span>greaterThanOrEqual<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_Or matcher object that wraps a PHPUnit_Framework_Constraint_IsEqual and a PHPUnit_Framework_Constraint_GreaterThan matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="identicalTo"/>
            <h4><span class="label true">true</span><span class="label public">public</span>identicalTo<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_IsIdentical matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isEmpty"/>
            <h4><span class="label true">true</span><span class="label public">public</span>isEmpty<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_IsEmpty matcher object.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isFalse"/>
            <h4><span class="label true">true</span><span class="label public">public</span>isFalse<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_IsFalse matcher object.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isInstanceOf"/>
            <h4><span class="label true">true</span><span class="label public">public</span>isInstanceOf<span style="font-size:90%;">( <span class="param-type">string</span><strong> $className</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_IsInstanceOf matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$className</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isJson"/>
            <h4><span class="label true">true</span><span class="label public">public</span>isJson<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_IsJson matcher object.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isNull"/>
            <h4><span class="label true">true</span><span class="label public">public</span>isNull<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_IsNull matcher object.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isTrue"/>
            <h4><span class="label true">true</span><span class="label public">public</span>isTrue<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_IsTrue matcher object.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="isType"/>
            <h4><span class="label true">true</span><span class="label public">public</span>isType<span style="font-size:90%;">( <span class="param-type">string</span><strong> $type</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_IsType matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$type</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="lessThan"/>
            <h4><span class="label true">true</span><span class="label public">public</span>lessThan<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_LessThan matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="lessThanOrEqual"/>
            <h4><span class="label true">true</span><span class="label public">public</span>lessThanOrEqual<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $value</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_Or matcher object that wraps a PHPUnit_Framework_Constraint_IsEqual and a PHPUnit_Framework_Constraint_LessThan matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$value</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="logicalAnd"/>
            <h4><span class="label true">true</span><span class="label public">public</span>logicalAnd<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_And matcher object.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="logicalNot"/>
            <h4><span class="label true">true</span><span class="label public">public</span>logicalNot<span style="font-size:90%;">( <span class="param-type"><span title="\\PHPUnit_Framework_Constraint">PHPUnit_Framework_Constraint</span></span><strong> $constraint</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_Not matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$constraint</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="logicalOr"/>
            <h4><span class="label true">true</span><span class="label public">public</span>logicalOr<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_Or matcher object.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="logicalXor"/>
            <h4><span class="label true">true</span><span class="label public">public</span>logicalXor<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_Xor matcher object.</li>
            </p>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="markTestIncomplete"/>
            <h4><span class="label true">true</span><span class="label public">public</span>markTestIncomplete<span style="font-size:90%;">( <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Mark the test as incomplete.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$message</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_IncompleteTestError</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="markTestSkipped"/>
            <h4><span class="label true">true</span><span class="label public">public</span>markTestSkipped<span style="font-size:90%;">( <span class="param-type">string</span><strong> $message</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Mark the test as skipped.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$message</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_SkippedTestError</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="matches"/>
            <h4><span class="label true">true</span><span class="label public">public</span>matches<span style="font-size:90%;">( <span class="param-type">string</span><strong> $string</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_StringMatches matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$string</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="matchesRegularExpression"/>
            <h4><span class="label true">true</span><span class="label public">public</span>matchesRegularExpression<span style="font-size:90%;">( <span class="param-type">string</span><strong> $pattern</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_PCREMatch matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$pattern</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="objectHasAttribute"/>
            <h4><span class="label true">true</span><span class="label public">public</span>objectHasAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $attributeName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_ObjectHasAttribute matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$attributeName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="readAttribute"/>
            <h4><span class="label true">true</span><span class="label public">public</span>readAttribute<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $classOrObject</strong>, <span class="param-type">string</span><strong> $attributeName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the value of an attribute of a class or an object.<pre>This also works for attributes that are declared protected or private.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$classOrObject</code> - </li>
                <li><code>$attributeName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_Exception</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="resetCount"/>
            <h4><span class="label true">true</span><span class="label public">public</span>resetCount<span style="font-size:90%;">(  )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Reset the assertion counter.</li>
            </p>
          </li>
          <li>
            <a name="stringContains"/>
            <h4><span class="label true">true</span><span class="label public">public</span>stringContains<span style="font-size:90%;">( <span class="param-type">string</span><strong> $string</strong>, <span class="param-type">boolean</span><strong> $case</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_StringContains matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$string</code> - </li>
                <li><code>$case</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="stringEndsWith"/>
            <h4><span class="label true">true</span><span class="label public">public</span>stringEndsWith<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $suffix</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_StringEndsWith matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$suffix</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="stringStartsWith"/>
            <h4><span class="label true">true</span><span class="label public">public</span>stringStartsWith<span style="font-size:90%;">( <span class="param-type">mixed</span><strong> $prefix</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns a PHPUnit_Framework_Constraint_StringStartsWith matcher object.</li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$prefix</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getObjectAttribute"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>getObjectAttribute<span style="font-size:90%;">( <span class="param-type">invalid method call</span><strong> $object</strong>, <span class="param-type">string</span><strong> $attributeName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the value of an object's attribute.<pre>This also works for attributes that are declared protected or private.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$object</code> - </li>
                <li><code>$attributeName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_Exception</code>
                </li>
              </ul>
            </ul>
          </li>
          <li>
            <a name="getStaticAttribute"/>
            <h4><span class="label true">true</span><span class="label protected">protected</span>getStaticAttribute<span style="font-size:90%;">( <span class="param-type">string</span><strong> $className</strong>, <span class="param-type">string</span><strong> $attributeName</strong> )</span></h4>
            <p style="font-size:110%; padding-top:5px;">
              <li>Returns the value of a static attribute.<pre>This also works for attributes that are declared protected or private.</pre></li>
            </p>
            <ul>
              <h4 class="param">Parameters:</h4>
              <ul class="param">
                <li><code>$className</code> - </li>
                <li><code>$attributeName</code> - </li>
              </ul>
            </ul>
            <ul>
              <h4 class="return">Returns:</h4>
              <ul class="return">
                <li/>
              </ul>
            </ul>
            <ul>
              <h4 class="throws">Throws:</h4>
              <ul class="throws">
                <li>
                  <code>PHPUnit_Framework_Exception</code>
                </li>
              </ul>
            </ul>
          </li>
        </ul>
        <div class="footer">Generated using phpDox 0.5-38-gec79141-dirty - Copyright (C) 2010 - 2013 by Arne Blankerts</div>
      </div>
    </div>
  </body>
</html>
